
AVRASM ver. 2.2.6  C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\main.asm Tue Oct 24 22:14:27 2017

[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\main.asm(1): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\main.asm(2): Including file 'C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\map.inc'
[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\main.asm(1): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\main.asm(2): Including file 'C:\Users\lmcmz\Documents\Atmel Studio\7.0\Project\Project\map.inc'
                                 
                                 .include "m2560def.inc"
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega2560.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m2560def.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega2560
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega2560
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M2560DEF_INC_
                                 #define _M2560DEF_INC_
                                 
                                 
                                 #pragma partinc 0
                                 
                                 ; ***** SPECIFY DEVICE ***************************************************
                                 .device ATmega2560
                                 #pragma AVRPART ADMIN PART_NAME ATmega2560
                                 .equ	SIGNATURE_000	= 0x1e
                                 .equ	SIGNATURE_001	= 0x98
                                 .equ	SIGNATURE_002	= 0x01
                                 
                                 #pragma AVRPART CORE CORE_VERSION V3
                                 
                                 
                                 ; ***** I/O REGISTER DEFINITIONS *****************************************
                                 ; NOTE:
                                 ; Definitions marked "MEMORY MAPPED"are extended I/O ports
                                 ; and cannot be used with IN/OUT instructions
                                 .equ	UDR3	= 0x136	; MEMORY MAPPED
                                 .equ	UBRR3L	= 0x134	; MEMORY MAPPED
                                 .equ	UBRR3H	= 0x135	; MEMORY MAPPED
                                 .equ	UCSR3C	= 0x132	; MEMORY MAPPED
                                 .equ	UCSR3B	= 0x131	; MEMORY MAPPED
                                 .equ	UCSR3A	= 0x130	; MEMORY MAPPED
                                 .equ	OCR5CL	= 0x12c	; MEMORY MAPPED
                                 .equ	OCR5CH	= 0x12d	; MEMORY MAPPED
                                 .equ	OCR5BL	= 0x12a	; MEMORY MAPPED
                                 .equ	OCR5BH	= 0x12b	; MEMORY MAPPED
                                 .equ	OCR5AL	= 0x128	; MEMORY MAPPED
                                 .equ	OCR5AH	= 0x129	; MEMORY MAPPED
                                 .equ	ICR5H	= 0x127	; MEMORY MAPPED
                                 .equ	ICR5L	= 0x126	; MEMORY MAPPED
                                 .equ	TCNT5L	= 0x124	; MEMORY MAPPED
                                 .equ	TCNT5H	= 0x125	; MEMORY MAPPED
                                 .equ	TCCR5C	= 0x122	; MEMORY MAPPED
                                 .equ	TCCR5B	= 0x121	; MEMORY MAPPED
                                 .equ	TCCR5A	= 0x120	; MEMORY MAPPED
                                 .equ	PORTL	= 0x10b	; MEMORY MAPPED
                                 .equ	DDRL	= 0x10a	; MEMORY MAPPED
                                 .equ	PINL	= 0x109	; MEMORY MAPPED
                                 .equ	PORTK	= 0x108	; MEMORY MAPPED
                                 .equ	DDRK	= 0x107	; MEMORY MAPPED
                                 .equ	PINK	= 0x106	; MEMORY MAPPED
                                 .equ	PORTJ	= 0x105	; MEMORY MAPPED
                                 .equ	DDRJ	= 0x104	; MEMORY MAPPED
                                 .equ	PINJ	= 0x103	; MEMORY MAPPED
                                 .equ	PORTH	= 0x102	; MEMORY MAPPED
                                 .equ	DDRH	= 0x101	; MEMORY MAPPED
                                 .equ	PINH	= 0x100	; MEMORY MAPPED
                                 .equ	UDR2	= 0xd6	; MEMORY MAPPED
                                 .equ	UBRR2L	= 0xd4	; MEMORY MAPPED
                                 .equ	UBRR2H	= 0xd5	; MEMORY MAPPED
                                 .equ	UCSR2C	= 0xd2	; MEMORY MAPPED
                                 .equ	UCSR2B	= 0xd1	; MEMORY MAPPED
                                 .equ	UCSR2A	= 0xd0	; MEMORY MAPPED
                                 .equ	UDR1	= 0xce	; MEMORY MAPPED
                                 .equ	UBRR1L	= 0xcc	; MEMORY MAPPED
                                 .equ	UBRR1H	= 0xcd	; MEMORY MAPPED
                                 .equ	UCSR1C	= 0xca	; MEMORY MAPPED
                                 .equ	UCSR1B	= 0xc9	; MEMORY MAPPED
                                 .equ	UCSR1A	= 0xc8	; MEMORY MAPPED
                                 .equ	UDR0	= 0xc6	; MEMORY MAPPED
                                 .equ	UBRR0L	= 0xc4	; MEMORY MAPPED
                                 .equ	UBRR0H	= 0xc5	; MEMORY MAPPED
                                 .equ	UCSR0C	= 0xc2	; MEMORY MAPPED
                                 .equ	UCSR0B	= 0xc1	; MEMORY MAPPED
                                 .equ	UCSR0A	= 0xc0	; MEMORY MAPPED
                                 .equ	TWAMR	= 0xbd	; MEMORY MAPPED
                                 .equ	TWCR	= 0xbc	; MEMORY MAPPED
                                 .equ	TWDR	= 0xbb	; MEMORY MAPPED
                                 .equ	TWAR	= 0xba	; MEMORY MAPPED
                                 .equ	TWSR	= 0xb9	; MEMORY MAPPED
                                 .equ	TWBR	= 0xb8	; MEMORY MAPPED
                                 .equ	ASSR	= 0xb6	; MEMORY MAPPED
                                 .equ	OCR2B	= 0xb4	; MEMORY MAPPED
                                 .equ	OCR2A	= 0xb3	; MEMORY MAPPED
                                 .equ	TCNT2	= 0xb2	; MEMORY MAPPED
                                 .equ	TCCR2B	= 0xb1	; MEMORY MAPPED
                                 .equ	TCCR2A	= 0xb0	; MEMORY MAPPED
                                 .equ	OCR4CL	= 0xac	; MEMORY MAPPED
                                 .equ	OCR4CH	= 0xad	; MEMORY MAPPED
                                 .equ	OCR4BL	= 0xaa	; MEMORY MAPPED
                                 .equ	OCR4BH	= 0xab	; MEMORY MAPPED
                                 .equ	OCR4AL	= 0xa8	; MEMORY MAPPED
                                 .equ	OCR4AH	= 0xa9	; MEMORY MAPPED
                                 .equ	ICR4L	= 0xa6	; MEMORY MAPPED
                                 .equ	ICR4H	= 0xa7	; MEMORY MAPPED
                                 .equ	TCNT4L	= 0xa4	; MEMORY MAPPED
                                 .equ	TCNT4H	= 0xa5	; MEMORY MAPPED
                                 .equ	TCCR4C	= 0xa2	; MEMORY MAPPED
                                 .equ	TCCR4B	= 0xa1	; MEMORY MAPPED
                                 .equ	TCCR4A	= 0xa0	; MEMORY MAPPED
                                 .equ	OCR3CL	= 0x9c	; MEMORY MAPPED
                                 .equ	OCR3CH	= 0x9d	; MEMORY MAPPED
                                 .equ	OCR3BL	= 0x9a	; MEMORY MAPPED
                                 .equ	OCR3BH	= 0x9b	; MEMORY MAPPED
                                 .equ	OCR3AL	= 0x98	; MEMORY MAPPED
                                 .equ	OCR3AH	= 0x99	; MEMORY MAPPED
                                 .equ	ICR3L	= 0x96	; MEMORY MAPPED
                                 .equ	ICR3H	= 0x97	; MEMORY MAPPED
                                 .equ	TCNT3L	= 0x94	; MEMORY MAPPED
                                 .equ	TCNT3H	= 0x95	; MEMORY MAPPED
                                 .equ	TCCR3C	= 0x92	; MEMORY MAPPED
                                 .equ	TCCR3B	= 0x91	; MEMORY MAPPED
                                 .equ	TCCR3A	= 0x90	; MEMORY MAPPED
                                 .equ	OCR1CL	= 0x8c	; MEMORY MAPPED
                                 .equ	OCR1CH	= 0x8d	; MEMORY MAPPED
                                 .equ	OCR1BL	= 0x8a	; MEMORY MAPPED
                                 .equ	OCR1BH	= 0x8b	; MEMORY MAPPED
                                 .equ	OCR1AL	= 0x88	; MEMORY MAPPED
                                 .equ	OCR1AH	= 0x89	; MEMORY MAPPED
                                 .equ	ICR1L	= 0x86	; MEMORY MAPPED
                                 .equ	ICR1H	= 0x87	; MEMORY MAPPED
                                 .equ	TCNT1L	= 0x84	; MEMORY MAPPED
                                 .equ	TCNT1H	= 0x85	; MEMORY MAPPED
                                 .equ	TCCR1C	= 0x82	; MEMORY MAPPED
                                 .equ	TCCR1B	= 0x81	; MEMORY MAPPED
                                 .equ	TCCR1A	= 0x80	; MEMORY MAPPED
                                 .equ	DIDR1	= 0x7f	; MEMORY MAPPED
                                 .equ	DIDR0	= 0x7e	; MEMORY MAPPED
                                 .equ	DIDR2	= 0x7d	; MEMORY MAPPED
                                 .equ	ADMUX	= 0x7c	; MEMORY MAPPED
                                 .equ	ADCSRB	= 0x7b	; MEMORY MAPPED
                                 .equ	ADCSRA	= 0x7a	; MEMORY MAPPED
                                 .equ	ADCH	= 0x79	; MEMORY MAPPED
                                 .equ	ADCL	= 0x78	; MEMORY MAPPED
                                 .equ	XMCRB	= 0x75	; MEMORY MAPPED
                                 .equ	XMCRA	= 0x74	; MEMORY MAPPED
                                 .equ	TIMSK5	= 0x73	; MEMORY MAPPED
                                 .equ	TIMSK4	= 0x72	; MEMORY MAPPED
                                 .equ	TIMSK3	= 0x71	; MEMORY MAPPED
                                 .equ	TIMSK2	= 0x70	; MEMORY MAPPED
                                 .equ	TIMSK1	= 0x6f	; MEMORY MAPPED
                                 .equ	TIMSK0	= 0x6e	; MEMORY MAPPED
                                 .equ	PCMSK2	= 0x6d	; MEMORY MAPPED
                                 .equ	PCMSK1	= 0x6c	; MEMORY MAPPED
                                 .equ	PCMSK0	= 0x6b	; MEMORY MAPPED
                                 .equ	EICRB	= 0x6a	; MEMORY MAPPED
                                 .equ	EICRA	= 0x69	; MEMORY MAPPED
                                 .equ	PCICR	= 0x68	; MEMORY MAPPED
                                 .equ	OSCCAL	= 0x66	; MEMORY MAPPED
                                 .equ	PRR1	= 0x65	; MEMORY MAPPED
                                 .equ	PRR0	= 0x64	; MEMORY MAPPED
                                 .equ	CLKPR	= 0x61	; MEMORY MAPPED
                                 .equ	WDTCSR	= 0x60	; MEMORY MAPPED
                                 .equ	SREG	= 0x3f
                                 .equ	SPL	= 0x3d
                                 .equ	SPH	= 0x3e
                                 .equ	EIND	= 0x3c
                                 .equ	RAMPZ	= 0x3b
                                 .equ	SPMCSR	= 0x37
                                 .equ	MCUCR	= 0x35
                                 .equ	MCUSR	= 0x34
                                 .equ	SMCR	= 0x33
                                 .equ	OCDR	= 0x31
                                 .equ	ACSR	= 0x30
                                 .equ	SPDR	= 0x2e
                                 .equ	SPSR	= 0x2d
                                 .equ	SPCR	= 0x2c
                                 .equ	GPIOR2	= 0x2b
                                 .equ	GPIOR1	= 0x2a
                                 .equ	OCR0B	= 0x28
                                 .equ	OCR0A	= 0x27
                                 .equ	TCNT0	= 0x26
                                 .equ	TCCR0B	= 0x25
                                 .equ	TCCR0A	= 0x24
                                 .equ	GTCCR	= 0x23
                                 .equ	EEARH	= 0x22
                                 .equ	EEARL	= 0x21
                                 .equ	EEDR	= 0x20
                                 .equ	EECR	= 0x1f
                                 .equ	GPIOR0	= 0x1e
                                 .equ	EIMSK	= 0x1d
                                 .equ	EIFR	= 0x1c
                                 .equ	PCIFR	= 0x1b
                                 .equ	TIFR5	= 0x1a
                                 .equ	TIFR4	= 0x19
                                 .equ	TIFR3	= 0x18
                                 .equ	TIFR2	= 0x17
                                 .equ	TIFR1	= 0x16
                                 .equ	TIFR0	= 0x15
                                 .equ	PORTG	= 0x14
                                 .equ	DDRG	= 0x13
                                 .equ	PING	= 0x12
                                 .equ	PORTF	= 0x11
                                 .equ	DDRF	= 0x10
                                 .equ	PINF	= 0x0f
                                 .equ	PORTE	= 0x0e
                                 .equ	DDRE	= 0x0d
                                 .equ	PINE	= 0x0c
                                 .equ	PORTD	= 0x0b
                                 .equ	DDRD	= 0x0a
                                 .equ	PIND	= 0x09
                                 .equ	PORTC	= 0x08
                                 .equ	DDRC	= 0x07
                                 .equ	PINC	= 0x06
                                 .equ	PORTB	= 0x05
                                 .equ	DDRB	= 0x04
                                 .equ	PINB	= 0x03
                                 .equ	PORTA	= 0x02
                                 .equ	DDRA	= 0x01
                                 .equ	PINA	= 0x00
                                 
                                 
                                 ; ***** BIT DEFINITIONS **************************************************
                                 
                                 ; ***** ANALOG_COMPARATOR ************
                                 ; ADCSRB - ADC Control and Status Register B
                                 .equ	ACME	= 6	; Analog Comparator Multiplexer Enable
                                 
                                 ; ACSR - Analog Comparator Control And Status Register
                                 .equ	ACIS0	= 0	; Analog Comparator Interrupt Mode Select bit 0
                                 .equ	ACIS1	= 1	; Analog Comparator Interrupt Mode Select bit 1
                                 .equ	ACIC	= 2	; Analog Comparator Input Capture Enable
                                 .equ	ACIE	= 3	; Analog Comparator Interrupt Enable
                                 .equ	ACI	= 4	; Analog Comparator Interrupt Flag
                                 .equ	ACO	= 5	; Analog Compare Output
                                 .equ	ACBG	= 6	; Analog Comparator Bandgap Select
                                 .equ	ACD	= 7	; Analog Comparator Disable
                                 
                                 ; DIDR1 - Digital Input Disable Register 1
                                 .equ	AIN0D	= 0	; AIN0 Digital Input Disable
                                 .equ	AIN1D	= 1	; AIN1 Digital Input Disable
                                 
                                 
                                 ; ***** USART0 ***********************
                                 ; UDR0 - USART I/O Data Register
                                 .equ	UDR0_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR0_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR0_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR0_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR0_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR0_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR0_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR0_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR0A - USART Control and Status Register A
                                 .equ	MPCM0	= 0	; Multi-processor Communication Mode
                                 .equ	U2X0	= 1	; Double the USART transmission speed
                                 .equ	UPE0	= 2	; Parity Error
                                 .equ	DOR0	= 3	; Data overRun
                                 .equ	FE0	= 4	; Framing Error
                                 .equ	UDRE0	= 5	; USART Data Register Empty
                                 .equ	TXC0	= 6	; USART Transmitt Complete
                                 .equ	RXC0	= 7	; USART Receive Complete
                                 
                                 ; UCSR0B - USART Control and Status Register B
                                 .equ	TXB80	= 0	; Transmit Data Bit 8
                                 .equ	RXB80	= 1	; Receive Data Bit 8
                                 .equ	UCSZ02	= 2	; Character Size
                                 .equ	TXEN0	= 3	; Transmitter Enable
                                 .equ	RXEN0	= 4	; Receiver Enable
                                 .equ	UDRIE0	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE0	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE0	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR0C - USART Control and Status Register C
                                 .equ	UCPOL0	= 0	; Clock Polarity
                                 .equ	UCSZ00	= 1	; Character Size
                                 .equ	UCPHA0	= UCSZ00	; For compatibility
                                 .equ	UCSZ01	= 2	; Character Size
                                 .equ	UDORD0	= UCSZ01	; For compatibility
                                 .equ	USBS0	= 3	; Stop Bit Select
                                 .equ	UPM00	= 4	; Parity Mode Bit 0
                                 .equ	UPM01	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL00	= 6	; USART Mode Select
                                 .equ	UMSEL0	= UMSEL00	; For compatibility
                                 .equ	UMSEL01	= 7	; USART Mode Select
                                 .equ	UMSEL1	= UMSEL01	; For compatibility
                                 
                                 ; UBRR0H - USART Baud Rate Register High Byte
                                 .equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR0L - USART Baud Rate Register Low Byte
                                 .equ	_UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	_UBRR1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** TWI **************************
                                 ; TWAMR - TWI (Slave) Address Mask Register
                                 .equ	TWAM0	= 1	; 
                                 .equ	TWAMR0	= TWAM0	; For compatibility
                                 .equ	TWAM1	= 2	; 
                                 .equ	TWAMR1	= TWAM1	; For compatibility
                                 .equ	TWAM2	= 3	; 
                                 .equ	TWAMR2	= TWAM2	; For compatibility
                                 .equ	TWAM3	= 4	; 
                                 .equ	TWAMR3	= TWAM3	; For compatibility
                                 .equ	TWAM4	= 5	; 
                                 .equ	TWAMR4	= TWAM4	; For compatibility
                                 .equ	TWAM5	= 6	; 
                                 .equ	TWAMR5	= TWAM5	; For compatibility
                                 .equ	TWAM6	= 7	; 
                                 .equ	TWAMR6	= TWAM6	; For compatibility
                                 
                                 ; TWBR - TWI Bit Rate register
                                 .equ	TWBR0	= 0	; 
                                 .equ	TWBR1	= 1	; 
                                 .equ	TWBR2	= 2	; 
                                 .equ	TWBR3	= 3	; 
                                 .equ	TWBR4	= 4	; 
                                 .equ	TWBR5	= 5	; 
                                 .equ	TWBR6	= 6	; 
                                 .equ	TWBR7	= 7	; 
                                 
                                 ; TWCR - TWI Control Register
                                 .equ	TWIE	= 0	; TWI Interrupt Enable
                                 .equ	TWEN	= 2	; TWI Enable Bit
                                 .equ	TWWC	= 3	; TWI Write Collition Flag
                                 .equ	TWSTO	= 4	; TWI Stop Condition Bit
                                 .equ	TWSTA	= 5	; TWI Start Condition Bit
                                 .equ	TWEA	= 6	; TWI Enable Acknowledge Bit
                                 .equ	TWINT	= 7	; TWI Interrupt Flag
                                 
                                 ; TWSR - TWI Status Register
                                 .equ	TWPS0	= 0	; TWI Prescaler
                                 .equ	TWPS1	= 1	; TWI Prescaler
                                 .equ	TWS3	= 3	; TWI Status
                                 .equ	TWS4	= 4	; TWI Status
                                 .equ	TWS5	= 5	; TWI Status
                                 .equ	TWS6	= 6	; TWI Status
                                 .equ	TWS7	= 7	; TWI Status
                                 
                                 ; TWDR - TWI Data register
                                 .equ	TWD0	= 0	; TWI Data Register Bit 0
                                 .equ	TWD1	= 1	; TWI Data Register Bit 1
                                 .equ	TWD2	= 2	; TWI Data Register Bit 2
                                 .equ	TWD3	= 3	; TWI Data Register Bit 3
                                 .equ	TWD4	= 4	; TWI Data Register Bit 4
                                 .equ	TWD5	= 5	; TWI Data Register Bit 5
                                 .equ	TWD6	= 6	; TWI Data Register Bit 6
                                 .equ	TWD7	= 7	; TWI Data Register Bit 7
                                 
                                 ; TWAR - TWI (Slave) Address register
                                 .equ	TWGCE	= 0	; TWI General Call Recognition Enable Bit
                                 .equ	TWA0	= 1	; TWI (Slave) Address register Bit 0
                                 .equ	TWA1	= 2	; TWI (Slave) Address register Bit 1
                                 .equ	TWA2	= 3	; TWI (Slave) Address register Bit 2
                                 .equ	TWA3	= 4	; TWI (Slave) Address register Bit 3
                                 .equ	TWA4	= 5	; TWI (Slave) Address register Bit 4
                                 .equ	TWA5	= 6	; TWI (Slave) Address register Bit 5
                                 .equ	TWA6	= 7	; TWI (Slave) Address register Bit 6
                                 
                                 
                                 ; ***** SPI **************************
                                 ; SPDR - SPI Data Register
                                 .equ	SPDR0	= 0	; SPI Data Register bit 0
                                 .equ	SPDR1	= 1	; SPI Data Register bit 1
                                 .equ	SPDR2	= 2	; SPI Data Register bit 2
                                 .equ	SPDR3	= 3	; SPI Data Register bit 3
                                 .equ	SPDR4	= 4	; SPI Data Register bit 4
                                 .equ	SPDR5	= 5	; SPI Data Register bit 5
                                 .equ	SPDR6	= 6	; SPI Data Register bit 6
                                 .equ	SPDR7	= 7	; SPI Data Register bit 7
                                 
                                 ; SPSR - SPI Status Register
                                 .equ	SPI2X	= 0	; Double SPI Speed Bit
                                 .equ	WCOL	= 6	; Write Collision Flag
                                 .equ	SPIF	= 7	; SPI Interrupt Flag
                                 
                                 ; SPCR - SPI Control Register
                                 .equ	SPR0	= 0	; SPI Clock Rate Select 0
                                 .equ	SPR1	= 1	; SPI Clock Rate Select 1
                                 .equ	CPHA	= 2	; Clock Phase
                                 .equ	CPOL	= 3	; Clock polarity
                                 .equ	MSTR	= 4	; Master/Slave Select
                                 .equ	DORD	= 5	; Data Order
                                 .equ	SPE	= 6	; SPI Enable
                                 .equ	SPIE	= 7	; SPI Interrupt Enable
                                 
                                 
                                 ; ***** PORTA ************************
                                 ; PORTA - Port A Data Register
                                 .equ	PORTA0	= 0	; Port A Data Register bit 0
                                 .equ	PA0	= 0	; For compatibility
                                 .equ	PORTA1	= 1	; Port A Data Register bit 1
                                 .equ	PA1	= 1	; For compatibility
                                 .equ	PORTA2	= 2	; Port A Data Register bit 2
                                 .equ	PA2	= 2	; For compatibility
                                 .equ	PORTA3	= 3	; Port A Data Register bit 3
                                 .equ	PA3	= 3	; For compatibility
                                 .equ	PORTA4	= 4	; Port A Data Register bit 4
                                 .equ	PA4	= 4	; For compatibility
                                 .equ	PORTA5	= 5	; Port A Data Register bit 5
                                 .equ	PA5	= 5	; For compatibility
                                 .equ	PORTA6	= 6	; Port A Data Register bit 6
                                 .equ	PA6	= 6	; For compatibility
                                 .equ	PORTA7	= 7	; Port A Data Register bit 7
                                 .equ	PA7	= 7	; For compatibility
                                 
                                 ; DDRA - Port A Data Direction Register
                                 .equ	DDA0	= 0	; Data Direction Register, Port A, bit 0
                                 .equ	DDA1	= 1	; Data Direction Register, Port A, bit 1
                                 .equ	DDA2	= 2	; Data Direction Register, Port A, bit 2
                                 .equ	DDA3	= 3	; Data Direction Register, Port A, bit 3
                                 .equ	DDA4	= 4	; Data Direction Register, Port A, bit 4
                                 .equ	DDA5	= 5	; Data Direction Register, Port A, bit 5
                                 .equ	DDA6	= 6	; Data Direction Register, Port A, bit 6
                                 .equ	DDA7	= 7	; Data Direction Register, Port A, bit 7
                                 
                                 ; PINA - Port A Input Pins
                                 .equ	PINA0	= 0	; Input Pins, Port A bit 0
                                 .equ	PINA1	= 1	; Input Pins, Port A bit 1
                                 .equ	PINA2	= 2	; Input Pins, Port A bit 2
                                 .equ	PINA3	= 3	; Input Pins, Port A bit 3
                                 .equ	PINA4	= 4	; Input Pins, Port A bit 4
                                 .equ	PINA5	= 5	; Input Pins, Port A bit 5
                                 .equ	PINA6	= 6	; Input Pins, Port A bit 6
                                 .equ	PINA7	= 7	; Input Pins, Port A bit 7
                                 
                                 
                                 ; ***** PORTB ************************
                                 ; PORTB - Port B Data Register
                                 .equ	PORTB0	= 0	; Port B Data Register bit 0
                                 .equ	PB0	= 0	; For compatibility
                                 .equ	PORTB1	= 1	; Port B Data Register bit 1
                                 .equ	PB1	= 1	; For compatibility
                                 .equ	PORTB2	= 2	; Port B Data Register bit 2
                                 .equ	PB2	= 2	; For compatibility
                                 .equ	PORTB3	= 3	; Port B Data Register bit 3
                                 .equ	PB3	= 3	; For compatibility
                                 .equ	PORTB4	= 4	; Port B Data Register bit 4
                                 .equ	PB4	= 4	; For compatibility
                                 .equ	PORTB5	= 5	; Port B Data Register bit 5
                                 .equ	PB5	= 5	; For compatibility
                                 .equ	PORTB6	= 6	; Port B Data Register bit 6
                                 .equ	PB6	= 6	; For compatibility
                                 .equ	PORTB7	= 7	; Port B Data Register bit 7
                                 .equ	PB7	= 7	; For compatibility
                                 
                                 ; DDRB - Port B Data Direction Register
                                 .equ	DDB0	= 0	; Port B Data Direction Register bit 0
                                 .equ	DDB1	= 1	; Port B Data Direction Register bit 1
                                 .equ	DDB2	= 2	; Port B Data Direction Register bit 2
                                 .equ	DDB3	= 3	; Port B Data Direction Register bit 3
                                 .equ	DDB4	= 4	; Port B Data Direction Register bit 4
                                 .equ	DDB5	= 5	; Port B Data Direction Register bit 5
                                 .equ	DDB6	= 6	; Port B Data Direction Register bit 6
                                 .equ	DDB7	= 7	; Port B Data Direction Register bit 7
                                 
                                 ; PINB - Port B Input Pins
                                 .equ	PINB0	= 0	; Port B Input Pins bit 0
                                 .equ	PINB1	= 1	; Port B Input Pins bit 1
                                 .equ	PINB2	= 2	; Port B Input Pins bit 2
                                 .equ	PINB3	= 3	; Port B Input Pins bit 3
                                 .equ	PINB4	= 4	; Port B Input Pins bit 4
                                 .equ	PINB5	= 5	; Port B Input Pins bit 5
                                 .equ	PINB6	= 6	; Port B Input Pins bit 6
                                 .equ	PINB7	= 7	; Port B Input Pins bit 7
                                 
                                 
                                 ; ***** PORTC ************************
                                 ; PORTC - Port C Data Register
                                 .equ	PORTC0	= 0	; Port C Data Register bit 0
                                 .equ	PC0	= 0	; For compatibility
                                 .equ	PORTC1	= 1	; Port C Data Register bit 1
                                 .equ	PC1	= 1	; For compatibility
                                 .equ	PORTC2	= 2	; Port C Data Register bit 2
                                 .equ	PC2	= 2	; For compatibility
                                 .equ	PORTC3	= 3	; Port C Data Register bit 3
                                 .equ	PC3	= 3	; For compatibility
                                 .equ	PORTC4	= 4	; Port C Data Register bit 4
                                 .equ	PC4	= 4	; For compatibility
                                 .equ	PORTC5	= 5	; Port C Data Register bit 5
                                 .equ	PC5	= 5	; For compatibility
                                 .equ	PORTC6	= 6	; Port C Data Register bit 6
                                 .equ	PC6	= 6	; For compatibility
                                 .equ	PORTC7	= 7	; Port C Data Register bit 7
                                 .equ	PC7	= 7	; For compatibility
                                 
                                 ; DDRC - Port C Data Direction Register
                                 .equ	DDC0	= 0	; Port C Data Direction Register bit 0
                                 .equ	DDC1	= 1	; Port C Data Direction Register bit 1
                                 .equ	DDC2	= 2	; Port C Data Direction Register bit 2
                                 .equ	DDC3	= 3	; Port C Data Direction Register bit 3
                                 .equ	DDC4	= 4	; Port C Data Direction Register bit 4
                                 .equ	DDC5	= 5	; Port C Data Direction Register bit 5
                                 .equ	DDC6	= 6	; Port C Data Direction Register bit 6
                                 .equ	DDC7	= 7	; Port C Data Direction Register bit 7
                                 
                                 ; PINC - Port C Input Pins
                                 .equ	PINC0	= 0	; Port C Input Pins bit 0
                                 .equ	PINC1	= 1	; Port C Input Pins bit 1
                                 .equ	PINC2	= 2	; Port C Input Pins bit 2
                                 .equ	PINC3	= 3	; Port C Input Pins bit 3
                                 .equ	PINC4	= 4	; Port C Input Pins bit 4
                                 .equ	PINC5	= 5	; Port C Input Pins bit 5
                                 .equ	PINC6	= 6	; Port C Input Pins bit 6
                                 .equ	PINC7	= 7	; Port C Input Pins bit 7
                                 
                                 
                                 ; ***** PORTD ************************
                                 ; PORTD - Port D Data Register
                                 .equ	PORTD0	= 0	; Port D Data Register bit 0
                                 .equ	PD0	= 0	; For compatibility
                                 .equ	PORTD1	= 1	; Port D Data Register bit 1
                                 .equ	PD1	= 1	; For compatibility
                                 .equ	PORTD2	= 2	; Port D Data Register bit 2
                                 .equ	PD2	= 2	; For compatibility
                                 .equ	PORTD3	= 3	; Port D Data Register bit 3
                                 .equ	PD3	= 3	; For compatibility
                                 .equ	PORTD4	= 4	; Port D Data Register bit 4
                                 .equ	PD4	= 4	; For compatibility
                                 .equ	PORTD5	= 5	; Port D Data Register bit 5
                                 .equ	PD5	= 5	; For compatibility
                                 .equ	PORTD6	= 6	; Port D Data Register bit 6
                                 .equ	PD6	= 6	; For compatibility
                                 .equ	PORTD7	= 7	; Port D Data Register bit 7
                                 .equ	PD7	= 7	; For compatibility
                                 
                                 ; DDRD - Port D Data Direction Register
                                 .equ	DDD0	= 0	; Port D Data Direction Register bit 0
                                 .equ	DDD1	= 1	; Port D Data Direction Register bit 1
                                 .equ	DDD2	= 2	; Port D Data Direction Register bit 2
                                 .equ	DDD3	= 3	; Port D Data Direction Register bit 3
                                 .equ	DDD4	= 4	; Port D Data Direction Register bit 4
                                 .equ	DDD5	= 5	; Port D Data Direction Register bit 5
                                 .equ	DDD6	= 6	; Port D Data Direction Register bit 6
                                 .equ	DDD7	= 7	; Port D Data Direction Register bit 7
                                 
                                 ; PIND - Port D Input Pins
                                 .equ	PIND0	= 0	; Port D Input Pins bit 0
                                 .equ	PIND1	= 1	; Port D Input Pins bit 1
                                 .equ	PIND2	= 2	; Port D Input Pins bit 2
                                 .equ	PIND3	= 3	; Port D Input Pins bit 3
                                 .equ	PIND4	= 4	; Port D Input Pins bit 4
                                 .equ	PIND5	= 5	; Port D Input Pins bit 5
                                 .equ	PIND6	= 6	; Port D Input Pins bit 6
                                 .equ	PIND7	= 7	; Port D Input Pins bit 7
                                 
                                 
                                 ; ***** PORTE ************************
                                 ; PORTE - Data Register, Port E
                                 .equ	PORTE0	= 0	; 
                                 .equ	PE0	= 0	; For compatibility
                                 .equ	PORTE1	= 1	; 
                                 .equ	PE1	= 1	; For compatibility
                                 .equ	PORTE2	= 2	; 
                                 .equ	PE2	= 2	; For compatibility
                                 .equ	PORTE3	= 3	; 
                                 .equ	PE3	= 3	; For compatibility
                                 .equ	PORTE4	= 4	; 
                                 .equ	PE4	= 4	; For compatibility
                                 .equ	PORTE5	= 5	; 
                                 .equ	PE5	= 5	; For compatibility
                                 .equ	PORTE6	= 6	; 
                                 .equ	PE6	= 6	; For compatibility
                                 .equ	PORTE7	= 7	; 
                                 .equ	PE7	= 7	; For compatibility
                                 
                                 ; DDRE - Data Direction Register, Port E
                                 .equ	DDE0	= 0	; 
                                 .equ	DDE1	= 1	; 
                                 .equ	DDE2	= 2	; 
                                 .equ	DDE3	= 3	; 
                                 .equ	DDE4	= 4	; 
                                 .equ	DDE5	= 5	; 
                                 .equ	DDE6	= 6	; 
                                 .equ	DDE7	= 7	; 
                                 
                                 ; PINE - Input Pins, Port E
                                 .equ	PINE0	= 0	; 
                                 .equ	PINE1	= 1	; 
                                 .equ	PINE2	= 2	; 
                                 .equ	PINE3	= 3	; 
                                 .equ	PINE4	= 4	; 
                                 .equ	PINE5	= 5	; 
                                 .equ	PINE6	= 6	; 
                                 .equ	PINE7	= 7	; 
                                 
                                 
                                 ; ***** PORTF ************************
                                 ; PORTF - Data Register, Port F
                                 .equ	PORTF0	= 0	; 
                                 .equ	PF0	= 0	; For compatibility
                                 .equ	PORTF1	= 1	; 
                                 .equ	PF1	= 1	; For compatibility
                                 .equ	PORTF2	= 2	; 
                                 .equ	PF2	= 2	; For compatibility
                                 .equ	PORTF3	= 3	; 
                                 .equ	PF3	= 3	; For compatibility
                                 .equ	PORTF4	= 4	; 
                                 .equ	PF4	= 4	; For compatibility
                                 .equ	PORTF5	= 5	; 
                                 .equ	PF5	= 5	; For compatibility
                                 .equ	PORTF6	= 6	; 
                                 .equ	PF6	= 6	; For compatibility
                                 .equ	PORTF7	= 7	; 
                                 .equ	PF7	= 7	; For compatibility
                                 
                                 ; DDRF - Data Direction Register, Port F
                                 .equ	DDF0	= 0	; 
                                 .equ	DDF1	= 1	; 
                                 .equ	DDF2	= 2	; 
                                 .equ	DDF3	= 3	; 
                                 .equ	DDF4	= 4	; 
                                 .equ	DDF5	= 5	; 
                                 .equ	DDF6	= 6	; 
                                 .equ	DDF7	= 7	; 
                                 
                                 ; PINF - Input Pins, Port F
                                 .equ	PINF0	= 0	; 
                                 .equ	PINF1	= 1	; 
                                 .equ	PINF2	= 2	; 
                                 .equ	PINF3	= 3	; 
                                 .equ	PINF4	= 4	; 
                                 .equ	PINF5	= 5	; 
                                 .equ	PINF6	= 6	; 
                                 .equ	PINF7	= 7	; 
                                 
                                 
                                 ; ***** PORTG ************************
                                 ; PORTG - Data Register, Port G
                                 .equ	PORTG0	= 0	; 
                                 .equ	PG0	= 0	; For compatibility
                                 .equ	PORTG1	= 1	; 
                                 .equ	PG1	= 1	; For compatibility
                                 .equ	PORTG2	= 2	; 
                                 .equ	PG2	= 2	; For compatibility
                                 .equ	PORTG3	= 3	; 
                                 .equ	PG3	= 3	; For compatibility
                                 .equ	PORTG4	= 4	; 
                                 .equ	PG4	= 4	; For compatibility
                                 .equ	PORTG5	= 5	; 
                                 .equ	PG5	= 5	; For compatibility
                                 
                                 ; DDRG - Data Direction Register, Port G
                                 .equ	DDG0	= 0	; 
                                 .equ	DDG1	= 1	; 
                                 .equ	DDG2	= 2	; 
                                 .equ	DDG3	= 3	; 
                                 .equ	DDG4	= 4	; 
                                 .equ	DDG5	= 5	; 
                                 
                                 ; PING - Input Pins, Port G
                                 .equ	PING0	= 0	; 
                                 .equ	PING1	= 1	; 
                                 .equ	PING2	= 2	; 
                                 .equ	PING3	= 3	; 
                                 .equ	PING4	= 4	; 
                                 .equ	PING5	= 5	; 
                                 
                                 
                                 ; ***** PORTH ************************
                                 ; PORTH - PORT H Data Register
                                 .equ	PORTH0	= 0	; PORT H Data Register bit 0
                                 .equ	PH0	= 0	; For compatibility
                                 .equ	PORTH1	= 1	; PORT H Data Register bit 1
                                 .equ	PH1	= 1	; For compatibility
                                 .equ	PORTH2	= 2	; PORT H Data Register bit 2
                                 .equ	PH2	= 2	; For compatibility
                                 .equ	PORTH3	= 3	; PORT H Data Register bit 3
                                 .equ	PH3	= 3	; For compatibility
                                 .equ	PORTH4	= 4	; PORT H Data Register bit 4
                                 .equ	PH4	= 4	; For compatibility
                                 .equ	PORTH5	= 5	; PORT H Data Register bit 5
                                 .equ	PH5	= 5	; For compatibility
                                 .equ	PORTH6	= 6	; PORT H Data Register bit 6
                                 .equ	PH6	= 6	; For compatibility
                                 .equ	PORTH7	= 7	; PORT H Data Register bit 7
                                 .equ	PH7	= 7	; For compatibility
                                 
                                 ; DDRH - PORT H Data Direction Register
                                 .equ	DDH0	= 0	; PORT H Data Direction Register bit 0
                                 .equ	DDH1	= 1	; PORT H Data Direction Register bit 1
                                 .equ	DDH2	= 2	; PORT H Data Direction Register bit 2
                                 .equ	DDH3	= 3	; PORT H Data Direction Register bit 3
                                 .equ	DDH4	= 4	; PORT H Data Direction Register bit 4
                                 .equ	DDH5	= 5	; PORT H Data Direction Register bit 5
                                 .equ	DDH6	= 6	; PORT H Data Direction Register bit 6
                                 .equ	DDH7	= 7	; PORT H Data Direction Register bit 7
                                 
                                 ; PINH - PORT H Input Pins
                                 .equ	PINH0	= 0	; PORT H Input Pins bit 0
                                 .equ	PINH1	= 1	; PORT H Input Pins bit 1
                                 .equ	PINH2	= 2	; PORT H Input Pins bit 2
                                 .equ	PINH3	= 3	; PORT H Input Pins bit 3
                                 .equ	PINH4	= 4	; PORT H Input Pins bit 4
                                 .equ	PINH5	= 5	; PORT H Input Pins bit 5
                                 .equ	PINH6	= 6	; PORT H Input Pins bit 6
                                 .equ	PINH7	= 7	; PORT H Input Pins bit 7
                                 
                                 
                                 ; ***** PORTJ ************************
                                 ; PORTJ - PORT J Data Register
                                 .equ	PORTJ0	= 0	; PORT J Data Register bit 0
                                 .equ	PJ0	= 0	; For compatibility
                                 .equ	PORTJ1	= 1	; PORT J Data Register bit 1
                                 .equ	PJ1	= 1	; For compatibility
                                 .equ	PORTJ2	= 2	; PORT J Data Register bit 2
                                 .equ	PJ2	= 2	; For compatibility
                                 .equ	PORTJ3	= 3	; PORT J Data Register bit 3
                                 .equ	PJ3	= 3	; For compatibility
                                 .equ	PORTJ4	= 4	; PORT J Data Register bit 4
                                 .equ	PJ4	= 4	; For compatibility
                                 .equ	PORTJ5	= 5	; PORT J Data Register bit 5
                                 .equ	PJ5	= 5	; For compatibility
                                 .equ	PORTJ6	= 6	; PORT J Data Register bit 6
                                 .equ	PJ6	= 6	; For compatibility
                                 .equ	PORTJ7	= 7	; PORT J Data Register bit 7
                                 .equ	PJ7	= 7	; For compatibility
                                 
                                 ; DDRJ - PORT J Data Direction Register
                                 .equ	DDJ0	= 0	; PORT J Data Direction Register bit 0
                                 .equ	DDJ1	= 1	; PORT J Data Direction Register bit 1
                                 .equ	DDJ2	= 2	; PORT J Data Direction Register bit 2
                                 .equ	DDJ3	= 3	; PORT J Data Direction Register bit 3
                                 .equ	DDJ4	= 4	; PORT J Data Direction Register bit 4
                                 .equ	DDJ5	= 5	; PORT J Data Direction Register bit 5
                                 .equ	DDJ6	= 6	; PORT J Data Direction Register bit 6
                                 .equ	DDJ7	= 7	; PORT J Data Direction Register bit 7
                                 
                                 ; PINJ - PORT J Input Pins
                                 .equ	PINJ0	= 0	; PORT J Input Pins bit 0
                                 .equ	PINJ1	= 1	; PORT J Input Pins bit 1
                                 .equ	PINJ2	= 2	; PORT J Input Pins bit 2
                                 .equ	PINJ3	= 3	; PORT J Input Pins bit 3
                                 .equ	PINJ4	= 4	; PORT J Input Pins bit 4
                                 .equ	PINJ5	= 5	; PORT J Input Pins bit 5
                                 .equ	PINJ6	= 6	; PORT J Input Pins bit 6
                                 .equ	PINJ7	= 7	; PORT J Input Pins bit 7
                                 
                                 
                                 ; ***** PORTK ************************
                                 ; PORTK - PORT K Data Register
                                 .equ	PORTK0	= 0	; PORT K Data Register bit 0
                                 .equ	PK0	= 0	; For compatibility
                                 .equ	PORTK1	= 1	; PORT K Data Register bit 1
                                 .equ	PK1	= 1	; For compatibility
                                 .equ	PORTK2	= 2	; PORT K Data Register bit 2
                                 .equ	PK2	= 2	; For compatibility
                                 .equ	PORTK3	= 3	; PORT K Data Register bit 3
                                 .equ	PK3	= 3	; For compatibility
                                 .equ	PORTK4	= 4	; PORT K Data Register bit 4
                                 .equ	PK4	= 4	; For compatibility
                                 .equ	PORTK5	= 5	; PORT K Data Register bit 5
                                 .equ	PK5	= 5	; For compatibility
                                 .equ	PORTK6	= 6	; PORT K Data Register bit 6
                                 .equ	PK6	= 6	; For compatibility
                                 .equ	PORTK7	= 7	; PORT K Data Register bit 7
                                 .equ	PK7	= 7	; For compatibility
                                 
                                 ; DDRK - PORT K Data Direction Register
                                 .equ	DDK0	= 0	; PORT K Data Direction Register bit 0
                                 .equ	DDK1	= 1	; PORT K Data Direction Register bit 1
                                 .equ	DDK2	= 2	; PORT K Data Direction Register bit 2
                                 .equ	DDK3	= 3	; PORT K Data Direction Register bit 3
                                 .equ	DDK4	= 4	; PORT K Data Direction Register bit 4
                                 .equ	DDK5	= 5	; PORT K Data Direction Register bit 5
                                 .equ	DDK6	= 6	; PORT K Data Direction Register bit 6
                                 .equ	DDK7	= 7	; PORT K Data Direction Register bit 7
                                 
                                 ; PINK - PORT K Input Pins
                                 .equ	PINK0	= 0	; PORT K Input Pins bit 0
                                 .equ	PINK1	= 1	; PORT K Input Pins bit 1
                                 .equ	PINK2	= 2	; PORT K Input Pins bit 2
                                 .equ	PINK3	= 3	; PORT K Input Pins bit 3
                                 .equ	PINK4	= 4	; PORT K Input Pins bit 4
                                 .equ	PINK5	= 5	; PORT K Input Pins bit 5
                                 .equ	PINK6	= 6	; PORT K Input Pins bit 6
                                 .equ	PINK7	= 7	; PORT K Input Pins bit 7
                                 
                                 
                                 ; ***** PORTL ************************
                                 ; PORTL - PORT L Data Register
                                 .equ	PORTL0	= 0	; PORT L Data Register bit 0
                                 .equ	PL0	= 0	; For compatibility
                                 .equ	PORTL1	= 1	; PORT L Data Register bit 1
                                 .equ	PL1	= 1	; For compatibility
                                 .equ	PORTL2	= 2	; PORT L Data Register bit 2
                                 .equ	PL2	= 2	; For compatibility
                                 .equ	PORTL3	= 3	; PORT L Data Register bit 3
                                 .equ	PL3	= 3	; For compatibility
                                 .equ	PORTL4	= 4	; PORT L Data Register bit 4
                                 .equ	PL4	= 4	; For compatibility
                                 .equ	PORTL5	= 5	; PORT L Data Register bit 5
                                 .equ	PL5	= 5	; For compatibility
                                 .equ	PORTL6	= 6	; PORT L Data Register bit 6
                                 .equ	PL6	= 6	; For compatibility
                                 .equ	PORTL7	= 7	; PORT L Data Register bit 7
                                 .equ	PL7	= 7	; For compatibility
                                 
                                 ; DDRL - PORT L Data Direction Register
                                 .equ	DDL0	= 0	; PORT L Data Direction Register bit 0
                                 .equ	DDL1	= 1	; PORT L Data Direction Register bit 1
                                 .equ	DDL2	= 2	; PORT L Data Direction Register bit 2
                                 .equ	DDL3	= 3	; PORT L Data Direction Register bit 3
                                 .equ	DDL4	= 4	; PORT L Data Direction Register bit 4
                                 .equ	DDL5	= 5	; PORT L Data Direction Register bit 5
                                 .equ	DDL6	= 6	; PORT L Data Direction Register bit 6
                                 .equ	DDL7	= 7	; PORT L Data Direction Register bit 7
                                 
                                 ; PINL - PORT L Input Pins
                                 .equ	PINL0	= 0	; PORT L Input Pins bit 0
                                 .equ	PINL1	= 1	; PORT L Input Pins bit 1
                                 .equ	PINL2	= 2	; PORT L Input Pins bit 2
                                 .equ	PINL3	= 3	; PORT L Input Pins bit 3
                                 .equ	PINL4	= 4	; PORT L Input Pins bit 4
                                 .equ	PINL5	= 5	; PORT L Input Pins bit 5
                                 .equ	PINL6	= 6	; PORT L Input Pins bit 6
                                 .equ	PINL7	= 7	; PORT L Input Pins bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_0 **************
                                 ; TIMSK0 - Timer/Counter0 Interrupt Mask Register
                                 .equ	TOIE0	= 0	; Timer/Counter0 Overflow Interrupt Enable
                                 .equ	OCIE0A	= 1	; Timer/Counter0 Output Compare Match A Interrupt Enable
                                 .equ	OCIE0B	= 2	; Timer/Counter0 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR0 - Timer/Counter0 Interrupt Flag register
                                 .equ	TOV0	= 0	; Timer/Counter0 Overflow Flag
                                 .equ	OCF0A	= 1	; Timer/Counter0 Output Compare Flag 0A
                                 .equ	OCF0B	= 2	; Timer/Counter0 Output Compare Flag 0B
                                 
                                 ; TCCR0A - Timer/Counter  Control Register A
                                 .equ	WGM00	= 0	; Waveform Generation Mode
                                 .equ	WGM01	= 1	; Waveform Generation Mode
                                 .equ	COM0B0	= 4	; Compare Output Mode, Fast PWm
                                 .equ	COM0B1	= 5	; Compare Output Mode, Fast PWm
                                 .equ	COM0A0	= 6	; Compare Output Mode, Phase Correct PWM Mode
                                 .equ	COM0A1	= 7	; Compare Output Mode, Phase Correct PWM Mode
                                 
                                 ; TCCR0B - Timer/Counter Control Register B
                                 .equ	CS00	= 0	; Clock Select
                                 .equ	CS01	= 1	; Clock Select
                                 .equ	CS02	= 2	; Clock Select
                                 .equ	WGM02	= 3	; 
                                 .equ	FOC0B	= 6	; Force Output Compare B
                                 .equ	FOC0A	= 7	; Force Output Compare A
                                 
                                 ; TCNT0 - Timer/Counter0
                                 .equ	TCNT0_0	= 0	; 
                                 .equ	TCNT0_1	= 1	; 
                                 .equ	TCNT0_2	= 2	; 
                                 .equ	TCNT0_3	= 3	; 
                                 .equ	TCNT0_4	= 4	; 
                                 .equ	TCNT0_5	= 5	; 
                                 .equ	TCNT0_6	= 6	; 
                                 .equ	TCNT0_7	= 7	; 
                                 
                                 ; OCR0A - Timer/Counter0 Output Compare Register
                                 .equ	OCR0A_0	= 0	; 
                                 .equ	OCR0A_1	= 1	; 
                                 .equ	OCR0A_2	= 2	; 
                                 .equ	OCR0A_3	= 3	; 
                                 .equ	OCR0A_4	= 4	; 
                                 .equ	OCR0A_5	= 5	; 
                                 .equ	OCR0A_6	= 6	; 
                                 .equ	OCR0A_7	= 7	; 
                                 
                                 ; OCR0B - Timer/Counter0 Output Compare Register
                                 .equ	OCR0B_0	= 0	; 
                                 .equ	OCR0B_1	= 1	; 
                                 .equ	OCR0B_2	= 2	; 
                                 .equ	OCR0B_3	= 3	; 
                                 .equ	OCR0B_4	= 4	; 
                                 .equ	OCR0B_5	= 5	; 
                                 .equ	OCR0B_6	= 6	; 
                                 .equ	OCR0B_7	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 .equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	PSR10	= PSRSYNC	; For compatibility
                                 .equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** TIMER_COUNTER_2 **************
                                 ; TIMSK2 - Timer/Counter Interrupt Mask register
                                 .equ	TOIE2	= 0	; Timer/Counter2 Overflow Interrupt Enable
                                 .equ	TOIE2A	= TOIE2	; For compatibility
                                 .equ	OCIE2A	= 1	; Timer/Counter2 Output Compare Match A Interrupt Enable
                                 .equ	OCIE2B	= 2	; Timer/Counter2 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR2 - Timer/Counter Interrupt Flag Register
                                 .equ	TOV2	= 0	; Timer/Counter2 Overflow Flag
                                 .equ	OCF2A	= 1	; Output Compare Flag 2A
                                 .equ	OCF2B	= 2	; Output Compare Flag 2B
                                 
                                 ; TCCR2A - Timer/Counter2 Control Register A
                                 .equ	WGM20	= 0	; Waveform Genration Mode
                                 .equ	WGM21	= 1	; Waveform Genration Mode
                                 .equ	COM2B0	= 4	; Compare Output Mode bit 0
                                 .equ	COM2B1	= 5	; Compare Output Mode bit 1
                                 .equ	COM2A0	= 6	; Compare Output Mode bit 1
                                 .equ	COM2A1	= 7	; Compare Output Mode bit 1
                                 
                                 ; TCCR2B - Timer/Counter2 Control Register B
                                 .equ	CS20	= 0	; Clock Select bit 0
                                 .equ	CS21	= 1	; Clock Select bit 1
                                 .equ	CS22	= 2	; Clock Select bit 2
                                 .equ	WGM22	= 3	; Waveform Generation Mode
                                 .equ	FOC2B	= 6	; Force Output Compare B
                                 .equ	FOC2A	= 7	; Force Output Compare A
                                 
                                 ; TCNT2 - Timer/Counter2
                                 .equ	TCNT2_0	= 0	; Timer/Counter 2 bit 0
                                 .equ	TCNT2_1	= 1	; Timer/Counter 2 bit 1
                                 .equ	TCNT2_2	= 2	; Timer/Counter 2 bit 2
                                 .equ	TCNT2_3	= 3	; Timer/Counter 2 bit 3
                                 .equ	TCNT2_4	= 4	; Timer/Counter 2 bit 4
                                 .equ	TCNT2_5	= 5	; Timer/Counter 2 bit 5
                                 .equ	TCNT2_6	= 6	; Timer/Counter 2 bit 6
                                 .equ	TCNT2_7	= 7	; Timer/Counter 2 bit 7
                                 
                                 ; OCR2A - Timer/Counter2 Output Compare Register A
                                 .equ	OCR2A_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2A_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2A_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2A_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2A_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2A_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2A_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2A_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; OCR2B - Timer/Counter2 Output Compare Register B
                                 .equ	OCR2B_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2B_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2B_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2B_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2B_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2B_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2B_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2B_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; ASSR - Asynchronous Status Register
                                 .equ	TCR2BUB	= 0	; Timer/Counter Control Register2 Update Busy
                                 .equ	TCR2AUB	= 1	; Timer/Counter Control Register2 Update Busy
                                 .equ	OCR2BUB	= 2	; Output Compare Register 2 Update Busy
                                 .equ	OCR2AUB	= 3	; Output Compare Register2 Update Busy
                                 .equ	TCN2UB	= 4	; Timer/Counter2 Update Busy
                                 .equ	AS2	= 5	; Asynchronous Timer/Counter2
                                 .equ	EXCLK	= 6	; Enable External Clock Input
                                 
                                 ; GTCCR - General Timer Counter Control register
                                 .equ	PSRASY	= 1	; Prescaler Reset Timer/Counter2
                                 .equ	PSR2	= PSRASY	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** WATCHDOG *********************
                                 ; WDTCSR - Watchdog Timer Control Register
                                 .equ	WDP0	= 0	; Watch Dog Timer Prescaler bit 0
                                 .equ	WDP1	= 1	; Watch Dog Timer Prescaler bit 1
                                 .equ	WDP2	= 2	; Watch Dog Timer Prescaler bit 2
                                 .equ	WDE	= 3	; Watch Dog Enable
                                 .equ	WDCE	= 4	; Watchdog Change Enable
                                 .equ	WDP3	= 5	; Watchdog Timer Prescaler Bit 3
                                 .equ	WDIE	= 6	; Watchdog Timeout Interrupt Enable
                                 .equ	WDIF	= 7	; Watchdog Timeout Interrupt Flag
                                 
                                 
                                 ; ***** USART1 ***********************
                                 ; UDR1 - USART I/O Data Register
                                 .equ	UDR1_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR1_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR1_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR1_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR1_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR1_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR1_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR1_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR1A - USART Control and Status Register A
                                 .equ	MPCM1	= 0	; Multi-processor Communication Mode
                                 .equ	U2X1	= 1	; Double the USART transmission speed
                                 .equ	UPE1	= 2	; Parity Error
                                 .equ	DOR1	= 3	; Data overRun
                                 .equ	FE1	= 4	; Framing Error
                                 .equ	UDRE1	= 5	; USART Data Register Empty
                                 .equ	TXC1	= 6	; USART Transmitt Complete
                                 .equ	RXC1	= 7	; USART Receive Complete
                                 
                                 ; UCSR1B - USART Control and Status Register B
                                 .equ	TXB81	= 0	; Transmit Data Bit 8
                                 .equ	RXB81	= 1	; Receive Data Bit 8
                                 .equ	UCSZ12	= 2	; Character Size
                                 .equ	TXEN1	= 3	; Transmitter Enable
                                 .equ	RXEN1	= 4	; Receiver Enable
                                 .equ	UDRIE1	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE1	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE1	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR1C - USART Control and Status Register C
                                 .equ	UCPOL1	= 0	; Clock Polarity
                                 .equ	UCSZ10	= 1	; Character Size
                                 .equ	UCPHA1	= UCSZ10	; For compatibility
                                 .equ	UCSZ11	= 2	; Character Size
                                 .equ	UDORD1	= UCSZ11	; For compatibility
                                 .equ	USBS1	= 3	; Stop Bit Select
                                 .equ	UPM10	= 4	; Parity Mode Bit 0
                                 .equ	UPM11	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL10	= 6	; USART Mode Select
                                 .equ	UMSEL11	= 7	; USART Mode Select
                                 
                                 ; UBRR1H - USART Baud Rate Register High Byte
                                 .equ	UBRR_8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR_9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR_10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR_11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR1L - USART Baud Rate Register Low Byte
                                 .equ	UBRR_0	= 0	; USART Baud Rate Register bit 0
                                 .equ	UBRR_1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR_2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR_3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR_4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR_5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR_6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR_7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** EEPROM ***********************
                                 ; EEARH - EEPROM Address Register Low Byte
                                 .equ	EEAR8	= 0	; EEPROM Read/Write Access Bit 8
                                 .equ	EEAR9	= 1	; EEPROM Read/Write Access Bit 9
                                 .equ	EEAR10	= 2	; EEPROM Read/Write Access Bit 10
                                 .equ	EEAR11	= 3	; EEPROM Read/Write Access Bit 11
                                 
                                 ; EEARL - EEPROM Address Register Low Byte
                                 .equ	EEAR0	= 0	; EEPROM Read/Write Access Bit 0
                                 .equ	EEAR1	= 1	; EEPROM Read/Write Access Bit 1
                                 .equ	EEAR2	= 2	; EEPROM Read/Write Access Bit 2
                                 .equ	EEAR3	= 3	; EEPROM Read/Write Access Bit 3
                                 .equ	EEAR4	= 4	; EEPROM Read/Write Access Bit 4
                                 .equ	EEAR5	= 5	; EEPROM Read/Write Access Bit 5
                                 .equ	EEAR6	= 6	; EEPROM Read/Write Access Bit 6
                                 .equ	EEAR7	= 7	; EEPROM Read/Write Access Bit 7
                                 
                                 ; EEDR - EEPROM Data Register
                                 .equ	EEDR0	= 0	; EEPROM Data Register bit 0
                                 .equ	EEDR1	= 1	; EEPROM Data Register bit 1
                                 .equ	EEDR2	= 2	; EEPROM Data Register bit 2
                                 .equ	EEDR3	= 3	; EEPROM Data Register bit 3
                                 .equ	EEDR4	= 4	; EEPROM Data Register bit 4
                                 .equ	EEDR5	= 5	; EEPROM Data Register bit 5
                                 .equ	EEDR6	= 6	; EEPROM Data Register bit 6
                                 .equ	EEDR7	= 7	; EEPROM Data Register bit 7
                                 
                                 ; EECR - EEPROM Control Register
                                 .equ	EERE	= 0	; EEPROM Read Enable
                                 .equ	EEPE	= 1	; EEPROM Write Enable
                                 .equ	EEMPE	= 2	; EEPROM Master Write Enable
                                 .equ	EERIE	= 3	; EEPROM Ready Interrupt Enable
                                 .equ	EEPM0	= 4	; EEPROM Programming Mode Bit 0
                                 .equ	EEPM1	= 5	; EEPROM Programming Mode Bit 1
                                 
                                 
                                 ; ***** TIMER_COUNTER_5 **************
                                 ; TIMSK5 - Timer/Counter5 Interrupt Mask Register
                                 .equ	TOIE5	= 0	; Timer/Counter5 Overflow Interrupt Enable
                                 .equ	OCIE5A	= 1	; Timer/Counter5 Output Compare A Match Interrupt Enable
                                 .equ	OCIE5B	= 2	; Timer/Counter5 Output Compare B Match Interrupt Enable
                                 .equ	OCIE5C	= 3	; Timer/Counter5 Output Compare C Match Interrupt Enable
                                 .equ	ICIE5	= 5	; Timer/Counter5 Input Capture Interrupt Enable
                                 
                                 ; TIFR5 - Timer/Counter5 Interrupt Flag register
                                 .equ	TOV5	= 0	; Timer/Counter5 Overflow Flag
                                 .equ	OCF5A	= 1	; Output Compare Flag 5A
                                 .equ	OCF5B	= 2	; Output Compare Flag 5B
                                 .equ	OCF5C	= 3	; Output Compare Flag 5C
                                 .equ	ICF5	= 5	; Input Capture Flag 5
                                 
                                 ; TCCR5A - Timer/Counter5 Control Register A
                                 .equ	WGM50	= 0	; Waveform Generation Mode
                                 .equ	WGM51	= 1	; Waveform Generation Mode
                                 .equ	COM5C0	= 2	; Compare Output Mode 5C, bit 0
                                 .equ	COM5C1	= 3	; Compare Output Mode 5C, bit 1
                                 .equ	COM5B0	= 4	; Compare Output Mode 5B, bit 0
                                 .equ	COM5B1	= 5	; Compare Output Mode 5B, bit 1
                                 .equ	COM5A0	= 6	; Compare Output Mode 5A, bit 0
                                 .equ	COM5A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR5B - Timer/Counter5 Control Register B
                                 .equ	CS50	= 0	; Prescaler source of Timer/Counter 5
                                 .equ	CS51	= 1	; Prescaler source of Timer/Counter 5
                                 .equ	CS52	= 2	; Prescaler source of Timer/Counter 5
                                 .equ	WGM52	= 3	; Waveform Generation Mode
                                 .equ	WGM53	= 4	; Waveform Generation Mode
                                 .equ	ICES5	= 6	; Input Capture 5 Edge Select
                                 .equ	ICNC5	= 7	; Input Capture 5 Noise Canceler
                                 
                                 ; TCCR5C - Timer/Counter 5 Control Register C
                                 .equ	FOC5C	= 5	; Force Output Compare 5C
                                 .equ	FOC5B	= 6	; Force Output Compare 5B
                                 .equ	FOC5A	= 7	; Force Output Compare 5A
                                 
                                 ; ICR5H - Timer/Counter5 Input Capture Register High Byte
                                 .equ	ICR5H0	= 0	; Timer/Counter5 Input Capture Register High Byte bit 0
                                 .equ	ICR5H1	= 1	; Timer/Counter5 Input Capture Register High Byte bit 1
                                 .equ	ICR5H2	= 2	; Timer/Counter5 Input Capture Register High Byte bit 2
                                 .equ	ICR5H3	= 3	; Timer/Counter5 Input Capture Register High Byte bit 3
                                 .equ	ICR5H4	= 4	; Timer/Counter5 Input Capture Register High Byte bit 4
                                 .equ	ICR5H5	= 5	; Timer/Counter5 Input Capture Register High Byte bit 5
                                 .equ	ICR5H6	= 6	; Timer/Counter5 Input Capture Register High Byte bit 6
                                 .equ	ICR5H7	= 7	; Timer/Counter5 Input Capture Register High Byte bit 7
                                 
                                 ; ICR5L - Timer/Counter5 Input Capture Register Low Byte
                                 .equ	ICR5L0	= 0	; Timer/Counter5 Input Capture Register Low Byte bit 0
                                 .equ	ICR5L1	= 1	; Timer/Counter5 Input Capture Register Low Byte bit 1
                                 .equ	ICR5L2	= 2	; Timer/Counter5 Input Capture Register Low Byte bit 2
                                 .equ	ICR5L3	= 3	; Timer/Counter5 Input Capture Register Low Byte bit 3
                                 .equ	ICR5L4	= 4	; Timer/Counter5 Input Capture Register Low Byte bit 4
                                 .equ	ICR5L5	= 5	; Timer/Counter5 Input Capture Register Low Byte bit 5
                                 .equ	ICR5L6	= 6	; Timer/Counter5 Input Capture Register Low Byte bit 6
                                 .equ	ICR5L7	= 7	; Timer/Counter5 Input Capture Register Low Byte bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_4 **************
                                 ; TIMSK4 - Timer/Counter4 Interrupt Mask Register
                                 .equ	TOIE4	= 0	; Timer/Counter4 Overflow Interrupt Enable
                                 .equ	OCIE4A	= 1	; Timer/Counter4 Output Compare A Match Interrupt Enable
                                 .equ	OCIE4B	= 2	; Timer/Counter4 Output Compare B Match Interrupt Enable
                                 .equ	OCIE4C	= 3	; Timer/Counter4 Output Compare C Match Interrupt Enable
                                 .equ	ICIE4	= 5	; Timer/Counter4 Input Capture Interrupt Enable
                                 
                                 ; TIFR4 - Timer/Counter4 Interrupt Flag register
                                 .equ	TOV4	= 0	; Timer/Counter4 Overflow Flag
                                 .equ	OCF4A	= 1	; Output Compare Flag 4A
                                 .equ	OCF4B	= 2	; Output Compare Flag 4B
                                 .equ	OCF4C	= 3	; Output Compare Flag 4C
                                 .equ	ICF4	= 5	; Input Capture Flag 4
                                 
                                 ; TCCR4A - Timer/Counter4 Control Register A
                                 .equ	WGM40	= 0	; Waveform Generation Mode
                                 .equ	WGM41	= 1	; Waveform Generation Mode
                                 .equ	COM4C0	= 2	; Compare Output Mode 4C, bit 0
                                 .equ	COM4C1	= 3	; Compare Output Mode 4C, bit 1
                                 .equ	COM4B0	= 4	; Compare Output Mode 4B, bit 0
                                 .equ	COM4B1	= 5	; Compare Output Mode 4B, bit 1
                                 .equ	COM4A0	= 6	; Compare Output Mode 4A, bit 0
                                 .equ	COM4A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR4B - Timer/Counter4 Control Register B
                                 .equ	CS40	= 0	; Prescaler source of Timer/Counter 4
                                 .equ	CS41	= 1	; Prescaler source of Timer/Counter 4
                                 .equ	CS42	= 2	; Prescaler source of Timer/Counter 4
                                 .equ	WGM42	= 3	; Waveform Generation Mode
                                 .equ	WGM43	= 4	; Waveform Generation Mode
                                 .equ	ICES4	= 6	; Input Capture 4 Edge Select
                                 .equ	ICNC4	= 7	; Input Capture 4 Noise Canceler
                                 
                                 ; TCCR4C - Timer/Counter 4 Control Register C
                                 .equ	FOC4C	= 5	; Force Output Compare 4C
                                 .equ	FOC4B	= 6	; Force Output Compare 4B
                                 .equ	FOC4A	= 7	; Force Output Compare 4A
                                 
                                 
                                 ; ***** TIMER_COUNTER_3 **************
                                 ; TIMSK3 - Timer/Counter3 Interrupt Mask Register
                                 .equ	TOIE3	= 0	; Timer/Counter3 Overflow Interrupt Enable
                                 .equ	OCIE3A	= 1	; Timer/Counter3 Output Compare A Match Interrupt Enable
                                 .equ	OCIE3B	= 2	; Timer/Counter3 Output Compare B Match Interrupt Enable
                                 .equ	OCIE3C	= 3	; Timer/Counter3 Output Compare C Match Interrupt Enable
                                 .equ	ICIE3	= 5	; Timer/Counter3 Input Capture Interrupt Enable
                                 
                                 ; TIFR3 - Timer/Counter3 Interrupt Flag register
                                 .equ	TOV3	= 0	; Timer/Counter3 Overflow Flag
                                 .equ	OCF3A	= 1	; Output Compare Flag 3A
                                 .equ	OCF3B	= 2	; Output Compare Flag 3B
                                 .equ	OCF3C	= 3	; Output Compare Flag 3C
                                 .equ	ICF3	= 5	; Input Capture Flag 3
                                 
                                 ; TCCR3A - Timer/Counter3 Control Register A
                                 .equ	WGM30	= 0	; Waveform Generation Mode
                                 .equ	WGM31	= 1	; Waveform Generation Mode
                                 .equ	COM3C0	= 2	; Compare Output Mode 3C, bit 0
                                 .equ	COM3C1	= 3	; Compare Output Mode 3C, bit 1
                                 .equ	COM3B0	= 4	; Compare Output Mode 3B, bit 0
                                 .equ	COM3B1	= 5	; Compare Output Mode 3B, bit 1
                                 .equ	COM3A0	= 6	; Compare Output Mode 3A, bit 0
                                 .equ	COM3A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR3B - Timer/Counter3 Control Register B
                                 .equ	CS30	= 0	; Prescaler source of Timer/Counter 3
                                 .equ	CS31	= 1	; Prescaler source of Timer/Counter 3
                                 .equ	CS32	= 2	; Prescaler source of Timer/Counter 3
                                 .equ	WGM32	= 3	; Waveform Generation Mode
                                 .equ	WGM33	= 4	; Waveform Generation Mode
                                 .equ	ICES3	= 6	; Input Capture 3 Edge Select
                                 .equ	ICNC3	= 7	; Input Capture 3 Noise Canceler
                                 
                                 ; TCCR3C - Timer/Counter 3 Control Register C
                                 .equ	FOC3C	= 5	; Force Output Compare 3C
                                 .equ	FOC3B	= 6	; Force Output Compare 3B
                                 .equ	FOC3A	= 7	; Force Output Compare 3A
                                 
                                 
                                 ; ***** TIMER_COUNTER_1 **************
                                 ; TIMSK1 - Timer/Counter1 Interrupt Mask Register
                                 .equ	TOIE1	= 0	; Timer/Counter1 Overflow Interrupt Enable
                                 .equ	OCIE1A	= 1	; Timer/Counter1 Output Compare A Match Interrupt Enable
                                 .equ	OCIE1B	= 2	; Timer/Counter1 Output Compare B Match Interrupt Enable
                                 .equ	OCIE1C	= 3	; Timer/Counter1 Output Compare C Match Interrupt Enable
                                 .equ	ICIE1	= 5	; Timer/Counter1 Input Capture Interrupt Enable
                                 
                                 ; TIFR1 - Timer/Counter1 Interrupt Flag register
                                 .equ	TOV1	= 0	; Timer/Counter1 Overflow Flag
                                 .equ	OCF1A	= 1	; Output Compare Flag 1A
                                 .equ	OCF1B	= 2	; Output Compare Flag 1B
                                 .equ	OCF1C	= 3	; Output Compare Flag 1C
                                 .equ	ICF1	= 5	; Input Capture Flag 1
                                 
                                 ; TCCR1A - Timer/Counter1 Control Register A
                                 .equ	WGM10	= 0	; Waveform Generation Mode
                                 .equ	WGM11	= 1	; Waveform Generation Mode
                                 .equ	COM1C0	= 2	; Compare Output Mode 1C, bit 0
                                 .equ	COM1C1	= 3	; Compare Output Mode 1C, bit 1
                                 .equ	COM1B0	= 4	; Compare Output Mode 1B, bit 0
                                 .equ	COM1B1	= 5	; Compare Output Mode 1B, bit 1
                                 .equ	COM1A0	= 6	; Compare Output Mode 1A, bit 0
                                 .equ	COM1A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR1B - Timer/Counter1 Control Register B
                                 .equ	CS10	= 0	; Prescaler source of Timer/Counter 1
                                 .equ	CS11	= 1	; Prescaler source of Timer/Counter 1
                                 .equ	CS12	= 2	; Prescaler source of Timer/Counter 1
                                 .equ	WGM12	= 3	; Waveform Generation Mode
                                 .equ	WGM13	= 4	; Waveform Generation Mode
                                 .equ	ICES1	= 6	; Input Capture 1 Edge Select
                                 .equ	ICNC1	= 7	; Input Capture 1 Noise Canceler
                                 
                                 ; TCCR1C - Timer/Counter 1 Control Register C
                                 .equ	FOC1C	= 5	; Force Output Compare 1C
                                 .equ	FOC1B	= 6	; Force Output Compare 1B
                                 .equ	FOC1A	= 7	; Force Output Compare 1A
                                 
                                 
                                 ; ***** JTAG *************************
                                 ; OCDR - On-Chip Debug Related Register in I/O Memory
                                 .equ	OCDR0	= 0	; On-Chip Debug Register Bit 0
                                 .equ	OCDR1	= 1	; On-Chip Debug Register Bit 1
                                 .equ	OCDR2	= 2	; On-Chip Debug Register Bit 2
                                 .equ	OCDR3	= 3	; On-Chip Debug Register Bit 3
                                 .equ	OCDR4	= 4	; On-Chip Debug Register Bit 4
                                 .equ	OCDR5	= 5	; On-Chip Debug Register Bit 5
                                 .equ	OCDR6	= 6	; On-Chip Debug Register Bit 6
                                 .equ	OCDR7	= 7	; On-Chip Debug Register Bit 7
                                 .equ	IDRD	= OCDR7	; For compatibility
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	JTD	= 7	; JTAG Interface Disable
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	JTRF	= 4	; JTAG Reset Flag
                                 
                                 
                                 ; ***** EXTERNAL_INTERRUPT ***********
                                 ; EICRA - External Interrupt Control Register A
                                 .equ	ISC00	= 0	; External Interrupt Sense Control Bit
                                 .equ	ISC01	= 1	; External Interrupt Sense Control Bit
                                 .equ	ISC10	= 2	; External Interrupt Sense Control Bit
                                 .equ	ISC11	= 3	; External Interrupt Sense Control Bit
                                 .equ	ISC20	= 4	; External Interrupt Sense Control Bit
                                 .equ	ISC21	= 5	; External Interrupt Sense Control Bit
                                 .equ	ISC30	= 6	; External Interrupt Sense Control Bit
                                 .equ	ISC31	= 7	; External Interrupt Sense Control Bit
                                 
                                 ; EICRB - External Interrupt Control Register B
                                 .equ	ISC40	= 0	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC41	= 1	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC50	= 2	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC51	= 3	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC60	= 4	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC61	= 5	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC70	= 6	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC71	= 7	; External Interrupt 7-4 Sense Control Bit
                                 
                                 ; EIMSK - External Interrupt Mask Register
                                 .equ	INT0	= 0	; External Interrupt Request 0 Enable
                                 .equ	INT1	= 1	; External Interrupt Request 1 Enable
                                 .equ	INT2	= 2	; External Interrupt Request 2 Enable
                                 .equ	INT3	= 3	; External Interrupt Request 3 Enable
                                 .equ	INT4	= 4	; External Interrupt Request 4 Enable
                                 .equ	INT5	= 5	; External Interrupt Request 5 Enable
                                 .equ	INT6	= 6	; External Interrupt Request 6 Enable
                                 .equ	INT7	= 7	; External Interrupt Request 7 Enable
                                 
                                 ; EIFR - External Interrupt Flag Register
                                 .equ	INTF0	= 0	; External Interrupt Flag 0
                                 .equ	INTF1	= 1	; External Interrupt Flag 1
                                 .equ	INTF2	= 2	; External Interrupt Flag 2
                                 .equ	INTF3	= 3	; External Interrupt Flag 3
                                 .equ	INTF4	= 4	; External Interrupt Flag 4
                                 .equ	INTF5	= 5	; External Interrupt Flag 5
                                 .equ	INTF6	= 6	; External Interrupt Flag 6
                                 .equ	INTF7	= 7	; External Interrupt Flag 7
                                 
                                 ; PCICR - Pin Change Interrupt Control Register
                                 .equ	PCIE0	= 0	; Pin Change Interrupt Enable 0
                                 .equ	PCIE1	= 1	; Pin Change Interrupt Enable 1
                                 .equ	PCIE2	= 2	; Pin Change Interrupt Enable 2
                                 
                                 ; PCIFR - Pin Change Interrupt Flag Register
                                 .equ	PCIF0	= 0	; Pin Change Interrupt Flag 0
                                 .equ	PCIF1	= 1	; Pin Change Interrupt Flag 1
                                 .equ	PCIF2	= 2	; Pin Change Interrupt Flag 2
                                 
                                 ; PCMSK2 - Pin Change Mask Register 2
                                 .equ	PCINT16	= 0	; Pin Change Enable Mask 16
                                 .equ	PCINT17	= 1	; Pin Change Enable Mask 17
                                 .equ	PCINT18	= 2	; Pin Change Enable Mask 18
                                 .equ	PCINT19	= 3	; Pin Change Enable Mask 19
                                 .equ	PCINT20	= 4	; Pin Change Enable Mask 20
                                 .equ	PCINT21	= 5	; Pin Change Enable Mask 21
                                 .equ	PCINT22	= 6	; Pin Change Enable Mask 22
                                 .equ	PCINT23	= 7	; Pin Change Enable Mask 23
                                 
                                 ; PCMSK1 - Pin Change Mask Register 1
                                 .equ	PCINT8	= 0	; Pin Change Enable Mask 8
                                 .equ	PCINT9	= 1	; Pin Change Enable Mask 9
                                 .equ	PCINT10	= 2	; Pin Change Enable Mask 10
                                 .equ	PCINT11	= 3	; Pin Change Enable Mask 11
                                 .equ	PCINT12	= 4	; Pin Change Enable Mask 12
                                 .equ	PCINT13	= 5	; Pin Change Enable Mask 13
                                 .equ	PCINT14	= 6	; Pin Change Enable Mask 14
                                 .equ	PCINT15	= 7	; Pin Change Enable Mask 15
                                 
                                 ; PCMSK0 - Pin Change Mask Register 0
                                 .equ	PCINT0	= 0	; Pin Change Enable Mask 0
                                 .equ	PCINT1	= 1	; Pin Change Enable Mask 1
                                 .equ	PCINT2	= 2	; Pin Change Enable Mask 2
                                 .equ	PCINT3	= 3	; Pin Change Enable Mask 3
                                 .equ	PCINT4	= 4	; Pin Change Enable Mask 4
                                 .equ	PCINT5	= 5	; Pin Change Enable Mask 5
                                 .equ	PCINT6	= 6	; Pin Change Enable Mask 6
                                 .equ	PCINT7	= 7	; Pin Change Enable Mask 7
                                 
                                 
                                 ; ***** CPU **************************
                                 ; SREG - Status Register
                                 .equ	SREG_C	= 0	; Carry Flag
                                 .equ	SREG_Z	= 1	; Zero Flag
                                 .equ	SREG_N	= 2	; Negative Flag
                                 .equ	SREG_V	= 3	; Two's Complement Overflow Flag
                                 .equ	SREG_S	= 4	; Sign Bit
                                 .equ	SREG_H	= 5	; Half Carry Flag
                                 .equ	SREG_T	= 6	; Bit Copy Storage
                                 .equ	SREG_I	= 7	; Global Interrupt Enable
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	IVCE	= 0	; Interrupt Vector Change Enable
                                 .equ	IVSEL	= 1	; Interrupt Vector Select
                                 .equ	PUD	= 4	; Pull-up disable
                                 ;.equ	JTD	= 7	; JTAG Interface Disable
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	PORF	= 0	; Power-on reset flag
                                 .equ	EXTRF	= 1	; External Reset Flag
                                 .equ	BORF	= 2	; Brown-out Reset Flag
                                 .equ	WDRF	= 3	; Watchdog Reset Flag
                                 ;.equ	JTRF	= 4	; JTAG Reset Flag
                                 
                                 ; XMCRA - External Memory Control Register A
                                 .equ	SRW00	= 0	; Wait state select bit lower page
                                 .equ	SRW01	= 1	; Wait state select bit lower page
                                 .equ	SRW10	= 2	; Wait state select bit upper page
                                 .equ	SRW11	= 3	; Wait state select bit upper page
                                 .equ	SRL0	= 4	; Wait state page limit
                                 .equ	SRL1	= 5	; Wait state page limit
                                 .equ	SRL2	= 6	; Wait state page limit
                                 .equ	SRE	= 7	; External SRAM Enable
                                 
                                 ; XMCRB - External Memory Control Register B
                                 .equ	XMM0	= 0	; External Memory High Mask
                                 .equ	XMM1	= 1	; External Memory High Mask
                                 .equ	XMM2	= 2	; External Memory High Mask
                                 .equ	XMBK	= 7	; External Memory Bus Keeper Enable
                                 
                                 ; OSCCAL - Oscillator Calibration Value
                                 .equ	CAL0	= 0	; Oscillator Calibration Value Bit0
                                 .equ	CAL1	= 1	; Oscillator Calibration Value Bit1
                                 .equ	CAL2	= 2	; Oscillator Calibration Value Bit2
                                 .equ	CAL3	= 3	; Oscillator Calibration Value Bit3
                                 .equ	CAL4	= 4	; Oscillator Calibration Value Bit4
                                 .equ	CAL5	= 5	; Oscillator Calibration Value Bit5
                                 .equ	CAL6	= 6	; Oscillator Calibration Value Bit6
                                 .equ	CAL7	= 7	; Oscillator Calibration Value Bit7
                                 
                                 ; CLKPR - 
                                 .equ	CLKPS0	= 0	; 
                                 .equ	CLKPS1	= 1	; 
                                 .equ	CLKPS2	= 2	; 
                                 .equ	CLKPS3	= 3	; 
                                 .equ	CLKPCE	= 7	; 
                                 
                                 ; SMCR - Sleep Mode Control Register
                                 .equ	SE	= 0	; Sleep Enable
                                 .equ	SM0	= 1	; Sleep Mode Select bit 0
                                 .equ	SM1	= 2	; Sleep Mode Select bit 1
                                 .equ	SM2	= 3	; Sleep Mode Select bit 2
                                 
                                 ; RAMPZ - RAM Page Z Select Register
                                 .equ	RAMPZ0	= 0	; RAM Page Z Select Register Bit 0
                                 .equ	RAMPZ1	= 1	; RAM Page Z Select Register Bit 1
                                 
                                 ; EIND - Extended Indirect Register
                                 .equ	EIND0	= 0	; Bit 0
                                 
                                 ; GPIOR2 - General Purpose IO Register 2
                                 .equ	GPIOR20	= 0	; General Purpose IO Register 2 bit 0
                                 .equ	GPIOR21	= 1	; General Purpose IO Register 2 bit 1
                                 .equ	GPIOR22	= 2	; General Purpose IO Register 2 bit 2
                                 .equ	GPIOR23	= 3	; General Purpose IO Register 2 bit 3
                                 .equ	GPIOR24	= 4	; General Purpose IO Register 2 bit 4
                                 .equ	GPIOR25	= 5	; General Purpose IO Register 2 bit 5
                                 .equ	GPIOR26	= 6	; General Purpose IO Register 2 bit 6
                                 .equ	GPIOR27	= 7	; General Purpose IO Register 2 bit 7
                                 
                                 ; GPIOR1 - General Purpose IO Register 1
                                 .equ	GPIOR10	= 0	; General Purpose IO Register 1 bit 0
                                 .equ	GPIOR11	= 1	; General Purpose IO Register 1 bit 1
                                 .equ	GPIOR12	= 2	; General Purpose IO Register 1 bit 2
                                 .equ	GPIOR13	= 3	; General Purpose IO Register 1 bit 3
                                 .equ	GPIOR14	= 4	; General Purpose IO Register 1 bit 4
                                 .equ	GPIOR15	= 5	; General Purpose IO Register 1 bit 5
                                 .equ	GPIOR16	= 6	; General Purpose IO Register 1 bit 6
                                 .equ	GPIOR17	= 7	; General Purpose IO Register 1 bit 7
                                 
                                 ; GPIOR0 - General Purpose IO Register 0
                                 .equ	GPIOR00	= 0	; General Purpose IO Register 0 bit 0
                                 .equ	GPIOR01	= 1	; General Purpose IO Register 0 bit 1
                                 .equ	GPIOR02	= 2	; General Purpose IO Register 0 bit 2
                                 .equ	GPIOR03	= 3	; General Purpose IO Register 0 bit 3
                                 .equ	GPIOR04	= 4	; General Purpose IO Register 0 bit 4
                                 .equ	GPIOR05	= 5	; General Purpose IO Register 0 bit 5
                                 .equ	GPIOR06	= 6	; General Purpose IO Register 0 bit 6
                                 .equ	GPIOR07	= 7	; General Purpose IO Register 0 bit 7
                                 
                                 ; PRR1 - Power Reduction Register1
                                 .equ	PRUSART1	= 0	; Power Reduction USART1
                                 .equ	PRUSART2	= 1	; Power Reduction USART2
                                 .equ	PRUSART3	= 2	; Power Reduction USART3
                                 .equ	PRTIM3	= 3	; Power Reduction Timer/Counter3
                                 .equ	PRTIM4	= 4	; Power Reduction Timer/Counter4
                                 .equ	PRTIM5	= 5	; Power Reduction Timer/Counter5
                                 
                                 ; PRR0 - Power Reduction Register0
                                 .equ	PRADC	= 0	; Power Reduction ADC
                                 .equ	PRUSART0	= 1	; Power Reduction USART
                                 .equ	PRSPI	= 2	; Power Reduction Serial Peripheral Interface
                                 .equ	PRTIM1	= 3	; Power Reduction Timer/Counter1
                                 .equ	PRTIM0	= 5	; Power Reduction Timer/Counter0
                                 .equ	PRTIM2	= 6	; Power Reduction Timer/Counter2
                                 .equ	PRTWI	= 7	; Power Reduction TWI
                                 
                                 
                                 ; ***** AD_CONVERTER *****************
                                 ; ADMUX - The ADC multiplexer Selection Register
                                 .equ	MUX0	= 0	; Analog Channel and Gain Selection Bits
                                 .equ	MUX1	= 1	; Analog Channel and Gain Selection Bits
                                 .equ	MUX2	= 2	; Analog Channel and Gain Selection Bits
                                 .equ	MUX3	= 3	; Analog Channel and Gain Selection Bits
                                 .equ	MUX4	= 4	; Analog Channel and Gain Selection Bits
                                 .equ	ADLAR	= 5	; Left Adjust Result
                                 .equ	REFS0	= 6	; Reference Selection Bit 0
                                 .equ	REFS1	= 7	; Reference Selection Bit 1
                                 
                                 ; ADCSRA - The ADC Control and Status register A
                                 .equ	ADPS0	= 0	; ADC  Prescaler Select Bits
                                 .equ	ADPS1	= 1	; ADC  Prescaler Select Bits
                                 .equ	ADPS2	= 2	; ADC  Prescaler Select Bits
                                 .equ	ADIE	= 3	; ADC Interrupt Enable
                                 .equ	ADIF	= 4	; ADC Interrupt Flag
                                 .equ	ADATE	= 5	; ADC  Auto Trigger Enable
                                 .equ	ADSC	= 6	; ADC Start Conversion
                                 .equ	ADEN	= 7	; ADC Enable
                                 
                                 ; ADCSRB - The ADC Control and Status register B
                                 .equ	ADTS0	= 0	; ADC Auto Trigger Source bit 0
                                 .equ	ADTS1	= 1	; ADC Auto Trigger Source bit 1
                                 .equ	ADTS2	= 2	; ADC Auto Trigger Source bit 2
                                 .equ	MUX5	= 3	; Analog Channel and Gain Selection Bits
                                 ;.equ	ACME	= 6	; 
                                 
                                 ; ADCH - ADC Data Register High Byte
                                 .equ	ADCH0	= 0	; ADC Data Register High Byte Bit 0
                                 .equ	ADCH1	= 1	; ADC Data Register High Byte Bit 1
                                 .equ	ADCH2	= 2	; ADC Data Register High Byte Bit 2
                                 .equ	ADCH3	= 3	; ADC Data Register High Byte Bit 3
                                 .equ	ADCH4	= 4	; ADC Data Register High Byte Bit 4
                                 .equ	ADCH5	= 5	; ADC Data Register High Byte Bit 5
                                 .equ	ADCH6	= 6	; ADC Data Register High Byte Bit 6
                                 .equ	ADCH7	= 7	; ADC Data Register High Byte Bit 7
                                 
                                 ; ADCL - ADC Data Register Low Byte
                                 .equ	ADCL0	= 0	; ADC Data Register Low Byte Bit 0
                                 .equ	ADCL1	= 1	; ADC Data Register Low Byte Bit 1
                                 .equ	ADCL2	= 2	; ADC Data Register Low Byte Bit 2
                                 .equ	ADCL3	= 3	; ADC Data Register Low Byte Bit 3
                                 .equ	ADCL4	= 4	; ADC Data Register Low Byte Bit 4
                                 .equ	ADCL5	= 5	; ADC Data Register Low Byte Bit 5
                                 .equ	ADCL6	= 6	; ADC Data Register Low Byte Bit 6
                                 .equ	ADCL7	= 7	; ADC Data Register Low Byte Bit 7
                                 
                                 ; DIDR0 - Digital Input Disable Register
                                 .equ	ADC0D	= 0	; 
                                 .equ	ADC1D	= 1	; 
                                 .equ	ADC2D	= 2	; 
                                 .equ	ADC3D	= 3	; 
                                 .equ	ADC4D	= 4	; 
                                 .equ	ADC5D	= 5	; 
                                 .equ	ADC6D	= 6	; 
                                 .equ	ADC7D	= 7	; 
                                 
                                 ; DIDR2 - Digital Input Disable Register
                                 .equ	ADC8D	= 0	; 
                                 .equ	ADC9D	= 1	; 
                                 .equ	ADC10D	= 2	; 
                                 .equ	ADC11D	= 3	; 
                                 .equ	ADC12D	= 4	; 
                                 .equ	ADC13D	= 5	; 
                                 .equ	ADC14D	= 6	; 
                                 .equ	ADC15D	= 7	; 
                                 
                                 
                                 ; ***** BOOT_LOAD ********************
                                 ; SPMCSR - Store Program Memory Control Register
                                 .equ	SPMEN	= 0	; Store Program Memory Enable
                                 .equ	PGERS	= 1	; Page Erase
                                 .equ	PGWRT	= 2	; Page Write
                                 .equ	BLBSET	= 3	; Boot Lock Bit Set
                                 .equ	RWWSRE	= 4	; Read While Write section read enable
                                 .equ	SIGRD	= 5	; Signature Row Read
                                 .equ	RWWSB	= 6	; Read While Write Section Busy
                                 .equ	SPMIE	= 7	; SPM Interrupt Enable
                                 
                                 
                                 ; ***** USART2 ***********************
                                 ; UDR2 - USART I/O Data Register
                                 .equ	UDR2_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR2_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR2_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR2_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR2_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR2_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR2_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR2_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR2A - USART Control and Status Register A
                                 .equ	MPCM2	= 0	; Multi-processor Communication Mode
                                 .equ	U2X2	= 1	; Double the USART transmission speed
                                 .equ	UPE2	= 2	; Parity Error
                                 .equ	DOR2	= 3	; Data overRun
                                 .equ	FE2	= 4	; Framing Error
                                 .equ	UDRE2	= 5	; USART Data Register Empty
                                 .equ	TXC2	= 6	; USART Transmitt Complete
                                 .equ	RXC2	= 7	; USART Receive Complete
                                 
                                 ; UCSR2B - USART Control and Status Register B
                                 .equ	TXB82	= 0	; Transmit Data Bit 8
                                 .equ	RXB82	= 1	; Receive Data Bit 8
                                 .equ	UCSZ22	= 2	; Character Size
                                 .equ	TXEN2	= 3	; Transmitter Enable
                                 .equ	RXEN2	= 4	; Receiver Enable
                                 .equ	UDRIE2	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE2	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE2	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR2C - USART Control and Status Register C
                                 .equ	UCPOL2	= 0	; Clock Polarity
                                 .equ	UCSZ20	= 1	; Character Size
                                 .equ	UCSZ21	= 2	; Character Size
                                 .equ	USBS2	= 3	; Stop Bit Select
                                 .equ	UPM20	= 4	; Parity Mode Bit 0
                                 .equ	UPM21	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL20	= 6	; USART Mode Select
                                 .equ	UMSEL21	= 7	; USART Mode Select
                                 
                                 ; UBRR2H - USART Baud Rate Register High Byte
                                 ;.equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 ;.equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 ;.equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 ;.equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR2L - USART Baud Rate Register Low Byte
                                 .equ	UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	UBRR1	= 1	; USART Baud Rate Register bit 1
                                 ;.equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 ;.equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 ;.equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 ;.equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 ;.equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 ;.equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** USART3 ***********************
                                 ; UDR3 - USART I/O Data Register
                                 .equ	UDR3_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR3_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR3_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR3_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR3_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR3_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR3_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR3_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR3A - USART Control and Status Register A
                                 .equ	MPCM3	= 0	; Multi-processor Communication Mode
                                 .equ	U2X3	= 1	; Double the USART transmission speed
                                 .equ	UPE3	= 2	; Parity Error
                                 .equ	DOR3	= 3	; Data overRun
                                 .equ	FE3	= 4	; Framing Error
                                 .equ	UDRE3	= 5	; USART Data Register Empty
                                 .equ	TXC3	= 6	; USART Transmitt Complete
                                 .equ	RXC3	= 7	; USART Receive Complete
                                 
                                 ; UCSR3B - USART Control and Status Register B
                                 .equ	TXB83	= 0	; Transmit Data Bit 8
                                 .equ	RXB83	= 1	; Receive Data Bit 8
                                 .equ	UCSZ32	= 2	; Character Size
                                 .equ	TXEN3	= 3	; Transmitter Enable
                                 .equ	RXEN3	= 4	; Receiver Enable
                                 .equ	UDRIE3	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE3	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE3	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR3C - USART Control and Status Register C
                                 .equ	UCPOL3	= 0	; Clock Polarity
                                 .equ	UCSZ30	= 1	; Character Size
                                 .equ	UCSZ31	= 2	; Character Size
                                 .equ	USBS3	= 3	; Stop Bit Select
                                 .equ	UPM30	= 4	; Parity Mode Bit 0
                                 .equ	UPM31	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL30	= 6	; USART Mode Select
                                 .equ	UMSEL31	= 7	; USART Mode Select
                                 
                                 ; UBRR3H - USART Baud Rate Register High Byte
                                 ;.equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 ;.equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 ;.equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 ;.equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR3L - USART Baud Rate Register Low Byte
                                 ;.equ	UBRR0	= 0	; USART Baud Rate Register bit 0
                                 ;.equ	UBRR1	= 1	; USART Baud Rate Register bit 1
                                 ;.equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 ;.equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 ;.equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 ;.equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 ;.equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 ;.equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 
                                 ; ***** LOCKSBITS ********************************************************
                                 .equ	LB1	= 0	; Lock bit
                                 .equ	LB2	= 1	; Lock bit
                                 .equ	BLB01	= 2	; Boot Lock bit
                                 .equ	BLB02	= 3	; Boot Lock bit
                                 .equ	BLB11	= 4	; Boot lock bit
                                 .equ	BLB12	= 5	; Boot lock bit
                                 
                                 
                                 ; ***** FUSES ************************************************************
                                 ; LOW fuse bits
                                 .equ	CKSEL0	= 0	; Select Clock Source
                                 .equ	CKSEL1	= 1	; Select Clock Source
                                 .equ	CKSEL2	= 2	; Select Clock Source
                                 .equ	CKSEL3	= 3	; Select Clock Source
                                 .equ	SUT0	= 4	; Select start-up time
                                 .equ	SUT1	= 5	; Select start-up time
                                 .equ	CKOUT	= 6	; Clock output
                                 .equ	CKDIV8	= 7	; Divide clock by 8
                                 
                                 ; HIGH fuse bits
                                 .equ	BOOTRST	= 0	; Select Reset Vector
                                 .equ	BOOTSZ0	= 1	; Select Boot Size
                                 .equ	BOOTSZ1	= 2	; Select Boot Size
                                 .equ	EESAVE	= 3	; EEPROM memory is preserved through chip erase
                                 .equ	WDTON	= 4	; Watchdog timer always on
                                 .equ	SPIEN	= 5	; Enable Serial programming and Data Downloading
                                 .equ	JTAGEN	= 6	; Enable JTAG
                                 .equ	OCDEN	= 7	; Enable OCD
                                 
                                 ; EXTENDED fuse bits
                                 .equ	BODLEVEL0	= 0	; Brown-out Detector trigger level
                                 .equ	BODLEVEL1	= 1	; Brown-out Detector trigger level
                                 .equ	BODLEVEL2	= 2	; Brown-out Detector trigger level
                                 
                                 
                                 
                                 ; ***** CPU REGISTER DEFINITIONS *****************************************
                                 .def	XH	= r27
                                 .def	XL	= r26
                                 .def	YH	= r29
                                 .def	YL	= r28
                                 .def	ZH	= r31
                                 .def	ZL	= r30
                                 
                                 
                                 
                                 ; ***** DATA MEMORY DECLARATIONS *****************************************
                                 .equ	FLASHEND	= 0x1ffff	; Note: Word address
                                 .equ	IOEND	= 0x01ff
                                 .equ	SRAM_START	= 0x0200
                                 .equ	SRAM_SIZE	= 8192
                                 .equ	RAMEND	= 0x21ff
                                 .equ	XRAMEND	= 0xffff
                                 .equ	E2END	= 0x0fff
                                 .equ	EEPROMEND	= 0x0fff
                                 .equ	EEADRBITS	= 12
                                 #pragma AVRPART MEMORY PROG_FLASH 262144
                                 #pragma AVRPART MEMORY EEPROM 4096
                                 #pragma AVRPART MEMORY INT_SRAM SIZE 8192
                                 #pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                                 
                                 
                                 
                                 ; ***** BOOTLOADER DECLARATIONS ******************************************
                                 .equ	NRWW_START_ADDR	= 0x1f000
                                 .equ	NRWW_STOP_ADDR	= 0x1ffff
                                 .equ	RWW_START_ADDR	= 0x0
                                 .equ	RWW_STOP_ADDR	= 0x1efff
                                 .equ	PAGESIZE	= 128
                                 .equ	FIRSTBOOTSTART	= 0x1fe00
                                 .equ	SECONDBOOTSTART	= 0x1fc00
                                 .equ	THIRDBOOTSTART	= 0x1f800
                                 .equ	FOURTHBOOTSTART	= 0x1f000
                                 .equ	SMALLBOOTSTART	= FIRSTBOOTSTART
                                 .equ	LARGEBOOTSTART	= FOURTHBOOTSTART
                                 
                                 
                                 
                                 ; ***** INTERRUPT VECTORS ************************************************
                                 .equ	INT0addr	= 0x0002	; External Interrupt Request 0
                                 .equ	INT1addr	= 0x0004	; External Interrupt Request 1
                                 .equ	INT2addr	= 0x0006	; External Interrupt Request 2
                                 .equ	INT3addr	= 0x0008	; External Interrupt Request 3
                                 .equ	INT4addr	= 0x000a	; External Interrupt Request 4
                                 .equ	INT5addr	= 0x000c	; External Interrupt Request 5
                                 .equ	INT6addr	= 0x000e	; External Interrupt Request 6
                                 .equ	INT7addr	= 0x0010	; External Interrupt Request 7
                                 .equ	PCI0addr	= 0x0012	; Pin Change Interrupt Request 0
                                 .equ	PCI1addr	= 0x0014	; Pin Change Interrupt Request 1
                                 .equ	PCI2addr	= 0x0016	; Pin Change Interrupt Request 2
                                 .equ	WDTaddr	= 0x0018	; Watchdog Time-out Interrupt
                                 .equ	OC2Aaddr	= 0x001a	; Timer/Counter2 Compare Match A
                                 .equ	OC2Baddr	= 0x001c	; Timer/Counter2 Compare Match B
                                 .equ	OVF2addr	= 0x001e	; Timer/Counter2 Overflow
                                 .equ	ICP1addr	= 0x0020	; Timer/Counter1 Capture Event
                                 .equ	OC1Aaddr	= 0x0022	; Timer/Counter1 Compare Match A
                                 .equ	OC1Baddr	= 0x0024	; Timer/Counter1 Compare Match B
                                 .equ	OC1Caddr	= 0x0026	; Timer/Counter1 Compare Match C
                                 .equ	OVF1addr	= 0x0028	; Timer/Counter1 Overflow
                                 .equ	OC0Aaddr	= 0x002a	; Timer/Counter0 Compare Match A
                                 .equ	OC0Baddr	= 0x002c	; Timer/Counter0 Compare Match B
                                 .equ	OVF0addr	= 0x002e	; Timer/Counter0 Overflow
                                 .equ	SPIaddr	= 0x0030	; SPI Serial Transfer Complete
                                 .equ	URXC0addr	= 0x0032	; USART0, Rx Complete
                                 .equ	UDRE0addr	= 0x0034	; USART0 Data register Empty
                                 .equ	UTXC0addr	= 0x0036	; USART0, Tx Complete
                                 .equ	ACIaddr	= 0x0038	; Analog Comparator
                                 .equ	ADCCaddr	= 0x003a	; ADC Conversion Complete
                                 .equ	ERDYaddr	= 0x003c	; EEPROM Ready
                                 .equ	ICP3addr	= 0x003e	; Timer/Counter3 Capture Event
                                 .equ	OC3Aaddr	= 0x0040	; Timer/Counter3 Compare Match A
                                 .equ	OC3Baddr	= 0x0042	; Timer/Counter3 Compare Match B
                                 .equ	OC3Caddr	= 0x0044	; Timer/Counter3 Compare Match C
                                 .equ	OVF3addr	= 0x0046	; Timer/Counter3 Overflow
                                 .equ	URXC1addr	= 0x0048	; USART1, Rx Complete
                                 .equ	UDRE1addr	= 0x004a	; USART1 Data register Empty
                                 .equ	UTXC1addr	= 0x004c	; USART1, Tx Complete
                                 .equ	TWIaddr	= 0x004e	; 2-wire Serial Interface
                                 .equ	SPMRaddr	= 0x0050	; Store Program Memory Read
                                 .equ	ICP4addr	= 0x0052	; Timer/Counter4 Capture Event
                                 .equ	OC4Aaddr	= 0x0054	; Timer/Counter4 Compare Match A
                                 .equ	OC4Baddr	= 0x0056	; Timer/Counter4 Compare Match B
                                 .equ	OC4Caddr	= 0x0058	; Timer/Counter4 Compare Match C
                                 .equ	OVF4addr	= 0x005a	; Timer/Counter4 Overflow
                                 .equ	ICP5addr	= 0x005c	; Timer/Counter5 Capture Event
                                 .equ	OC5Aaddr	= 0x005e	; Timer/Counter5 Compare Match A
                                 .equ	OC5Baddr	= 0x0060	; Timer/Counter5 Compare Match B
                                 .equ	OC5Caddr	= 0x0062	; Timer/Counter5 Compare Match C
                                 .equ	OVF5addr	= 0x0064	; Timer/Counter5 Overflow
                                 .equ	URXC2addr	= 0x0066	; USART2, Rx Complete
                                 .equ	UDRE2addr	= 0x0068	; USART2 Data register Empty
                                 .equ	UTXC2addr	= 0x006a	; USART2, Tx Complete
                                 .equ	URXC3addr	= 0x006c	; USART3, Rx Complete
                                 .equ	UDRE3addr	= 0x006e	; USART3 Data register Empty
                                 .equ	UTXC3addr	= 0x0070	; USART3, Tx Complete
                                 
                                 .equ	INT_VECTORS_SIZE	= 114	; size in words
                                 
                                 #endif  /* _M2560DEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega2560.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m2560def.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega2560
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega2560
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M2560DEF_INC_
                                 #endif  /* _M2560DEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 .include "map.inc"
                                 
                                  * map.inc
                                  *
                                  *  Created: 17/10/2017 7:23:51 PM
                                  *   Author: lmcmz
                                  */ 
                                 
                                 
                                 .org 0x374
                                 matrix:
000374 1865
000375 7629
000376 5429
000377 5143
000378 4f4b
000379 1c2d
00037a 1c47
00037b 5b50
00037c 111d
00037d 5870
00037e 2c6e
00037f 0e6e
000380 6c70
000381 1d27
000382 6e32
000383 3c4a
000384 1327
000385 252c
000386 5455
000387 550e
000388 6c0d
000389 1b60
00038a 543e
00038b 2448
00038c 381d
00038d 2952
00038e 521f
00038f 7a54
000390 1770
000391 7b61
000392 4019
000393 4766                      .db 101,24,41,118,41,84,67,81,75,79,45,28,71,28,80,91,29,17,112,88,110,44,110,14,112,108,39,29,50,110,74,60,39,19,44,37,85,84,14,85,13,108,96,27,62,84,72,36,29,56,82,41,31,82,84,122,112,23,97,123,25,64,102,71
000394 4831
000395 3b65
000396 4c34
000397 2126
000398 575c
000399 5d39
00039a 5867
00039b 4d3e
00039c 5a41
00039d 4970
00039e 5f7b
00039f 7972
0003a0 1c1e
0003a1 585b
0003a2 733c
0003a3 5f4c
0003a4 570f
0003a5 1b70
0003a6 6845
0003a7 0d0d
0003a8 203c
0003a9 555a
0003aa 2770
0003ab 7063
0003ac 7c67
0003ad 5b69
0003ae 3460
0003af 1552
0003b0 7321
0003b1 3867
0003b2 317a
0003b3 6f2d                      .db 49,72,101,59,52,76,38,33,92,87,57,93,103,88,62,77,65,90,112,73,123,95,114,121,30,28,91,88,60,115,76,95,15,87,112,27,69,104,13,13,60,32,90,85,112,39,99,112,103,124,105,91,96,52,82,21,33,115,103,56,122,49,45,111
0003b4 1f61
0003b5 2d39
0003b6 3574
0003b7 4b52
0003b8 7911
0003b9 6664
0003ba 7542
0003bb 0d67
0003bc 116f
0003bd 5322
0003be 1234
0003bf 326e
0003c0 6274
0003c1 4b24
0003c2 3b1d
0003c3 4350
0003c4 565b
0003c5 1d10
0003c6 423a
0003c7 726f
0003c8 7930
0003c9 7254
0003ca 3666
0003cb 3775
0003cc 2162
0003cd 6013
0003ce 4b13
0003cf 143c
0003d0 792c
0003d1 4d31
0003d2 4d18
0003d3 2177                      .db 97,31,57,45,116,53,82,75,17,121,100,102,66,117,103,13,111,17,34,83,52,18,110,50,116,98,36,75,29,59,80,67,91,86,16,29,58,66,111,114,48,121,84,114,102,54,117,55,98,33,19,96,19,75,60,20,44,121,49,77,24,77,119,33
0003d4 772e
0003d5 2719
0003d6 4c5f
0003d7 1466
0003d8 1f43
0003d9 3159
0003da 3a39
0003db 461d
0003dc 4a41
0003dd 0d25
0003de 6661
0003df 3165
0003e0 0f70
0003e1 3655
0003e2 3619
0003e3 270b
0003e4 7150
0003e5 7a52
0003e6 565e
0003e7 2424
0003e8 1121
0003e9 4e70
0003ea 415a
0003eb 3614
0003ec 4120
0003ed 3b4c
0003ee 2c73
0003ef 0b37
0003f0 1b4d
0003f1 2538
0003f2 7d1f
0003f3 142f                      .db 46,119,25,39,95,76,102,20,67,31,89,49,57,58,29,70,65,74,37,13,97,102,101,49,112,15,85,54,25,54,11,39,80,113,82,122,94,86,36,36,33,17,112,78,90,65,20,54,32,65,76,59,115,44,55,11,77,27,56,37,31,125,47,20
0003f4 5772
0003f5 1864
0003f6 7e7b
0003f7 2276
0003f8 444d
0003f9 3d78
0003fa 7c48
0003fb 4675
0003fc 3b2d
0003fd 6156
0003fe 2751
0003ff 287e
000400 4e1c
000401 2132
000402 5d5a
000403 0c62
000404 1175
000405 1743
000406 1920
000407 0d5b
000408 517c
000409 5d50
00040a 6d0e
00040b 2e73
00040c 4630
00040d 7714
00040e 4d51
00040f 7721
000410 7b0e
000411 1276
000412 4066
000413 2865                      .db 114,87,100,24,123,126,118,34,77,68,120,61,72,124,117,70,45,59,86,97,81,39,126,40,28,78,50,33,90,93,98,12,117,17,67,23,32,25,91,13,124,81,80,93,14,109,115,46,48,70,20,119,81,77,33,119,14,123,118,18,102,64,101,40
000414 483a
000415 364a
000416 6d11
000417 1359
000418 250a
000419 321a
00041a 5452
00041b 7c6e
00041c 4d4b
00041d 3b39
00041e 4246
00041f 754f
000420 2219
000421 1c49
000422 3742
000423 763f
000424 1566
000425 0a69
000426 253a
000427 0e10
000428 7047
000429 7577
00042a 5a28
00042b 5d45
00042c 0a0c
00042d 2c63
00042e 6335
00042f 380f
000430 5e2f
000431 7254
000432 796b
000433 1956                      .db 58,72,74,54,17,109,89,19,10,37,26,50,82,84,110,124,75,77,57,59,70,66,79,117,25,34,73,28,66,55,63,118,102,21,105,10,58,37,16,14,71,112,119,117,40,90,69,93,12,10,99,44,53,99,15,56,47,94,84,114,107,121,86,25
000434 6318
000435 6a47
000436 7425
000437 6243
000438 7c55
000439 0b1f
00043a 4f1c
00043b 244c
00043c 374e
00043d 2c26
00043e 3221
00043f 3d24
000440 7120
000441 7b63
000442 4376
000443 1372
000444 2b5f
000445 7e6e
000446 1457
000447 6663
000448 7343
000449 6d5a
00044a 516b
00044b 196d
00044c 764a
00044d 3c49
00044e 3b19
00044f 6c79
000450 0c45
000451 3d65
000452 5477
000453 7945                      .db 24,99,71,106,37,116,67,98,85,124,31,11,28,79,76,36,78,55,38,44,33,50,36,61,32,113,99,123,118,67,114,19,95,43,110,126,87,20,99,102,67,115,90,109,107,81,109,25,74,118,73,60,25,59,121,108,69,12,101,61,119,84,69,121
000454 502f
000455 1854
000456 114a
000457 6e44
000458 6545
000459 6a49
00045a 1e73
00045b 743e
00045c 3013
00045d 5a4a
00045e 1a60
00045f 650e
000460 4666
000461 5175
000462 4c0d
000463 4d7a
000464 7469
000465 2317
000466 787e
000467 2934
000468 7844
000469 4837
00046a 297e
00046b 2269
00046c 1f16
00046d 2920
00046e 4f52
00046f 347b
000470 7a75
000471 3565
000472 1237
000473 2227                      .db 47,80,84,24,74,17,68,110,69,101,73,106,115,30,62,116,19,48,74,90,96,26,14,101,102,70,117,81,13,76,122,77,105,116,23,35,126,120,52,41,68,120,55,72,126,41,105,34,22,31,32,41,82,79,123,52,117,122,101,53,55,18,39,34
000474 4024
000475 4d57
000476 2d1d
000477 2f15
000478 4f68
000479 3737
00047a 1a1d
00047b 7317
00047c 6648
00047d 475a
00047e 6411
00047f 1f4b
000480 1c38
000481 3c66
000482 261a
000483 6e34
000484 206d
000485 557e
000486 1a41
000487 3a68
000488 6265
000489 3b3a
00048a 561a
00048b 6973
00048c 154f
00048d 6275
00048e 4e6d
00048f 2d68
000490 1652
000491 2b2d
000492 286a
000493 0b2f                      .db 36,64,87,77,29,45,21,47,104,79,55,55,29,26,23,115,72,102,90,71,17,100,75,31,56,28,102,60,26,38,52,110,109,32,126,85,65,26,104,58,101,98,58,59,26,86,115,105,79,21,117,98,109,78,104,45,82,22,45,43,106,40,47,11
000494 1354
000495 7d61
000496 4534
000497 7a5a
000498 4011
000499 2652
00049a 125f
00049b 467d
00049c 6979
00049d 4c16
00049e 1a6b
00049f 221b
0004a0 771c
0004a1 3c22
0004a2 5010
0004a3 584e
0004a4 0c44
0004a5 682b
0004a6 5238
0004a7 1c43
0004a8 436c
0004a9 417e
0004aa 1118
0004ab 3f73
0004ac 7b3a
0004ad 2841
0004ae 120c
0004af 5d45
0004b0 6418
0004b1 5e24
0004b2 4969
0004b3 306c                      .db 84,19,97,125,52,69,90,122,17,64,82,38,95,18,125,70,121,105,22,76,107,26,27,34,28,119,34,60,16,80,78,88,68,12,43,104,56,82,67,28,108,67,126,65,24,17,115,63,58,123,65,40,12,18,69,93,24,100,36,94,105,73,108,48
0004b4 282b
0004b5 281f
0004b6 5c3c
0004b7 384f
0004b8 4d34
0004b9 6827
0004ba 2120
0004bb 3823
0004bc 4b38
0004bd 630c
0004be 3868
0004bf 5071
0004c0 5655
0004c1 5c14
0004c2 0c50
0004c3 3535
0004c4 6870
0004c5 7d3e
0004c6 5e4f
0004c7 5f60
0004c8 4d0c
0004c9 1d0f
0004ca 390b
0004cb 210b
0004cc 5e34
0004cd 3e18
0004ce 5345
0004cf 6e46
0004d0 3a7e
0004d1 1635
0004d2 710c
0004d3 7617                      .db 43,40,31,40,60,92,79,56,52,77,39,104,32,33,35,56,56,75,12,99,104,56,113,80,85,86,20,92,80,12,53,53,112,104,62,125,79,94,96,95,12,77,15,29,11,57,11,33,52,94,24,62,69,83,70,110,126,58,53,22,12,113,23,118
0004d4 2c15
0004d5 7c67
0004d6 1030
0004d7 5e58
0004d8 3128
0004d9 1d19
0004da 2357
0004db 2771
0004dc 7552
0004dd 7044
0004de 264e
0004df 4f7b
0004e0 6769
0004e1 260d
0004e2 6970
0004e3 482b
0004e4 6f20
0004e5 4e2f
0004e6 613e
0004e7 5d11
0004e8 6749
0004e9 3a4a
0004ea 3161
0004eb 5c41
0004ec 5f3b
0004ed 2929
0004ee 1e5f
0004ef 2e20
0004f0 644a
0004f1 681c
0004f2 0e74
0004f3 4f5c                      .db 21,44,103,124,48,16,88,94,40,49,25,29,87,35,113,39,82,117,68,112,78,38,123,79,105,103,13,38,112,105,43,72,32,111,47,78,62,97,17,93,73,103,74,58,97,49,65,92,59,95,41,41,95,30,32,46,74,100,28,104,116,14,92,79
0004f4 150e
0004f5 3d1f
0004f6 362d
0004f7 2d0b
0004f8 4458
0004f9 6618
0004fa 1118
0004fb 4e1f
0004fc 0b12
0004fd 2064
0004fe 0d32
0004ff 7670
000500 272e
000501 1070
000502 751a
000503 2d57
000504 6a2a
000505 1074
000506 634a
000507 3670
000508 3d0b
000509 6520
00050a 1e2f
00050b 2974
00050c 7c69
00050d 2c0b
00050e 4334
00050f 3b78
000510 4f36
000511 3619
000512 4929
000513 1c6c                      .db 14,21,31,61,45,54,11,45,88,68,24,102,24,17,31,78,18,11,100,32,50,13,112,118,46,39,112,16,26,117,87,45,42,106,116,16,74,99,112,54,11,61,32,101,47,30,116,41,105,124,11,44,52,67,120,59,54,79,25,54,41,73,108,28
000514 6439
000515 4e1d
000516 5b50
000517 3d6d
000518 6576
000519 3578
00051a 540d
00051b 2458
00051c 7978
00051d 0e0f
00051e 2e3a
00051f 1461
000520 2628
000521 3427
000522 1515
000523 6b17
000524 1f1a
000525 4942
000526 6778
000527 3852
000528 3f54
000529 1532
00052a 2a50
00052b 2545
00052c 5d25
00052d 6119
00052e 4675
00052f 340b
000530 770a
000531 6513
000532 1729
000533 6755                      .db 57,100,29,78,80,91,109,61,118,101,120,53,13,84,88,36,120,121,15,14,58,46,97,20,40,38,39,52,21,21,23,107,26,31,66,73,120,103,82,56,84,63,50,21,80,42,69,37,37,93,25,97,117,70,11,52,10,119,19,101,41,23,85,103
000534 1128
000535 2c4b
000536 4b1a
000537 1158
000538 1c7b
000539 6072
00053a 3961
00053b 3349
00053c 131d
00053d 210d
00053e 671e
00053f 6a42
000540 5519
000541 3523
000542 1557
000543 194b
000544 0c42
000545 4a10
000546 6550
000547 0d4a
000548 250f
000549 1611
00054a 4754
00054b 7064
00054c 5a68
00054d 2239
00054e 6170
00054f 1f3c
000550 7033
000551 7d1d
000552 797e
000553 2a61                      .db 40,17,75,44,26,75,88,17,123,28,114,96,97,57,73,51,29,19,13,33,30,103,66,106,25,85,35,53,87,21,75,25,66,12,16,74,80,101,74,13,15,37,17,22,84,71,100,112,104,90,57,34,112,97,60,31,51,112,29,125,126,121,97,42
000554 5e4b
000555 4068
000556 1423
000557 743e
000558 1175
000559 7c0c
00055a 7c39
00055b 7727
00055c 2054
00055d 204f
00055e 6f66
00055f 701a
000560 4749
000561 483d
000562 2945
000563 2c0c
000564 3f5d
000565 6820
000566 691d
000567 187b
000568 2d5f
000569 751c
00056a 4045
00056b 574a
00056c 721c
00056d 5d0a
00056e 4f23
00056f 7254
000570 0c46
000571 3e14
000572 246e
000573 696d                      .db 75,94,104,64,35,20,62,116,117,17,12,124,57,124,39,119,84,32,79,32,102,111,26,112,73,71,61,72,69,41,12,44,93,63,32,104,29,105,123,24,95,45,28,117,69,64,74,87,28,114,10,93,35,79,84,114,70,12,20,62,110,36,109,105
000574 0b2e
000575 352a
000576 4f56
000577 752f
000578 6a6a
000579 6460
00057a 584d
00057b 3b1b
00057c 530f
00057d 3879
00057e 2334
00057f 7b65
000580 4855
000581 546b
000582 2633
000583 4f60
000584 2b34
000585 2768
000586 3158
000587 1c28
000588 313c
000589 0e43
00058a 2016
00058b 5a42
00058c 1b66
00058d 593f
00058e 7456
00058f 734c
000590 6b5a
000591 1213
000592 4f4c
000593 7b4c                      .db 46,11,42,53,86,79,47,117,106,106,96,100,77,88,27,59,15,83,121,56,52,35,101,123,85,72,107,84,51,38,96,79,52,43,104,39,88,49,40,28,60,49,67,14,22,32,66,90,102,27,63,89,86,116,76,115,90,107,19,18,76,79,76,123
000594 0a4a
000595 6243
000596 1b71
000597 186c
000598 6c5d
000599 403b
00059a 0a30
00059b 240c
00059c 320d
00059d 3c32
00059e 1a61
00059f 3d48
0005a0 6051
0005a1 2637
0005a2 3033
0005a3 5d32
0005a4 262e
0005a5 605f
0005a6 6131
0005a7 6b4f
0005a8 176c
0005a9 1b71
0005aa 6978
0005ab 7d53
0005ac 0c5e
0005ad 7e5f
0005ae 4a2d
0005af 1a64
0005b0 5c28
0005b1 5e26
0005b2 492f
0005b3 373f                      .db 74,10,67,98,113,27,108,24,93,108,59,64,48,10,12,36,13,50,50,60,97,26,72,61,81,96,55,38,51,48,50,93,46,38,95,96,49,97,79,107,108,23,113,27,120,105,83,125,94,12,95,126,45,74,100,26,40,92,38,94,47,73,63,55
0005b4 7e26
0005b5 7e77
0005b6 204b
0005b7 1423
0005b8 412e
0005b9 5f64
0005ba 1230
0005bb 7618
0005bc 1961
0005bd 742a
0005be 497d
0005bf 5c1c
0005c0 2667
0005c1 1b7e
0005c2 6f5d
0005c3 121c
0005c4 4c37
0005c5 3f24
0005c6 5977
0005c7 657a
0005c8 284f
0005c9 732a
0005ca 295d
0005cb 3476
0005cc 6a63
0005cd 4448
0005ce 425d
0005cf 3b3c
0005d0 0e3c
0005d1 1631
0005d2 6a69
0005d3 6846                      .db 38,126,119,126,75,32,35,20,46,65,100,95,48,18,24,118,97,25,42,116,125,73,28,92,103,38,126,27,93,111,28,18,55,76,36,63,119,89,122,101,79,40,42,115,93,41,118,52,99,106,72,68,93,66,60,59,60,14,49,22,105,106,70,104
0005d4 200f
0005d5 4c17
0005d6 1a4e
0005d7 1161
0005d8 2879
0005d9 3f0e
0005da 4966
0005db 3c3a
0005dc 497b
0005dd 1e7e
0005de 263c
0005df 7759
0005e0 0b68
0005e1 365e
0005e2 0e73
0005e3 382c
0005e4 4372
0005e5 201d
0005e6 1a7c
0005e7 5313
0005e8 6540
0005e9 0d43
0005ea 1770
0005eb 4e26
0005ec 3c20
0005ed 6966
0005ee 2e6e
0005ef 4b54
0005f0 5867
0005f1 6373
0005f2 2847
0005f3 1567                      .db 15,32,23,76,78,26,97,17,121,40,14,63,102,73,58,60,123,73,126,30,60,38,89,119,104,11,94,54,115,14,44,56,114,67,29,32,124,26,19,83,64,101,67,13,112,23,38,78,32,60,102,105,110,46,84,75,103,88,115,99,71,40,103,21
0005f4 414b
0005f5 4921
0005f6 2272
0005f7 2967
0005f8 3a45
0005f9 311d
0005fa 487c
0005fb 4714
0005fc 5b76
0005fd 642e
0005fe 6c6a
0005ff 1278
000600 5446
000601 2712
000602 3926
000603 4716
000604 636c
000605 316f
000606 7a3b
000607 6e64
000608 4945
000609 140a
00060a 7072
00060b 5364
00060c 3630
00060d 0a33
00060e 3d32
00060f 0a1c
000610 4a3b
000611 717e
000612 7339
000613 4831                      .db 75,65,33,73,114,34,103,41,69,58,29,49,124,72,20,71,118,91,46,100,106,108,120,18,70,84,18,39,38,57,22,71,108,99,111,49,59,122,100,110,69,73,10,20,114,112,100,83,48,54,51,10,50,61,28,10,59,74,126,113,57,115,49,72
000614 472a
000615 3f34
000616 2d42
000617 2d30
000618 7727
000619 3511
00061a 7e6d
00061b 0a4b
00061c 1336
00061d 7923
00061e 4051
00061f 3212
000620 7e47
000621 281f
000622 482e
000623 3143
000624 5113
000625 567c
000626 3033
000627 6550
000628 7847
000629 1129
00062a 102d
00062b 516b
00062c 736a
00062d 245d
00062e 355f
00062f 1221
000630 1b4f
000631 3518
000632 7125
000633 6b76                      .db 42,71,52,63,66,45,48,45,39,119,17,53,109,126,75,10,54,19,35,121,81,64,18,50,71,126,31,40,46,72,67,49,19,81,124,86,51,48,80,101,71,120,41,17,45,16,107,81,106,115,93,36,95,53,33,18,79,27,24,53,37,113,118,107
000634 2558
000635 4a2e
000636 5726
000637 265f
000638 1d74
000639 0c21
00063a 1e2a
00063b 6a62
00063c 4a22
00063d 6652
00063e 0d51
00063f 6f54
000640 4a33
000641 2c1d
000642 2963
000643 6f59
000644 0b16
000645 7445
000646 5a53
000647 3055
000648 4a54
000649 5639
00064a 2359
00064b 701e
00064c 3b11
00064d 7021
00064e 450b
00064f 6a17
000650 4c1f
000651 155e
000652 5d2e
000653 5662                      .db 88,37,46,74,38,87,95,38,116,29,33,12,42,30,98,106,34,74,82,102,81,13,84,111,51,74,29,44,99,41,89,111,22,11,69,116,83,90,85,48,84,74,57,86,89,35,30,112,17,59,33,112,11,69,23,106,31,76,94,21,46,93,98,86
000654 2934
000655 2445
000656 1c2d
000657 791b
000658 6449
000659 1c62
00065a 7646
00065b 5170
00065c 197a
00065d 1e1f
00065e 4038
00065f 112e
000660 731f
000661 0d1b
000662 1722
000663 5d59
000664 230c
000665 397e
000666 4f73
000667 3c10
000668 5835
000669 3e4b
00066a 4163
00066b 1074
00066c 4c63
00066d 7e64
00066e 510f
00066f 3a1d
000670 696c
000671 5357
000672 3933
000673 5a39                      .db 52,41,69,36,45,28,27,121,73,100,98,28,70,118,112,81,122,25,31,30,56,64,46,17,31,115,27,13,34,23,89,93,12,35,126,57,115,79,16,60,53,88,75,62,99,65,116,16,99,76,100,126,15,81,29,58,108,105,87,83,51,57,57,90
000674 7c6b
000675 1a7d
000676 2750
000677 1f76
000678 2e4b
000679 762d
00067a 242d
00067b 221f
00067c 5a2b
00067d 501d
00067e 375c
00067f 1d1f
000680 257c
000681 6a3f
000682 2749
000683 3e53
000684 7450
000685 122b
000686 3216
000687 3526
000688 4a1e
000689 3b6a
00068a 7912
00068b 4f15
00068c 0f25
00068d 0a1d
00068e 7e79
00068f 4576
000690 2a1e
000691 2f58
000692 0a66
000693 157b                      .db 107,124,125,26,80,39,118,31,75,46,45,118,45,36,31,34,43,90,29,80,92,55,31,29,124,37,63,106,73,39,83,62,80,116,43,18,22,50,38,53,30,74,106,59,18,121,21,79,37,15,29,10,121,126,118,69,30,42,88,47,102,10,123,21
000694 5634
000695 2e5a
000696 455f
000697 1a36
000698 1b22
000699 7c19
00069a 0a48
00069b 6e21
00069c 2924
00069d 7c55
00069e 1533
00069f 155f
0006a0 2024
0006a1 1145
0006a2 2275
0006a3 217d
0006a4 2d50
0006a5 244c
0006a6 2545
0006a7 5f6b
0006a8 380a
0006a9 6957
0006aa 382f
0006ab 525e
0006ac 3470
0006ad 745d
0006ae 5754
0006af 795f
0006b0 314c
0006b1 4173
0006b2 387b
0006b3 112c                      .db 52,86,90,46,95,69,54,26,34,27,25,124,72,10,33,110,36,41,85,124,51,21,95,21,36,32,69,17,117,34,125,33,80,45,76,36,69,37,107,95,10,56,87,105,47,56,94,82,112,52,93,116,84,87,95,121,76,49,115,65,123,56,44,17
0006b4 3e1a
0006b5 575c
0006b6 155d
0006b7 3c0f
0006b8 6410
0006b9 537d
0006ba 1d19
0006bb 3775
0006bc 0f27
0006bd 596f
0006be 7860
0006bf 596f
0006c0 6517
0006c1 463c
0006c2 5246
0006c3 0a46
0006c4 4645
0006c5 3440
0006c6 6769
0006c7 610e
0006c8 7074
0006c9 4d6e
0006ca 6c6a
0006cb 2844
0006cc 6978
0006cd 592e
0006ce 583b
0006cf 311c
0006d0 656a
0006d1 486b
0006d2 3565
0006d3 1c5d                      .db 26,62,92,87,93,21,15,60,16,100,125,83,25,29,117,55,39,15,111,89,96,120,111,89,23,101,60,70,70,82,70,10,69,70,64,52,105,103,14,97,116,112,110,77,106,108,68,40,120,105,46,89,59,88,28,49,106,101,107,72,101,53,93,28
0006d4 0f5b
0006d5 1a72
0006d6 6319
0006d7 540d
0006d8 2d14
0006d9 2a78
0006da 1536
0006db 5a0e
0006dc 5e68
0006dd 7663
0006de 5657
0006df 3b1c
0006e0 4711
0006e1 4935
0006e2 2274
0006e3 6c6b
0006e4 3160
0006e5 5a24
0006e6 7b0c
0006e7 4d69
0006e8 5a67
0006e9 3f76
0006ea 7448
0006eb 344d
0006ec 633d
0006ed 7e0c
0006ee 6011
0006ef 0f6f
0006f0 3b7a
0006f1 0f32
0006f2 3a27
0006f3 676f                      .db 91,15,114,26,25,99,13,84,20,45,120,42,54,21,14,90,104,94,99,118,87,86,28,59,17,71,53,73,116,34,107,108,96,49,36,90,12,123,105,77,103,90,118,63,72,116,77,52,61,99,12,126,17,96,111,15,122,59,50,15,39,58,111,103
0006f4 4531
0006f5 6c56
0006f6 203f
0006f7 1228
0006f8 6625
0006f9 5858
0006fa 2921
0006fb 595b
0006fc 6b31
0006fd 6d1e
0006fe 4158
0006ff 323c
000700 2051
000701 6945
000702 3e10
000703 5815
000704 7756
000705 1b1d
000706 4d51
000707 5f54
000708 701f
000709 1a49
00070a 3457
00070b 214e
00070c 3419
00070d 3d72
00070e 3011
00070f 593f
000710 4e10
000711 6e4e
000712 3f2b
000713 336e                      .db 49,69,86,108,63,32,40,18,37,102,88,88,33,41,91,89,49,107,30,109,88,65,60,50,81,32,69,105,16,62,21,88,86,119,29,27,81,77,84,95,31,112,73,26,87,52,78,33,25,52,114,61,17,48,63,89,16,78,78,110,43,63,110,51
000714 585c
000715 1332
000716 5c40
000717 4819
000718 6e0d
000719 6923
00071a 3d6d
00071b 1747
00071c 6f17
00071d 1c43
00071e 345d
00071f 345f
000720 3b14
000721 4761
000722 4627
000723 1e4c
000724 1911
000725 4e48
000726 2a27
000727 5e37
000728 646f
000729 392d
00072a 5a13
00072b 5f62
00072c 5f33
00072d 1b3b
00072e 270e
00072f 2620
000730 7227
000731 6611
000732 531d
000733 4440                      .db 92,88,50,19,64,92,25,72,13,110,35,105,109,61,71,23,23,111,67,28,93,52,95,52,20,59,97,71,39,70,76,30,17,25,72,78,39,42,55,94,111,100,45,57,19,90,98,95,51,95,59,27,14,39,32,38,39,114,17,102,29,83,64,68
000734 4a61
000735 3233
000736 2d64
000737 7412
000738 4a12
000739 0b6c
00073a 4d6a
00073b 7730
00073c 272c
00073d 4425
00073e 5047
00073f 634d
000740 2c59
000741 424d
000742 385e
000743 110b
000744 5676
000745 556b
000746 460e
000747 3312
000748 2858
000749 326a
00074a 2335
00074b 432e
00074c 372f
00074d 1173
00074e 1775
00074f 1b68
000750 1f0d
000751 4b13
000752 1b0a
000753 2024                      .db 97,74,51,50,100,45,18,116,18,74,108,11,106,77,48,119,44,39,37,68,71,80,77,99,89,44,77,66,94,56,11,17,118,86,107,85,14,70,18,51,88,40,106,50,53,35,46,67,47,55,115,17,117,23,104,27,13,31,19,75,10,27,36,32
000754 5f1a
000755 7a72
000756 7b5c
000757 2e32
000758 3d5b
000759 3f32
00075a 3b15
00075b 1f68
00075c 6413
00075d 1e47
00075e 7a1e
00075f 210f
000760 4a73
000761 136a
000762 4159
000763 2158
000764 6a43
000765 6b58
000766 340f
000767 6b3f
000768 5123
000769 5036
00076a 1d78
00076b 435d
00076c 1729
00076d 2f74
00076e 3b5a
00076f 0f53
000770 351a
000771 0f19
000772 1425
000773 0b74                      .db 26,95,114,122,92,123,50,46,91,61,50,63,21,59,104,31,19,100,71,30,30,122,15,33,115,74,106,19,89,65,88,33,67,106,88,107,15,52,63,107,35,81,54,80,120,29,93,67,41,23,116,47,90,59,83,15,26,53,25,15,37,20,116,11
000774 5c37
000775 7311
000776 4345
000777 1719
000778 7b5f
000779 124c
00077a 1135
00077b 3d68
00077c 4639
00077d 7e79
00077e 0e23
00077f 7e49
000780 7a5d
000781 2b5c
000782 1437
000783 1778
000784 5c27
000785 793c
000786 6337
000787 6e1e
000788 0c51
000789 2c36
00078a 4239
00078b 285e
00078c 742e
00078d 1a6b
00078e 286d
00078f 3f67
000790 2f68
000791 3176
000792 3f37
000793 6215                      .db 55,92,17,115,69,67,25,23,95,123,76,18,53,17,104,61,57,70,121,126,35,14,73,126,93,122,92,43,55,20,120,23,39,92,60,121,55,99,30,110,81,12,54,44,57,66,94,40,46,116,107,26,109,40,103,63,104,47,118,49,55,63,21,98
000794 5c5a
000795 483a
000796 7525
000797 4a35
000798 1539
000799 1d7b
00079a 7430
00079b 2d61
00079c 4675
00079d 341a
00079e 3f52
00079f 7418
0007a0 306e
0007a1 1064
0007a2 2478
0007a3 6213
0007a4 534b
0007a5 562b
0007a6 4526
0007a7 2d48
0007a8 4c61
0007a9 5770
0007aa 304c
0007ab 2b4a
0007ac 4e2e
0007ad 2843
0007ae 0d66
0007af 5a4c
0007b0 4d71
0007b1 3761
0007b2 0a4e
0007b3 5375                      .db 90,92,58,72,37,117,53,74,57,21,123,29,48,116,97,45,117,70,26,52,82,63,24,116,110,48,100,16,120,36,19,98,75,83,43,86,38,69,72,45,97,76,112,87,76,48,74,43,46,78,67,40,102,13,76,90,113,77,97,55,78,10,117,83
0007b4 3359
0007b5 664d
0007b6 4c30
0007b7 295f
0007b8 4e51
0007b9 2758
0007ba 651f
0007bb 0d76
0007bc 1931
0007bd 7b71
0007be 1156
0007bf 7e6d
0007c0 195c
0007c1 2656
0007c2 0c0a
0007c3 7c2d
0007c4 150c
0007c5 5a2c
0007c6 321c
0007c7 0f71
0007c8 2b42
0007c9 3820
0007ca 762e
0007cb 437d
0007cc 3562
0007cd 2b40
0007ce 5970
0007cf 1e33
0007d0 1440
0007d1 4338
0007d2 335b
0007d3 5262                      .db 89,51,77,102,48,76,95,41,81,78,88,39,31,101,118,13,49,25,113,123,86,17,109,126,92,25,86,38,10,12,45,124,12,21,44,90,28,50,113,15,66,43,32,56,46,118,125,67,98,53,64,43,112,89,51,30,64,20,56,67,91,51,98,82
0007d4 7955
0007d5 1c17
0007d6 1665
0007d7 732e
0007d8 2354
0007d9 4379
0007da 6c60
0007db 6e3d
0007dc 3a3c
0007dd 677e
0007de 0b0f
0007df 5876
0007e0 1923
0007e1 545f
0007e2 7e38
0007e3 1621
0007e4 4821
0007e5 2774
0007e6 7733
0007e7 183e
0007e8 1a2a
0007e9 1d39
0007ea 347a
0007eb 5926
0007ec 0f3c
0007ed 305f
0007ee 336a
0007ef 575f
0007f0 125f
0007f1 783c
0007f2 1a75
0007f3 4824                      .db 85,121,23,28,101,22,46,115,84,35,121,67,96,108,61,110,60,58,126,103,15,11,118,88,35,25,95,84,56,126,33,22,33,72,116,39,51,119,62,24,42,26,57,29,122,52,38,89,60,15,95,48,106,51,95,87,95,18,60,120,117,26,36,72
0007f4 4b72
0007f5 7e0a
0007f6 3350
0007f7 0e1a
0007f8 3060
0007f9 3474
0007fa 4659
0007fb 2e5e
0007fc 7c39
0007fd 401f
0007fe 192b
0007ff 4979
000800 2934
000801 4153
000802 125c
000803 7e26
000804 5634
000805 5f6c
000806 2531
000807 0f29
000808 7664
000809 731d
00080a 530e
00080b 114c
00080c 4975
00080d 1f34
00080e 5b58
00080f 1e48
000810 5846
000811 535c
000812 565b
000813 622d                      .db 114,75,10,126,80,51,26,14,96,48,116,52,89,70,94,46,57,124,31,64,43,25,121,73,52,41,83,65,92,18,38,126,52,86,108,95,49,37,41,15,100,118,29,115,14,83,76,17,117,73,52,31,88,91,72,30,70,88,92,83,91,86,45,98
000814 511d
000815 2a1d
000816 3655
000817 467c
000818 7060
000819 1c7b
00081a 0d17
00081b 2432
00081c 7a26
00081d 221a
00081e 6e7d
00081f 3952
000820 723b
000821 6742
000822 271c
000823 1b7d
000824 6a3e
000825 0f0b
000826 5971
000827 6f3e
000828 3b5c
000829 457a
00082a 5339
00082b 500b
00082c 4a4c
00082d 5a7e
00082e 371b
00082f 443a
000830 6251
000831 5b2f
000832 0f1d
000833 5b16                      .db 29,81,29,42,85,54,124,70,96,112,123,28,23,13,50,36,38,122,26,34,125,110,82,57,59,114,66,103,28,39,125,27,62,106,11,15,113,89,62,111,92,59,122,69,57,83,11,80,76,74,126,90,27,55,58,68,81,98,47,91,29,15,22,91
000834 522f
000835 633b
000836 6158
000837 3762
000838 177d
000839 5527
00083a 1748
00083b 0c43
00083c 1650
00083d 1370
00083e 456f
00083f 3e41
000840 1b0e
000841 1010
000842 7378
000843 3c76
000844 574e
000845 3647
000846 1723
000847 6e68
000848 5e4f
000849 393c
00084a 3765
00084b 4c69
00084c 4325
00084d 782a
00084e 2846
00084f 3b2a
000850 7414
000851 4d4e
000852 363f
000853 384a                      .db 47,82,59,99,88,97,98,55,125,23,39,85,72,23,67,12,80,22,112,19,111,69,65,62,14,27,16,16,120,115,118,60,78,87,71,54,35,23,104,110,79,94,60,57,101,55,105,76,37,67,42,120,70,40,42,59,20,116,78,77,63,54,74,56
000854 5a41
000855 3922
000856 7365
000857 5866
000858 1f15
000859 2c73
00085a 2948
00085b 1c5a
00085c 3439
00085d 6d57
00085e 371b
00085f 7771
000860 5158
000861 7d2d
000862 4d35
000863 1c74
000864 6c0b
000865 1777
000866 7928
000867 1b54
000868 510b
000869 103d
00086a 5b0b
00086b 4271
00086c 5021
00086d 296b
00086e 5b23
00086f 5a12
000870 7e5b
000871 5234
000872 5052
000873 5c3e                      .db 65,90,34,57,101,115,102,88,21,31,115,44,72,41,90,28,57,52,87,109,27,55,113,119,88,81,45,125,53,77,116,28,11,108,119,23,40,121,84,27,11,81,61,16,11,91,113,66,33,80,107,41,35,91,18,90,91,126,52,82,82,80,62,92
000874 3433
000875 3037
000876 2d3b
000877 6445
000878 4c23
000879 1c2b
00087a 4f71
00087b 6424
00087c 2960
00087d 474f
00087e 7932
00087f 602e
000880 3f3d
000881 5a59
000882 6d22
000883 3a6e
000884 2b5b
000885 341f
000886 1e71
000887 542d
000888 1521
000889 6060
00088a 1848
00088b 5a0b
00088c 1f73
00088d 175c
00088e 2b77
00088f 2015
000890 7344
000891 4a72
000892 457b
000893 2e64                      .db 51,52,55,48,59,45,69,100,35,76,43,28,113,79,36,100,96,41,79,71,50,121,46,96,61,63,89,90,34,109,110,58,91,43,31,52,113,30,45,84,33,21,96,96,72,24,11,90,115,31,92,23,119,43,21,32,68,115,114,74,123,69,100,46
000894 566f
000895 2e0a
000896 437c
000897 544a
000898 3c7e
000899 7914
00089a 2630
00089b 5863
00089c 7e27
00089d 3e64
00089e 6913
00089f 5037
0008a0 6538
0008a1 4849
0008a2 7346
0008a3 743f
0008a4 2336
0008a5 6257
0008a6 5c1f
0008a7 7954
0008a8 6811
0008a9 3c7d
0008aa 3f3c
0008ab 6738
0008ac 796f
0008ad 254a
0008ae 6667
0008af 565c
0008b0 4c1b
0008b1 4123
0008b2 181b
0008b3 3079                      .db 111,86,10,46,124,67,74,84,126,60,20,121,48,38,99,88,39,126,100,62,19,105,55,80,56,101,73,72,70,115,63,116,54,35,87,98,31,92,84,121,17,104,125,60,60,63,56,103,111,121,74,37,103,102,92,86,27,76,35,65,27,24,121,48
0008b4 6e18
0008b5 150b
0008b6 6831
0008b7 1640
0008b8 2756
0008b9 6338
0008ba 310e
0008bb 6866
0008bc 251f
0008bd 0c63
0008be 3d28
0008bf 7163
0008c0 2d5a
0008c1 6d14
0008c2 1c57
0008c3 665e
0008c4 1626
0008c5 1b50
0008c6 0c2c
0008c7 5463
0008c8 4711
0008c9 5b67
0008ca 2448
0008cb 4776
0008cc 1656
0008cd 0d52
0008ce 4d3f
0008cf 3a53
0008d0 2c31
0008d1 662f
0008d2 0f1c
0008d3 1b1b                      .db 24,110,11,21,49,104,64,22,86,39,56,99,14,49,102,104,31,37,99,12,40,61,99,113,90,45,20,109,87,28,94,102,38,22,80,27,44,12,99,84,17,71,103,91,72,36,118,71,86,22,82,13,63,77,83,58,49,44,47,102,28,15,27,27
0008d4 3f0b
0008d5 431d
0008d6 6571
0008d7 2c1c
0008d8 7d4d
0008d9 602d
0008da 0f12
0008db 7331
0008dc 3061
0008dd 4e3d
0008de 2729
0008df 5e2a
0008e0 1449
0008e1 555a
0008e2 3b73
0008e3 2b39
0008e4 1c71
0008e5 6831
0008e6 693c
0008e7 6372
0008e8 4c2a
0008e9 0d23
0008ea 6922
0008eb 2953
0008ec 6460
0008ed 3359
0008ee 6210
0008ef 6047
0008f0 356f
0008f1 4f14
0008f2 746e
0008f3 3632                      .db 11,63,29,67,113,101,28,44,77,125,45,96,18,15,49,115,97,48,61,78,41,39,42,94,73,20,90,85,115,59,57,43,113,28,49,104,60,105,114,99,42,76,35,13,34,105,83,41,96,100,89,51,16,98,71,96,111,53,20,79,110,116,50,54
0008f4 7351
0008f5 372f
0008f6 1531
0008f7 736e
0008f8 6769
0008f9 5615
0008fa 4d4e
0008fb 6f5b
0008fc 4a11
0008fd 2b14
0008fe 0b52
0008ff 5d50
000900 6d1f
000901 2c71
000902 260d
000903 1972
000904 0a6a
000905 5047
000906 4a44
000907 722b
000908 7321
000909 566e
00090a 7e19
00090b 4f3b
00090c 5d2d
00090d 137b
00090e 1e2b
00090f 6318
000910 747a
000911 512e
000912 2a43
000913 2b73                      .db 81,115,47,55,49,21,110,115,105,103,21,86,78,77,91,111,17,74,20,43,82,11,80,93,31,109,113,44,13,38,114,25,106,10,71,80,68,74,43,114,33,115,110,86,25,126,59,79,45,93,123,19,43,30,24,99,122,116,46,81,67,42,115,43
000914 697c
000915 430f
000916 336b
000917 3538
000918 3c65
000919 4621
00091a 4e43
00091b 335e
00091c 215d
00091d 435a
00091e 7161
00091f 377c
000920 2617
000921 6f0f
000922 290b
000923 5e2a
000924 587e
000925 4c7b
000926 4e69
000927 2c72
000928 135f
000929 7e36
00092a 4066
00092b 1944
00092c 4717
00092d 6c39
00092e 1532
00092f 5727
000930 153c
000931 0d3e
000932 1e7e
000933 723c                      .db 124,105,15,67,107,51,56,53,101,60,33,70,67,78,94,51,93,33,90,67,97,113,124,55,23,38,15,111,11,41,42,94,126,88,123,76,105,78,114,44,95,19,54,126,102,64,68,25,23,71,57,108,50,21,39,87,60,21,62,13,126,30,60,114
000934 3951
000935 377a
000936 4e77
000937 7350
000938 3b62
000939 3257
00093a 507a
00093b 157a
00093c 4f7b
00093d 2f38
00093e 5758
00093f 793f
000940 296b
000941 1530
000942 6866
000943 2264
000944 0a3e
000945 181b
000946 3c69
000947 6c2d
000948 2732
000949 0e76
00094a 2911
00094b 1a72
00094c 6a6b
00094d 353a
00094e 5b44
00094f 6858
000950 0d66
000951 7663
000952 6f74
000953 436f                      .db 81,57,122,55,119,78,80,115,98,59,87,50,122,80,122,21,123,79,56,47,88,87,63,121,107,41,48,21,102,104,100,34,62,10,27,24,105,60,45,108,50,39,118,14,17,41,114,26,107,106,58,53,68,91,88,104,102,13,99,118,116,111,111,67
000954 7314
000955 2f41
000956 3a56
000957 766c
000958 5b22
000959 2e0e
00095a 0b14
00095b 296b
00095c 327e
00095d 2d7e
00095e 6859
00095f 2737
000960 766d
000961 7a69
000962 3f0c
000963 4541
000964 5653
000965 502a
000966 2256
000967 0c75
000968 4227
000969 0d29
00096a 2a54
00096b 2b21
00096c 4729
00096d 1635
00096e 1a69
00096f 4765
000970 6f17
000971 306d
000972 7e74
000973 6942                      .db 20,115,65,47,86,58,108,118,34,91,14,46,20,11,107,41,126,50,126,45,89,104,55,39,109,118,105,122,12,63,65,69,83,86,42,80,86,34,117,12,39,66,41,13,84,42,33,43,41,71,53,22,105,26,101,71,23,111,109,48,116,126,66,105
000974 665a
000975 1563
000976 7170
000977 6846
000978 382b
000979 3753
00097a 1119
00097b 2b3d
00097c 1053
00097d 495e
00097e 306a
00097f 4a0f
000980 6a75
000981 4a53
000982 175b
000983 7015
000984 346a
000985 0c28
000986 5f2f
000987 4729
000988 544e
000989 7017
00098a 6e6f
00098b 3c11
00098c 192a
00098d 704e
00098e 663e
00098f 1050
000990 2322
000991 4b0c
000992 375d
000993 6718                      .db 90,102,99,21,112,113,70,104,43,56,83,55,25,17,61,43,83,16,94,73,106,48,15,74,117,106,83,74,91,23,21,112,106,52,40,12,47,95,41,71,78,84,23,112,111,110,17,60,42,25,78,112,62,102,80,16,34,35,12,75,93,55,24,103
000994 5332
000995 5068
000996 7224
000997 6818
000998 514a
000999 3836
00099a 6f28
00099b 0a26
00099c 3d35
00099d 4322
00099e 4d0e
00099f 0d19
0009a0 7c3e
0009a1 2b71
0009a2 7026
0009a3 5655
0009a4 5951
0009a5 2367
0009a6 7c49
0009a7 1841
0009a8 6820
0009a9 6c2f
0009aa 2559
0009ab 497b
0009ac 3930
0009ad 0f7c
0009ae 4430
0009af 6456
0009b0 4b5c
0009b1 3a27
0009b2 5028
0009b3 5e4b                      .db 50,83,104,80,36,114,24,104,74,81,54,56,40,111,38,10,53,61,34,67,14,77,25,13,62,124,113,43,38,112,85,86,81,89,103,35,73,124,65,24,32,104,47,108,89,37,123,73,48,57,124,15,48,68,86,100,92,75,39,58,40,80,75,94
0009b4 5668
0009b5 395b
0009b6 5153
0009b7 2513
0009b8 1742
0009b9 5e67
0009ba 6d61
0009bb 526a
0009bc 7b49
0009bd 6a38
0009be 6c6d
0009bf 4276
0009c0 2d73
0009c1 5460
0009c2 531e
0009c3 4e28
0009c4 6f4c
0009c5 3240
0009c6 4c3e
0009c7 6566
0009c8 110d
0009c9 1b78
0009ca 391d
0009cb 4a12
0009cc 7161
0009cd 0c46
0009ce 6b36
0009cf 4723
0009d0 726c
0009d1 606e
0009d2 465b
0009d3 3c1a                      .db 104,86,91,57,83,81,19,37,66,23,103,94,97,109,106,82,73,123,56,106,109,108,118,66,115,45,96,84,30,83,40,78,76,111,64,50,62,76,102,101,13,17,120,27,29,57,18,74,97,113,70,12,54,107,35,71,108,114,110,96,91,70,26,60
0009d4 0f5f
0009d5 430f
0009d6 2b0e
0009d7 5f79
0009d8 7e7e
0009d9 5f1f
0009da 2075
0009db 1f4a
0009dc 197a
0009dd 6d60
0009de 7071
0009df 6460
0009e0 2463
0009e1 4a11
0009e2 350a
0009e3 487e
0009e4 4c64
0009e5 2556
0009e6 4530
0009e7 690d
0009e8 3e43
0009e9 3e4d
0009ea 0a4e
0009eb 5f13
0009ec 4a64
0009ed 6640
0009ee 1826
0009ef 303c
0009f0 6661
0009f1 5552
0009f2 0f79
0009f3 524b                      .db 95,15,15,67,14,43,121,95,126,126,31,95,117,32,74,31,122,25,96,109,113,112,96,100,99,36,17,74,10,53,126,72,100,76,86,37,48,69,13,105,67,62,77,62,78,10,19,95,100,74,64,102,38,24,60,48,97,102,82,85,121,15,75,82
0009f4 3029
0009f5 1e5c
0009f6 6144
0009f7 2e60
0009f8 182e
0009f9 6b52
0009fa 5652
0009fb 230b
0009fc 325d
0009fd 5161
0009fe 5949
0009ff 5b31
000a00 377d
000a01 5b1c
000a02 1e17
000a03 303c
000a04 1a41
000a05 3078
000a06 3a2a
000a07 7547
000a08 1b72
000a09 644e
000a0a 7320
000a0b 690d
000a0c 3949
000a0d 2359
000a0e 7818
000a0f 6554
000a10 5b49
000a11 482f
000a12 3963
000a13 163a                      .db 41,48,92,30,68,97,96,46,46,24,82,107,82,86,11,35,93,50,97,81,73,89,49,91,125,55,28,91,23,30,60,48,65,26,120,48,42,58,71,117,114,27,78,100,32,115,13,105,73,57,89,35,24,120,84,101,73,91,47,72,99,57,58,22
000a14 3e65
000a15 4d6b
000a16 3f48
000a17 7834
000a18 1f21
000a19 6f26
000a1a 0f25
000a1b 2148
000a1c 1f7e
000a1d 512c
000a1e 0d7c
000a1f 5538
000a20 5e68
000a21 2b7d
000a22 573a
000a23 154a
000a24 345d
000a25 5b65
000a26 476e
000a27 2957
000a28 6d6c
000a29 5053
000a2a 1e36
000a2b 122e
000a2c 6c24
000a2d 2748
000a2e 7b57
000a2f 7a55
000a30 4b69
000a31 3d70
000a32 6963
000a33 2837                      .db 101,62,107,77,72,63,52,120,33,31,38,111,37,15,72,33,126,31,44,81,124,13,56,85,104,94,125,43,58,87,74,21,93,52,101,91,110,71,87,41,108,109,83,80,54,30,46,18,36,108,72,39,87,123,85,122,105,75,112,61,99,105,55,40
000a34 7715
000a35 546b
000a36 253c
000a37 210c
000a38 0e65
000a39 460f
000a3a 453a
000a3b 1e12
000a3c 1267
000a3d 5871
000a3e 6d23
000a3f 4b10
000a40 0a5a
000a41 206f
000a42 793b
000a43 1f28
000a44 343b
000a45 0c17
000a46 7245
000a47 686c
000a48 6216
000a49 1065
000a4a 431f
000a4b 7d1e
000a4c 287c
000a4d 0a1f
000a4e 2610
000a4f 1f69
000a50 4435
000a51 302a
000a52 4b34
000a53 5d1b                      .db 21,119,107,84,60,37,12,33,101,14,15,70,58,69,18,30,103,18,113,88,35,109,16,75,90,10,111,32,59,121,40,31,59,52,23,12,69,114,108,104,22,98,101,16,31,67,30,125,124,40,31,10,16,38,105,31,53,68,42,48,52,75,27,93
000a54 212b
000a55 3723
000a56 6d68
000a57 777a
000a58 3927
000a59 644e
000a5a 5c24
000a5b 1058
000a5c 5b2a
000a5d 1515
000a5e 5561
000a5f 184c
000a60 4d38
000a61 105b
000a62 5412
000a63 7946
000a64 2a4c
000a65 3744
000a66 2c5f
000a67 6531
000a68 5637
000a69 5b49
000a6a 6830
000a6b 1051
000a6c 3f3b
000a6d 6942
000a6e 2863
000a6f 7749
000a70 6d31
000a71 7151
000a72 2f34
000a73 6b2b                      .db 43,33,35,55,104,109,122,119,39,57,78,100,36,92,88,16,42,91,21,21,97,85,76,24,56,77,91,16,18,84,70,121,76,42,68,55,95,44,49,101,55,86,73,91,48,104,81,16,59,63,66,105,99,40,73,119,49,109,81,113,52,47,43,107
000a74 166d
000a75 7979
000a76 3e65
000a77 5379
000a78 513b
000a79 6062
000a7a 242c
000a7b 294e
000a7c 1374
000a7d 4a4f
000a7e 2c4b
000a7f 772d
000a80 3d24
000a81 4750
000a82 3615
000a83 5c2a
000a84 795d
000a85 402c
000a86 412b
000a87 1b52
000a88 5034
000a89 4a54
000a8a 2f7a
000a8b 6579
000a8c 1055
000a8d 394a
000a8e 591e
000a8f 6e2f
000a90 1e39
000a91 5f6f
000a92 4772
000a93 0f0b                      .db 109,22,121,121,101,62,121,83,59,81,98,96,44,36,78,41,116,19,79,74,75,44,45,119,36,61,80,71,21,54,42,92,93,121,44,64,43,65,82,27,52,80,84,74,122,47,121,101,85,16,74,57,30,89,47,110,57,30,111,95,114,71,11,15
000a94 661c
000a95 4d21
000a96 7359
000a97 472b
000a98 2a41
000a99 3a73
000a9a 2221
000a9b 2c1b
000a9c 216d
000a9d 6a52
000a9e 1b42
000a9f 1120
000aa0 445c
000aa1 2d7c
000aa2 4810
000aa3 4672
000aa4 1318
000aa5 163c
000aa6 2059
000aa7 0a4b
000aa8 1335
000aa9 592a
000aaa 4c39
000aab 5b49
000aac 4035
000aad 633e
000aae 7951
000aaf 164b
000ab0 1633
000ab1 0e69
000ab2 382c
000ab3 0c48                      .db 28,102,33,77,89,115,43,71,65,42,115,58,33,34,27,44,109,33,82,106,66,27,32,17,92,68,124,45,16,72,114,70,24,19,60,22,89,32,75,10,53,19,42,89,57,76,73,91,53,64,62,99,81,121,75,22,51,22,105,14,44,56,72,12
000ab4 2137
000ab5 1355
000ab6 2719
000ab7 1b74
000ab8 4a37
000ab9 0c59
000aba 7069
000abb 2044
000abc 2554
000abd 0d30
000abe 3e5a
000abf 5760
000ac0 0e21
000ac1 6579
000ac2 120d
000ac3 2146
000ac4 4710
000ac5 706b
000ac6 6b11
000ac7 6056
000ac8 6738
000ac9 496e
000aca 3523
000acb 3333
000acc 5b25
000acd 2e23
000ace 1636
000acf 6329
000ad0 510e
000ad1 6023
000ad2 7570
000ad3 2218                      .db 55,33,85,19,25,39,116,27,55,74,89,12,105,112,68,32,84,37,48,13,90,62,96,87,33,14,121,101,13,18,70,33,16,71,107,112,17,107,86,96,56,103,110,73,35,53,51,51,37,91,35,46,54,22,41,99,14,81,35,96,112,117,24,34
000ad4 2842
000ad5 3c34
000ad6 7a25
000ad7 654f
000ad8 1c51
000ad9 643f
000ada 2861
000adb 7844
000adc 3e6f
000add 3327
000ade 0f42
000adf 2e12
000ae0 6476
000ae1 202f
000ae2 5b0d
000ae3 6f56
000ae4 5a4a
000ae5 365f
000ae6 4845
000ae7 5f4e
000ae8 4123
000ae9 7a27
000aea 0e4e
000aeb 151b
000aec 2d1e
000aed 5964
000aee 2b6d
000aef 5623
000af0 6f27
000af1 7e1b
000af2 6014
000af3 724e                      .db 66,40,52,60,37,122,79,101,81,28,63,100,97,40,68,120,111,62,39,51,66,15,18,46,118,100,47,32,13,91,86,111,74,90,95,54,69,72,78,95,35,65,39,122,78,14,27,21,30,45,100,89,109,43,35,86,39,111,27,126,20,96,78,114
000af4 4264
000af5 571b
000af6 1176
000af7 6a30
000af8 2c26
000af9 447d
000afa 1e1c
000afb 300f
000afc 7d4b
000afd 7032
000afe 2367
000aff 225c
000b00 1a46
000b01 152b
000b02 304b
000b03 6854
000b04 1427
000b05 3260
000b06 1070
000b07 7177
000b08 6f19
000b09 7c6e
000b0a 5345
000b0b 7e53
000b0c 7966
000b0d 6547
000b0e 1f70
000b0f 1032
000b10 144f
000b11 3d3c
000b12 4026
000b13 681c                      .db 100,66,27,87,118,17,48,106,38,44,125,68,28,30,15,48,75,125,50,112,103,35,92,34,70,26,43,21,75,48,84,104,39,20,96,50,112,16,119,113,25,111,110,124,69,83,83,126,102,121,71,101,112,31,50,16,79,20,60,61,38,64,28,104
000b14 1957
000b15 6548
000b16 5f15
000b17 7b60
000b18 2b47
000b19 6b54
000b1a 330c
000b1b 1f2a
000b1c 7924
000b1d 1270
000b1e 334c
000b1f 1d6c
000b20 7c33
000b21 6b12
000b22 104c
000b23 0e1d
000b24 2360
000b25 6d4a
000b26 3f48
000b27 4449
000b28 5a59
000b29 6450
000b2a 4f3d
000b2b 791c
000b2c 6770
000b2d 2822
000b2e 3a50
000b2f 121b
000b30 1323
000b31 6670
000b32 2d4a
000b33 6d2c                      .db 87,25,72,101,21,95,96,123,71,43,84,107,12,51,42,31,36,121,112,18,76,51,108,29,51,124,18,107,76,16,29,14,96,35,74,109,72,63,73,68,89,90,80,100,61,79,28,121,112,103,34,40,80,58,27,18,35,19,112,102,74,45,44,109
000b34 4b41
000b35 310c
000b36 472c
000b37 5f0d
000b38 457a
000b39 220f
000b3a 2c45
000b3b 6b48
000b3c 4f70
000b3d 153b
000b3e 6876
000b3f 0c51
000b40 2523
000b41 4331
000b42 5173
000b43 5d2c
000b44 2e14
000b45 3216
000b46 4a64
000b47 4317
000b48 7c74
000b49 6421
000b4a 134c
000b4b 6d2f
000b4c 3045
000b4d 1444
000b4e 1f3f
000b4f 7158
000b50 3913
000b51 1151
000b52 320b
000b53 1b18                      .db 65,75,12,49,44,71,13,95,122,69,15,34,69,44,72,107,112,79,59,21,118,104,81,12,35,37,49,67,115,81,44,93,20,46,22,50,100,74,23,67,116,124,33,100,76,19,47,109,69,48,68,20,63,31,88,113,19,57,81,17,11,50,24,27
000b54 1a56
000b55 6075
000b56 1560
000b57 587a
000b58 675d
000b59 2d54
000b5a 6159
000b5b 3b77
000b5c 4a15
000b5d 5577
000b5e 6f50
000b5f 1169
000b60 2a13
000b61 165d
000b62 516f
000b63 1043
000b64 2f76
000b65 2e49
000b66 3a7a
000b67 436d
000b68 3b78
000b69 0e7a
000b6a 6123
000b6b 2a40
000b6c 3f53
000b6d 3667
000b6e 334b
000b6f 7620
000b70 7d5d
000b71 4110
000b72 1f7b
000b73 3741                      .db 86,26,117,96,96,21,122,88,93,103,84,45,89,97,119,59,21,74,119,85,80,111,105,17,19,42,93,22,111,81,67,16,118,47,73,46,122,58,109,67,120,59,122,14,35,97,64,42,83,63,103,54,75,51,32,118,93,125,16,65,123,31,65,55
                                 
                                 
                                 /*	Debug
                                 	.db 10,11,12,13,14
                                 	.db 15,16,17,18,19
                                 	.db 20,21,22,23,24
                                 	.db 25,26,27,28,29
                                 	.db 30,31,32,33,34
                                 */
                                 ;.include	"display.inc"
                                 
                                 .equ LCD_CTRL_PORT = PORTA
                                 .equ LCD_CTRL_DDR = DDRA
                                 .equ LCD_RS = 7
                                 .equ LCD_E = 6
                                 .equ LCD_RW = 5
                                 .equ LCD_BE = 4	
                                 .equ NUMBER_COL=65
                                 .equ NUMBER_COL_dec_2=63		; fix adiw out of range issue
                                 
                                 .equ LCD_DATA_PORT = PORTF	; use portF as input in LCD
                                 .equ LCD_DATA_DDR = DDRF
                                 .equ LCD_DATA_PIN = PINF
                                 
                                 .equ PORTLDIR =0xF0			; use PortD for input/output from keypad: PF7-4, output, PF3-0, input
                                 .equ INITCOLMASK = 0xEF		; scan from the leftmost column, the value to mask output
                                 .equ INITROWMASK = 0x01		; scan from the bottom row
                                 .equ ROWMASK  =0x0F			; low four bits are output from the keypad. This value mask the high 4 bits.
                                 
                                 .def row = r16			; current row number
                                 .def col = r17			; current column number
                                 .def rmask = r18		; mask for current row
                                 .def cmask = r19		; mask for current column
                                 .def temp1 = r20		; temporary register 1
                                 .def temp2 = r21		; temporary register 2
                                 .def data  = r22		
                                 
                                 .def X_target = r5		; X cursor of target
                                 .def Y_target = r6		; Y cursor of target
                                 .def height = r7		; current position height
                                 .def X_cursor = r8		; current X cursor of drone 
                                 .def Y_cursor = r9		; current Y cursor of drone 
                                 .def Z_cursor = r10		; current Z cursor of drone 
                                 .def reader	= r11		; read from progarm memory 
                                 .def counter = r12		; number of positions drone have searched 
                                 .def direction = r13	; indicate the direction 
                                 
                                 .macro STORE
                                 	.if @0 > 63
                                 		sts @0, @1
                                 	.else
                                 		out @0, @1
                                 	.endif
                                 .endmacro
                                 
                                 .macro LOAD
                                 	.if @1 > 63
                                 		lds @0, @1
                                 	.else
                                 		in @0, @1
                                 	.endif
                                 .endmacro
                                 
                                  .macro DO_LCD_COMMAND
                                 	ldi r16, @0
                                 	rcall lcd_command
                                 	rcall lcd_wait
                                 .endmacro
                                 
                                 .macro DO_LCD_DATA
                                 	mov r16, @0
                                 	rcall lcd_data
                                 	rcall lcd_wait
                                 .endmacro
                                 
                                 .macro LDC_SET
                                 	sbi LCD_CTRL_PORT, @0
                                 .endmacro
                                 
                                 .macro LDC_CLR
                                 	cbi LCD_CTRL_PORT, @0
                                 .endmacro
                                 
                                 .macro	SET_MOTOR_SPEED
                                 	; set motor speed by @0
                                 	clr	temp1
                                 	sts	OCR3BH,Temp1
                                 	ldi	temp1,@0
                                 	sts	OCR3BL,temp1
                                 	ldi	temp1,(1<<cs30)
                                 	sts	TCCR3B,temp1
                                 	ldi	temp1,(1<<WGM30)|(1<<COM3B1)
                                 	sts	TCCR3A,temp1
                                 .endmacro
                                 
                                 .macro	FLASH
                                 	; flash LED 1 time
                                 	ser	temp1
                                 	out	PORTC,temp1
                                 	rcall	sleep_300ms
                                 	rcall	sleep_300ms
                                 	clr	temp1
                                 	out	PORTC,temp1
                                 	rcall	sleep_300ms
                                 	rcall	sleep_300ms
                                 .endmacro
                                 
                                 .macro	DECIMAL_SHIFT		
                                 	;@0*10+@1	with	decimal	shift
                                 	subi	@1,'0'
                                 	ldi		temp2,10
                                 	mul		@0,temp2
                                 	mov		@0,r0
                                 	add		@0,@1
                                 	subi	@1,-'0'
                                 .endmacro
                                 
                                 .macro INIT_TIME1
                                 ; To generate 1s timer 1
                                 ; Timer1 is 16 bits timer, 2^16 = 65536; 65536 * 1/16M s * Clock_Selection = 1s
                                 ; Clock_Selection = 256
                                 ; Therefore: TCCR1B = 0b00000100  
                                           
                                 	ldi TEMP1, 0b00000000            
                                 	sts TCCR1A, TEMP1         ; Normal mode            
                                 	ldi TEMP1, 0b00000100            
                                 	sts TCCR1B, TEMP1         ; Clock selection = 256            
                                 	ldi TEMP1, (1<<TOIE1)            
                                 	sts TIMSK1,TEMP1          ; Overflow enabled
                                 .endmacro
                                 
                                 .macro STOP_TIME1          
                                 	ldi TEMP1,0b00000000            
                                 	sts TCCR1A,TEMP1         ; Normal mode            
                                 	ldi TEMP1,0b00000000            
                                 	sts TCCR1B,TEMP1         ; Clock selection = 256            
                                 	ldi TEMP1,(1<<TOIE1)            
                                 	sts TIMSK1,TEMP1         ; Overflow enabled
                                 .endmacro
                                 
                                 .cseg
                                 .org 0x0		;start	address	from	0x0
000000 940c 002a                 	jmp RESET
                                 
                                 .org OVF1addr				;Set	triggle	Timer1
000028 940c 0113                 	jmp Timer1OverFlow
                                 
                                 RESET:
00002a ef0f                      	ldi r16, low(RAMEND)
00002b bf0d                      	out SPL, r16
00002c e201                      	ldi r16, high(RAMEND)
00002d bf0e                      	out SPH, r16
                                 
00002e ef0f                      	ser r16
00002f bb00                      	STORE LCD_DATA_DDR, r16
000030 b901                      	STORE LCD_CTRL_DDR, r16
000031 2700                      	clr r16
000032 bb01                      	STORE LCD_DATA_PORT, r16
000033 b902                      	STORE LCD_CTRL_PORT, r16
                                 
000034 e308
000035 d123
000036 d132                      	DO_LCD_COMMAND 0b00111000 ; 2x5x7
000037 d17f                      	rcall sleep_5ms
000038 e308
000039 d11f
00003a d12e                      	DO_LCD_COMMAND 0b00111000 ; 2x5x7
00003b d172                      	rcall sleep_1ms
00003c e308
00003d d11b
00003e d12a                      	DO_LCD_COMMAND 0b00111000 ; 2x5x7
00003f e308
000040 d118
000041 d127                      	DO_LCD_COMMAND 0b00111000 ; 2x5x7
000042 e008
000043 d115
000044 d124                      	DO_LCD_COMMAND 0b00001000 ; display off
000045 e001
000046 d112
000047 d121                      	DO_LCD_COMMAND 0b00000001 ; clear display
000048 e006
000049 d10f
00004a d11e                      	DO_LCD_COMMAND 0b00000110 ; increment, no display shift
00004b e00e
00004c d10c
00004d d11b                      	DO_LCD_COMMAND 0b00001110 ; Cursor on, bar, no blink
                                 
00004e ef40                      	ldi temp1, PORTLDIR	 	  ; columns are outputs, rows are inputs
00004f 9340 010a                 	sts	DDRL, temp1
000051 ef4f                      	ser temp1				  ; PORTC is outputs
000052 b947                      	out DDRC, temp1				
000053 b948                      	out PORTC, temp1
                                 
000054 ef4f                      	ser temp1				  ; PORTE is intputs
000055 b94d                      	out DDRE, temp1				
000056 b94e                      	out PORTE, temp1
                                 
000057 2455                      	clr	X_target			  ; init registers
000058 2466                      	clr	Y_target
000059 2477                      	clr	height
00005a 24dd                      	clr	direction
00005b 24cc                      	clr	counter
00005c 2488                      	clr	X_cursor
00005d 2499                      	Clr	Y_cursor
                                 
00005e e041                      	ldi	temp1,1
00005f 2e94                      	mov	Y_cursor,temp1			; set Y cursor to 1
                                 
                                 
000060 2744
000061 9340 009b
000063 e040
000064 9340 009a
000066 e041
000067 9340 0091
000069 e241
00006a 9340 0090                 	SET_MOTOR_SPEED	0x00		; stop motor
                                 
00006c d162                      	rcall	display_welcome		; show welcome words
                                 
00006d ef4f
00006e b948
00006f d158
000070 d157
000071 2744
000072 b948
000073 d154
000074 d153                      	FLASH		; flash	LED	2 times
000075 ef4f
000076 b948
000077 d150
000078 d14f
000079 2744
00007a b948
00007b d14c
00007c d14b                      	FLASH
                                 
00007d e001
00007e d0da
00007f d0e9                      	DO_LCD_COMMAND 0b00000001	; clear LED
                                 
000080 d196                      	rcall	display_input_x
                                 	
000081 eee8                      	ldi zl, low(matrix<<1)		; set Z register to program memory matrix
000082 e0f6                      	ldi zh, high(matrix<<1)
000083 50e1                      	subi	ZL,1				; Z = Z - 1
000084 40f0                      	sbci	ZH,0
                                 
                                 main:
000085 ee3f                      	ldi cmask, INITCOLMASK		; initial column mask
000086 2711                      	clr	col						; initial column
                                 colloop:
000087 3014                      	cpi col, 4
000088 f3e1                      	breq main
000089 9330 010b                 	sts	PORTL, cmask			; set column to mask value (one column off)
00008b ef4f                      	ldi temp1, 0xFF
                                 delay:
00008c 954a                      	dec temp1
00008d f7f1                      	brne delay
                                 
00008e 9140 0109                 	lds	temp1, PINL				; read PORTD
000090 704f                      	andi temp1, ROWMASK
000091 304f                      	cpi temp1, 0xF				; check if any rows are on
000092 f059                      	breq nextcol
                                 								; if yes, find which row is on
000093 e021                      	ldi rmask, INITROWMASK		; initialise row check
000094 2700                      	clr	row						; initial row
                                 rowloop:
000095 3004                      	cpi row, 4
000096 f039                      	breq nextcol
000097 2f54                      	mov temp2, temp1
000098 2352                      	and temp2, rmask			; check masked bit
000099 f041                      	breq convert 				; if bit is clear, convert the bitcode
00009a 9503                      	inc row						; else move to the next row
00009b 0f22                      	lsl rmask					; shift the mask to the next bit
00009c 940c 0095                 	jmp rowloop
                                 
                                 nextcol:
00009e 0f33                      	lsl cmask					; else get new mask by shifting and 
00009f 9513                      	inc col						; increment column value
0000a0 940c 0087                 	jmp colloop					; and check the next column
                                 
                                 convert:
0000a2 3013                      	cpi col, 3					; if column is 3 we have a letter
0000a3 f081                      	breq letters				
0000a4 3003                      	cpi row, 3					; if row is 3 we have a symbol or 0
                                 
0000a5 f091                      	breq symbols
0000a6 2f40                      	mov temp1, row				; otherwise we have a number in 1-9
0000a7 0f44                      	lsl temp1
0000a8 0f40                      	add temp1, row				; temp1 = row * 3
0000a9 0f41                      	add temp1, col				; add the column address to get the value
0000aa 5c4f                      	subi temp1, -'1'			; add the value of character '0'
                                 	
0000ab d11c                      	rcall sleep_300ms			; verify input
0000ac 5340
0000ad e05a
0000ae 9e65
0000af 2c60
0000b0 0e64
0000b1 5d40                      	DECIMAL_SHIFT Y_target,temp1; Y_target = Y_target*10+temp1
0000b2 940c 00d2                 	jmp convert_end				
                                 
                                 letters:
0000b4 e441                      	ldi temp1, 'A'
0000b5 0f40                      	add temp1, row				; increment the character 'A' by the row value
0000b6 940c 00d2                 	jmp convert_end
                                 
                                 symbols:
0000b8 3010                      	cpi col, 0					; check if we have a star
0000b9 f029                      	breq star
0000ba 3011                      	cpi col, 1					; or if we have zero
0000bb f071                      	breq zero					
0000bc e243                      	ldi temp1, '#'				; if not we have hash
0000bd 940c 00d2                 	jmp convert_end
                                 star:
0000bf e24a                      	ldi temp1, '*'				; set to star
0000c0 d107                      	rcall	sleep_300ms
0000c1 2c56                      	mov	X_target,Y_target
0000c2 2466                      	clr	Y_target
                                 
0000c3 e001
0000c4 d094
0000c5 d0a3                      	DO_LCD_COMMAND 0b00000001
                                 
0000c6 b858                      	out PORTC, X_target
0000c7 d193                      	rcall	display_input_y
0000c8 940c 0085                 	jmp main
                                 zero:
0000ca e340                      	ldi temp1, '0'				; set to zero
0000cb d0fc                      	rcall	sleep_300ms			; verify input
0000cc 5340
0000cd e05a
0000ce 9e65
0000cf 2c60
0000d0 0e64
0000d1 5d40                      	DECIMAL_SHIFT	Y_target,temp1 ; Y_target = Y_target*10
                                 
                                 convert_end:
0000d2 3243                      	cpi	temp1,'#'				; check input is '#'
0000d3 f039                      	breq end_input
0000d4 2f04
0000d5 d08a
0000d6 d092                      	DO_LCD_DATA temp1
0000d7 5340                      	subi temp1,'0'
0000d8 b948                      	out PORTC, temp1			; write value to PORTC
0000d9 d0ee                      	rcall sleep_300ms			; verify input
0000da cfaa                      	rjmp main					
                                 
                                 end_input:
0000db e001
0000dc d07c
0000dd d08b                      	DO_LCD_COMMAND 0b00000001
0000de d1c0                      	rcall  display_start
0000df b868                      	out PORTC, Y_target
                                 	check_botton:
0000e0 9b48                      		sbis PIND,0					; if	button	is	unpressed	skip	next	line
0000e1 c001                      		rjmp start					; button is pressed, drone start searching
0000e2 cffd                      	rjmp check_botton
                                 
                                 start:
0000e3 d0e4                      	rcall sleep_300ms				; verify input
                                 	;DO_LCD_COMMAND 0b00000001
0000e4 9b48                      	sbis PIND,0						; check button press again or not
0000e5 c016                      	rjmp abort						; abort searching
0000e6 2744
0000e7 9340 009b
0000e9 ef4f
0000ea 9340 009a
0000ec e041
0000ed 9340 0091
0000ef e241
0000f0 9340 0090                 	SET_MOTOR_SPEED	0xff			; high speed motor 
0000f2 e040
0000f3 9340 0080
0000f5 e044
0000f6 9340 0081
0000f8 e041
0000f9 9340 006f                 	INIT_TIME1						; start timer 1
0000fb cfe7                      	rjmp start
                                 
                                 abort:
0000fc e040
0000fd 9340 0080
0000ff e040
000100 9340 0081
000102 e041
000103 9340 006f                 	STOP_TIME1						; stop timer 1
000105 2744
000106 9340 009b
000108 e040
000109 9340 009a
00010b e041
00010c 9340 0091
00010e e241
00010f 9340 0090                 	SET_MOTOR_SPEED	0x00			; stop motor
000111 d206                      	rcall	display_abort			; display info to LCD
                                 	
                                 halt:
000112 cfff                      	rjmp	halt
                                 
                                 Timer1OverFlow:						; call every 1 s by timer 1 
000113 94c3                      	inc	counter						; increase counter 
000114 1485                      	cp X_cursor,X_target			; check X cursor
000115 f009                      	breq check_Y
000116 f419                      	brne move
                                 	check_Y:						; check Y cursor
000117 1496                      		cp	Y_cursor,Y_target
000118 f129                      		breq found					; both equal go found
000119 f401                      		brne move					
                                 
                                 	move:
00011a e441                      		ldi	 temp1,NUMBER_COL		; check should change line or not
00011b 16c4                      		cp counter,temp1
00011c f45c                      		brge next_line
00011d e040                      		ldi	 temp1,0
00011e 16d4                      		cp direction,temp1			; check direction
00011f f009                      		breq forward				; move forward
000120 f419                      		brne back					; move back
                                 
                                 	forward:
000121 9483                      		inc	X_cursor				; increase X cursor
000122 9631                      		adiw ZH:ZL,1
000123 c016                      		rjmp search_position		; update position
                                 
                                 	back:							; decrease X cursor
000124 948a                      		dec	X_cursor
000125 50e1                      		subi ZL,1
000126 40f0                      		sbci ZH,0		
000127 c012                      		rjmp search_position		; update position
                                 
                                 next_line:
000128 2744                      	clr	temp1						; change direction
000129 16d4                      	cp direction,temp1				; 0 --> forward
00012a f009                      	breq set_direction_1			; 1 --> back
00012b f419                       	brne set_direction_0
                                 
                                 	set_direction_1:
00012c e041                      		ldi	temp1,1
00012d 2ed4                      		mov	direction,temp1
00012e c003                      		rjmp change_line
                                 
                                 	set_direction_0:
00012f e040                      		ldi	temp1,0
000130 2ed4                      		mov	direction,temp1
000131 c000                      		rjmp change_line
                                 
                                 	change_line:					; move Z register to next line
000132 24cc                      		clr	counter
000133 e041                      		ldi	temp1,1
000134 2ec4                      		mov	counter,temp1
000135 9493                      		inc	Y_cursor
000136 96ff                      		adiw ZH:ZL,NUMBER_COL_dec_2	; fix adiw out of range problem
000137 9631                      		adiw ZH:ZL,1
000138 9631                      		adiw ZH:ZL,1
000139 d000                      		rcall search_position
                                 
                                 search_position:					; show current position
00013a 90b4                      	lpm		reader, Z
00013b 2cab                      	mov		Z_cursor,reader
00013c d1ba                      	rcall	display_position
00013d 9518                      	reti
                                 
                                 found:								; show found result
00013e ef4f                      	ser	temp1	
00013f b948                      	out	PortC,temp1					; set all LED light on
000140 2744
000141 9340 009b
000143 e440
000144 9340 009a
000146 e041
000147 9340 0091
000149 e241
00014a 9340 0090                 	SET_MOTOR_SPEED	0x40			; half speed motor
00014c d206                      	rcall display_found				
00014d e040
00014e 9340 0080
000150 e040
000151 9340 0081
000153 e041
000154 9340 006f                 	STOP_TIME1						; stop timer 1
000156 940c 0158                 	jmp	end
                                 
                                 end:
                                 	;FLASH
000158 cfff                      	rjmp	end
                                 
                                 /////////////////////////////////////////////////
                                 //											   //
                                 //				LCD Display Functions		   //
                                 //											   //
                                 /////////////////////////////////////////////////
                                 
                                 lcd_command:
000159 bb01                      	STORE LCD_DATA_PORT, r16
00015a d053                      	rcall sleep_1ms
00015b 9a16                      	LDC_SET LCD_E
00015c d051                      	rcall sleep_1ms
00015d 9816                      	LDC_CLR LCD_E
00015e d04f                      	rcall sleep_1ms
00015f 9508                      	ret
                                 
                                 lcd_data:
000160 bb01                      	STORE LCD_DATA_PORT, r16	
000161 9a17                      	LDC_SET LCD_RS			;RS	->	1	
000162 d04b                      	rcall sleep_1ms
000163 9a16                      	LDC_SET LCD_E			;Enable	input
000164 d049                      	rcall sleep_1ms
000165 9816                      	LDC_CLR LCD_E			;Disable	input
000166 d047                      	rcall sleep_1ms
000167 9817                      	LDC_CLR LCD_RS			;RS	->	0
000168 9508                      	ret
                                 
                                 lcd_wait:
000169 930f                      	push r16
00016a 2700                      	clr r16
00016b bb00                      	STORE LCD_DATA_DDR, r16
00016c bb01                      	STORE LCD_DATA_PORT, r16
00016d 9a15                      	LDC_SET LCD_RW
                                 lcd_wait_loop:
00016e d03f                      	rcall sleep_1ms
00016f 9a16                      	LDC_SET LCD_E
000170 d03d                      	rcall sleep_1ms
000171 b10f                      	LOAD r16, LCD_DATA_PIN
000172 9816                      	LDC_CLR LCD_E
000173 fd07                      	sbrc r16, 7
000174 cff9                      	rjmp lcd_wait_loop
000175 9815                      	LDC_CLR LCD_RW
000176 ef0f                      	ser r16
000177 bb00                      	STORE LCD_DATA_DDR, r16
000178 910f                      	pop r16
000179 9508                      	ret
                                 
                                 
                                 LCD_DISPLAY_NUMBER:
                                 	;Converts the total into separate digits for printing.
00017a 930f                      	push r16;
00017b 931f                      	push r17;
00017c 932f                      	push r18;
00017d 933f                      	push r19;
00017e 935f                      	push temp2;
                                 
00017f 2d0b                      	mov r16,reader ;Temporary total
000180 2711                      	clr r17; Hundreds
000181 2722                      	clr r18; Tens
000182 2733                      	clr r19; Ones
                                 
                                 	;Extract Hundreds
                                 	extract_100s:
000183 3604                      		cpi r16, 100			;number	<-->100
000184 f020                      		brlo extract_10s		;go	10
000185 9513                      		inc r17;				;hundred+1
000186 5604                      		subi r16, 100			;x-100
000187 940c 0183                 		jmp extract_100s
                                 
                                 	;Ectract Tens
                                 	extract_10s:
000189 300a                      		cpi r16, 10
00018a f018                      		brlo extract_1s
00018b 9523                      		inc r18
00018c 500a                      		subi r16, 10
00018d cffb                      		rjmp extract_10s
                                 
                                 	;Extract Ones
                                 	extract_1s:
00018e 3001                      		cpi r16, 1
00018f f018                      		brlo display_digits
000190 9533                      		inc r19
000191 5001                      		subi r16, 1
000192 cffb                      		rjmp extract_1s
                                 
                                 	display_digits:
000193 2f51                      		mov temp2, r17
000194 3050                      		cpi temp2, 0
000195 f021                      		breq display_digits_two
000196 5d50                      		subi temp2, -'0'
                                 		;data contains the value in ascii to be written
                                 		;rcall lcd_wait_busy
000197 2f05
000198 dfc7
000199 dfcf                      		DO_LCD_DATA	temp2	; write the character to the screen
                                 
                                 		display_digits_two:
                                 
00019a 3020                      			cpi r18, 0
00019b f411                      			brne display_digits_two_continue
00019c 3010                      			cpi r17, 0
00019d f029                      			breq display_digits_one
                                 
                                 			display_digits_two_continue:
00019e 2f52                      			mov temp2, r18
00019f 5d50                          		subi temp2, -'0'
                                     		;data contains the value in ascii to be written
                                     		;rcall lcd_wait_busy
0001a0 2f05
0001a1 dfbe
0001a2 dfc6                          		DO_LCD_DATA	temp2	; write the character to the screen
                                 
                                 		display_digits_one:
0001a3 2f53                      			mov temp2, r19
0001a4 5d50                          		subi temp2, -'0'
                                     		;data contains the value in ascii to be written
                                     		;rcall lcd_wait_busy
0001a5 2f05
0001a6 dfb9
0001a7 dfc1                          		DO_LCD_DATA	temp2	; write the character to the screen
                                 
0001a8 915f                      	pop temp2
0001a9 917f                      	pop r23
0001aa 916f                      	pop r22
0001ab 915f                      	pop r21
0001ac 914f                      	pop r20
0001ad 9508                      	ret
                                 
                                 /////////////////////////////////////////////////
                                 //											   //
                                 //					Sleep					   //
                                 //											   //
                                 /////////////////////////////////////////////////
                                 
                                 
                                 .equ F_CPU = 16000000
                                 .equ DELAY_1MS = F_CPU / 4 / 1000 - 4
                                 ; 4 cycles per iteration - setup/call-return overhead
                                 
                                 sleep_1ms:			;delay
0001ae 938f                      	push r24
0001af 939f                      	push r25
0001b0 e09f                      	ldi r25, high(DELAY_1MS)
0001b1 e98c                      	ldi r24, low(DELAY_1MS)
                                 delayloop_1ms:
0001b2 9701                      	sbiw r25:r24, 1
0001b3 f7f1                      	brne delayloop_1ms
0001b4 919f                      	pop r25
0001b5 918f                      	pop r24
0001b6 9508                      	ret
                                 
                                 sleep_5ms:
0001b7 dff6                      	rcall sleep_1ms
0001b8 dff5                      	rcall sleep_1ms
0001b9 dff4                      	rcall sleep_1ms
0001ba dff3                      	rcall sleep_1ms
0001bb dff2                      	rcall sleep_1ms
0001bc 9508                      	ret
                                 
                                 sleep_50ms:
0001bd dff9                      	rcall sleep_5ms
0001be dff8                      	rcall sleep_5ms
0001bf dff7                      	rcall sleep_5ms
0001c0 dff6                      	rcall sleep_5ms
0001c1 dff5                      	rcall sleep_5ms
0001c2 dff4                      	rcall sleep_5ms
0001c3 dff3                      	rcall sleep_5ms
0001c4 dff2                      	rcall sleep_5ms
0001c5 dff1                      	rcall sleep_5ms
0001c6 dff0                      	rcall sleep_5ms
0001c7 9508                      	ret
                                 
                                 sleep_300ms:
0001c8 dff4                      	rcall sleep_50ms
0001c9 dff3                      	rcall sleep_50ms
0001ca dff2                      	rcall sleep_50ms
0001cb dff1                      	rcall sleep_50ms
0001cc dff0                      	rcall sleep_50ms
0001cd dfef                      	rcall sleep_50ms
0001ce 9508                      	ret
                                 
                                 /////////////////////////////////////////////////
                                 //											   //
                                 //				LCD Words					   //
                                 //											   //
                                 /////////////////////////////////////////////////
                                 
                                 display_welcome:
0001cf e547                      	ldi	temp1,'W'
0001d0 2f04
0001d1 df8e
0001d2 df96                      	DO_LCD_DATA temp1
                                 
0001d3 e645                      	ldi	temp1,'e'
0001d4 2f04
0001d5 df8a
0001d6 df92                      	DO_LCD_DATA temp1
                                 
0001d7 e64c                      	ldi	temp1,'l'
0001d8 2f04
0001d9 df86
0001da df8e                      	DO_LCD_DATA temp1
                                 
0001db e643                      	ldi	temp1,'c'
0001dc 2f04
0001dd df82
0001de df8a                      	DO_LCD_DATA temp1
                                 	
0001df e64f                      	ldi	temp1,'o'
0001e0 2f04
0001e1 df7e
0001e2 df86                      	DO_LCD_DATA temp1
                                 
0001e3 e64d                      	ldi	temp1,'m'
0001e4 2f04
0001e5 df7a
0001e6 df82                      	DO_LCD_DATA temp1
                                 
0001e7 e645                      	ldi	temp1,'e'
0001e8 2f04
0001e9 df76
0001ea df7e                      	DO_LCD_DATA temp1
                                 
0001eb e241                      	ldi	temp1,'!'
0001ec 2f04
0001ed df72
0001ee df7a                      	DO_LCD_DATA temp1
                                 
0001ef ec00
0001f0 df68
0001f1 df77                      	DO_LCD_COMMAND 0b11000000
                                 
0001f2 e445                      	ldi	temp1,'E'
0001f3 2f04
0001f4 df6b
0001f5 df73                      	DO_LCD_DATA temp1
                                 
0001f6 e64e                      	ldi	temp1,'n'
0001f7 2f04
0001f8 df67
0001f9 df6f                      	DO_LCD_DATA temp1
                                 
0001fa e744                      	ldi	temp1,'t'
0001fb 2f04
0001fc df63
0001fd df6b                      	DO_LCD_DATA temp1
                                 
0001fe e645                      	ldi	temp1,'e'
0001ff 2f04
000200 df5f
000201 df67                      	DO_LCD_DATA temp1
                                 	
000202 e742                      	ldi	temp1,'r'
000203 2f04
000204 df5b
000205 df63                      	DO_LCD_DATA temp1
                                 
000206 e34a                      	ldi	temp1,':'
000207 2f04
000208 df57
000209 df5f                      	DO_LCD_DATA temp1
                                 
00020a e548                      	ldi	temp1,'X'
00020b 2f04
00020c df53
00020d df5b                      	DO_LCD_DATA temp1
                                 
00020e e246                      	ldi	temp1,'&'
00020f 2f04
000210 df4f
000211 df57                      	DO_LCD_DATA temp1
                                 
000212 e549                      	ldi	temp1,'Y'
000213 2f04
000214 df4b
000215 df53                      	DO_LCD_DATA temp1
000216 9508                      	ret
                                 
                                 display_input_x:
000217 e445                      	ldi	temp1,'E'
000218 2f04
000219 df46
00021a df4e                      	DO_LCD_DATA temp1
                                 
00021b e64e                      	ldi	temp1,'n'
00021c 2f04
00021d df42
00021e df4a                      	DO_LCD_DATA temp1
                                 
00021f e744                      	ldi	temp1,'t'
000220 2f04
000221 df3e
000222 df46                      	DO_LCD_DATA temp1
                                 
000223 e645                      	ldi	temp1,'e'
000224 2f04
000225 df3a
000226 df42                      	DO_LCD_DATA temp1
                                 	
000227 e742                      	ldi	temp1,'r'
000228 2f04
000229 df36
00022a df3e                      	DO_LCD_DATA temp1
                                 
00022b e240                      	ldi	temp1,' '
00022c 2f04
00022d df32
00022e df3a                      	DO_LCD_DATA temp1
                                 
00022f e548                      	ldi	temp1,'X'
000230 2f04
000231 df2e
000232 df36                      	DO_LCD_DATA temp1
                                 
000233 e240                      	ldi	temp1,' '
000234 2f04
000235 df2a
000236 df32                      	DO_LCD_DATA temp1
                                 
000237 e248                      	ldi	temp1,'('
000238 2f04
000239 df26
00023a df2e                      	DO_LCD_DATA temp1
                                 	
00023b e341                      	ldi	temp1,'1'
00023c 2f04
00023d df22
00023e df2a                      	DO_LCD_DATA temp1
                                 
00023f e24d                      	ldi	temp1,'-'
000240 2f04
000241 df1e
000242 df26                      	DO_LCD_DATA temp1
                                 
000243 e346                      	ldi	temp1,'6'
000244 2f04
000245 df1a
000246 df22                      	DO_LCD_DATA temp1
                                 
000247 e344                      	ldi	temp1,'4'
000248 2f04
000249 df16
00024a df1e                      	DO_LCD_DATA temp1
                                 
00024b e249                      	ldi	temp1,')'
00024c 2f04
00024d df12
00024e df1a                      	DO_LCD_DATA temp1
                                 
00024f ec00
000250 df08
000251 df17                      	DO_LCD_COMMAND 0b11000000
                                 
000252 e548                      	ldi	temp1,'X'
000253 2f04
000254 df0b
000255 df13                      	DO_LCD_DATA temp1
                                 
000256 e34d                      	ldi	temp1,'='
000257 2f04
000258 df07
000259 df0f                      	DO_LCD_DATA temp1
00025a 9508                      	ret
                                 
                                 
                                 display_input_y:
00025b e445                      	ldi	temp1,'E'
00025c 2f04
00025d df02
00025e df0a                      	DO_LCD_DATA temp1
                                 
00025f e64e                      	ldi	temp1,'n'
000260 2f04
000261 defe
000262 df06                      	DO_LCD_DATA temp1
                                 
000263 e744                      	ldi	temp1,'t'
000264 2f04
000265 defa
000266 df02                      	DO_LCD_DATA temp1
                                 
000267 e645                      	ldi	temp1,'e'
000268 2f04
000269 def6
00026a defe                      	DO_LCD_DATA temp1
                                 	
00026b e742                      	ldi	temp1,'r'
00026c 2f04
00026d def2
00026e defa                      	DO_LCD_DATA temp1
                                 
00026f e240                      	ldi	temp1,' '
000270 2f04
000271 deee
000272 def6                      	DO_LCD_DATA temp1
                                 
000273 e549                      	ldi	temp1,'Y'
000274 2f04
000275 deea
000276 def2                      	DO_LCD_DATA temp1
                                 
000277 e240                      	ldi	temp1,' '
000278 2f04
000279 dee6
00027a deee                      	DO_LCD_DATA temp1
                                 
00027b e248                      	ldi	temp1,'('
00027c 2f04
00027d dee2
00027e deea                      	DO_LCD_DATA temp1
                                 	
00027f e341                      	ldi	temp1,'1'
000280 2f04
000281 dede
000282 dee6                      	DO_LCD_DATA temp1
                                 
000283 e24d                      	ldi	temp1,'-'
000284 2f04
000285 deda
000286 dee2                      	DO_LCD_DATA temp1
                                 
000287 e346                      	ldi	temp1,'6'
000288 2f04
000289 ded6
00028a dede                      	DO_LCD_DATA temp1
                                 
00028b e344                      	ldi	temp1,'4'
00028c 2f04
00028d ded2
00028e deda                      	DO_LCD_DATA temp1
                                 
00028f e249                      	ldi	temp1,')'
000290 2f04
000291 dece
000292 ded6                      	DO_LCD_DATA temp1
                                 
000293 ec00
000294 dec4
000295 ded3                      	DO_LCD_COMMAND 0b11000000
                                 
000296 e549                      	ldi	temp1,'Y'
000297 2f04
000298 dec7
000299 decf                      	DO_LCD_DATA temp1
                                 
00029a e34d                      	ldi	temp1,'='
00029b 2f04
00029c dec3
00029d decb                      	DO_LCD_DATA temp1
00029e 9508                      	ret
                                 
                                 
                                 display_start:
00029f e540                      	ldi	temp1,'P'
0002a0 2f04
0002a1 debe
0002a2 dec6                      	DO_LCD_DATA temp1
                                 
0002a3 e745                      	ldi	temp1,'u'
0002a4 2f04
0002a5 deba
0002a6 dec2                      	DO_LCD_DATA temp1
                                 
0002a7 e743                      	ldi	temp1,'s'
0002a8 2f04
0002a9 deb6
0002aa debe                      	DO_LCD_DATA temp1
                                 
0002ab e648                      	ldi	temp1,'h'
0002ac 2f04
0002ad deb2
0002ae deba                      	DO_LCD_DATA temp1
                                 
0002af e240                      	ldi	temp1,' '
0002b0 2f04
0002b1 deae
0002b2 deb6                      	DO_LCD_DATA temp1
                                 
0002b3 e442                      	ldi	temp1,'B'
0002b4 2f04
0002b5 deaa
0002b6 deb2                      	DO_LCD_DATA temp1
                                 
0002b7 e745                      	ldi	temp1,'u'
0002b8 2f04
0002b9 dea6
0002ba deae                      	DO_LCD_DATA temp1
                                 
0002bb e744                      	ldi	temp1,'t'
0002bc 2f04
0002bd dea2
0002be deaa                      	DO_LCD_DATA temp1
                                 	
0002bf e744                      	ldi	temp1,'t'
0002c0 2f04
0002c1 de9e
0002c2 dea6                      	DO_LCD_DATA temp1
                                 
0002c3 e64f                      	ldi	temp1,'o'
0002c4 2f04
0002c5 de9a
0002c6 dea2                      	DO_LCD_DATA temp1
                                 
0002c7 e64e                      	ldi	temp1,'n'
0002c8 2f04
0002c9 de96
0002ca de9e                      	DO_LCD_DATA temp1
                                 
0002cb ec00
0002cc de8c
0002cd de9b                      	DO_LCD_COMMAND 0b11000000
                                 
0002ce e544                      	ldi	temp1,'T'
0002cf 2f04
0002d0 de8f
0002d1 de97                      	DO_LCD_DATA temp1
                                 
0002d2 e64f                      	ldi	temp1,'o'
0002d3 2f04
0002d4 de8b
0002d5 de93                      	DO_LCD_DATA temp1
                                 
0002d6 e240                      	ldi	temp1,' '
0002d7 2f04
0002d8 de87
0002d9 de8f                      	DO_LCD_DATA temp1
                                 
0002da e543                      	ldi	temp1,'S'
0002db 2f04
0002dc de83
0002dd de8b                      	DO_LCD_DATA temp1
                                 
0002de e744                      	ldi	temp1,'t'
0002df 2f04
0002e0 de7f
0002e1 de87                      	DO_LCD_DATA temp1
                                 
0002e2 e641                      	ldi	temp1,'a'
0002e3 2f04
0002e4 de7b
0002e5 de83                      	DO_LCD_DATA temp1
                                 
0002e6 e742                      	ldi	temp1,'r'
0002e7 2f04
0002e8 de77
0002e9 de7f                      	DO_LCD_DATA temp1
                                 	
0002ea e744                      	ldi	temp1,'t'
0002eb 2f04
0002ec de73
0002ed de7b                      	DO_LCD_DATA temp1
                                 
0002ee e240                      	ldi	temp1,' '
0002ef 2f04
0002f0 de6f
0002f1 de77                      	DO_LCD_DATA temp1
                                 
0002f2 e447                      	ldi	temp1,'G'
0002f3 2f04
0002f4 de6b
0002f5 de73                      	DO_LCD_DATA temp1
                                 
0002f6 9508                      	ret
                                 
                                 
                                 display_position:
                                 
0002f7 e001
0002f8 de60
0002f9 de6f                      	DO_LCD_COMMAND 0b00000001
                                 
0002fa e248                      	ldi	temp1,'('
0002fb 2f04
0002fc de63
0002fd de6b                      	DO_LCD_DATA temp1
                                 
0002fe 2cb8                      	mov	reader,	X_cursor
0002ff de7a                      	rcall	LCD_DISPLAY_NUMBER
                                 
000300 e24c                      	ldi	temp1,','
000301 2f04
000302 de5d
000303 de65                      	DO_LCD_DATA temp1
                                 
000304 2cb9                      	mov	reader,	Y_cursor
000305 de74                      	rcall	LCD_DISPLAY_NUMBER
                                 
000306 e24c                      	ldi	temp1,','
000307 2f04
000308 de57
000309 de5f                      	DO_LCD_DATA temp1
                                 
00030a 2cba                      	mov	reader,	Z_cursor
00030b de6e                      	rcall	LCD_DISPLAY_NUMBER
                                 
00030c e249                      	ldi	temp1,')'
00030d 2f04
00030e de51
00030f de59                      	DO_LCD_DATA temp1
                                 
000310 ec00
000311 de47
000312 de56                      	DO_LCD_COMMAND 0b11000000
                                 
000313 e543                      	ldi	temp1,'S'
000314 2f04
000315 de4a
000316 de52                      	DO_LCD_DATA temp1
                                 
000317 9508                      	ret
                                 
                                 
                                 display_abort:
                                 
000318 e001
000319 de3f
00031a de4e                      	DO_LCD_COMMAND 0b00000001
                                 
00031b e543                      	ldi	temp1,'S'
00031c 2f04
00031d de42
00031e de4a                      	DO_LCD_DATA temp1
                                 
00031f e645                      	ldi	temp1,'e'
000320 2f04
000321 de3e
000322 de46                      	DO_LCD_DATA temp1
                                 
000323 e641                      	ldi	temp1,'a'
000324 2f04
000325 de3a
000326 de42                      	DO_LCD_DATA temp1
                                 
000327 e742                      	ldi	temp1,'r'
000328 2f04
000329 de36
00032a de3e                      	DO_LCD_DATA temp1
                                 
00032b e643                      	ldi	temp1,'c'
00032c 2f04
00032d de32
00032e de3a                      	DO_LCD_DATA temp1
                                 
00032f e648                      	ldi	temp1,'h'
000330 2f04
000331 de2e
000332 de36                      	DO_LCD_DATA temp1
                                 
000333 e240                      	ldi	temp1,' '
000334 2f04
000335 de2a
000336 de32                      	DO_LCD_DATA temp1
                                 
000337 e441                      	ldi	temp1,'A'
000338 2f04
000339 de26
00033a de2e                      	DO_LCD_DATA temp1
                                 
00033b e642                      	ldi	temp1,'b'
00033c 2f04
00033d de22
00033e de2a                      	DO_LCD_DATA temp1
                                 
00033f e64f                      	ldi	temp1,'o'
000340 2f04
000341 de1e
000342 de26                      	DO_LCD_DATA temp1
                                 
000343 e742                      	ldi	temp1,'r'
000344 2f04
000345 de1a
000346 de22                      	DO_LCD_DATA temp1
                                 
000347 e744                      	ldi	temp1,'t'
000348 2f04
000349 de16
00034a de1e                      	DO_LCD_DATA temp1
                                 
00034b ec00
00034c de0c
00034d de1b                      	DO_LCD_COMMAND 0b11000000
                                 
00034e e441                      	ldi	temp1,'A'
00034f 2f04
000350 de0f
000351 de17                      	DO_LCD_DATA temp1
                                 
000352 9508                      	ret
                                 
                                 display_found:
                                 
000353 e001
000354 de04
000355 de13                      	DO_LCD_COMMAND 0b00000001
                                 
000356 e248                      	ldi	temp1,'('
000357 2f04
000358 de07
000359 de0f                      	DO_LCD_DATA temp1
                                 
00035a 2cb8                      	mov	reader,	X_cursor
00035b de1e                      	rcall	LCD_DISPLAY_NUMBER
                                 
00035c e24c                      	ldi	temp1,','
00035d 2f04
00035e de01
00035f de09                      	DO_LCD_DATA temp1
                                 
000360 2cb9                      	mov	reader,	Y_cursor
000361 de18                      	rcall	LCD_DISPLAY_NUMBER
                                 
000362 e24c                      	ldi	temp1,','
000363 2f04
000364 ddfb
000365 de03                      	DO_LCD_DATA temp1
                                 
000366 2cba                      	mov	reader,	Z_cursor
000367 de12                      	rcall	LCD_DISPLAY_NUMBER
                                 
000368 e249                      	ldi	temp1,')'
000369 2f04
00036a ddf5
00036b ddfd                      	DO_LCD_DATA temp1
                                 
00036c ec00
00036d ddeb
00036e ddfa                      	DO_LCD_COMMAND 0b11000000
                                 
00036f e446                      	ldi	temp1,'F'
000370 2f04
000371 ddee
000372 ddf6                      	DO_LCD_DATA temp1
                                 
000373 9508                      	ret
                                 
                                 	/*
                                 	DO_LCD_COMMAND 0b00000001
                                 
                                 	ldi	temp1,'P'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'o'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'s'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'i'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'c'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'t'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'i'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'o'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'n'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,' '
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'F'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'o'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'u'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'n'
                                 	DO_LCD_DATA temp1
                                 
                                 	ldi	temp1,'d'
                                 	DO_LCD_DATA temp1
                                 
                                 	DO_LCD_COMMAND 0b11000000
                                 	ldi	temp1,'G'
                                 	DO_LCD_DATA temp1
                                 
                                 	*/


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega2560" register use summary:
x  :   0 y  :   0 z  :   1 r0 :   2 r1 :   0 r2 :   0 r3 :   0 r4 :   0 
r5 :   4 r6 :  11 r7 :   1 r8 :   6 r9 :   6 r10:   3 r11:   9 r12:   5 
r13:   5 r14:   0 r15:   0 r16: 154 r17:  12 r18:   8 r19:   7 r20: 295 
r21:  19 r22:   1 r23:   1 r24:   4 r25:   4 r26:   0 r27:   0 r28:   0 
r29:   0 r30:   7 r31:   7 
Registers used: 23 out of 35 (65.7%)

"ATmega2560" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   5 adiw  :   4 and   :   1 
andi  :   1 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :  15 brge  :   1 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   3 brlt  :   0 brmi  :   0 
brne  :   7 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   5 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :  23 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   5 cpc   :   0 
cpi   :  14 cpse  :   0 dec   :   2 eicall:   0 eijmp :   0 elpm  :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   8 jmp   :  10 ld    :   0 ldd   :   0 ldi   : 157 
lds   :   1 lpm   :   2 lsl   :   3 lsr   :   0 mov   : 117 movw  :   0 
mul   :   2 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  23 pop   :   8 push  :   8 rcall : 294 ret   :  15 
reti  :   1 rjmp  :  14 rol   :   0 ror   :   0 sbc   :   0 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   2 sbiw  :   1 sbr   :   0 sbrc  :   1 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   7 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   0 std   :   0 sts   :  27 sub   :   0 subi  :  14 swap  :   0 
tst   :   0 wdr   :   0 
Instructions used: 37 out of 116 (31.9%)

"ATmega2560" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0016e8   1692   4096   5788  262144   2.2%
[.dseg] 0x000200 0x000200      0      0      0    8192   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 0 warnings
